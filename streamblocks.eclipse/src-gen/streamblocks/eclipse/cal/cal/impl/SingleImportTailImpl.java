/**
 * generated by Xtext 2.21.0
 */
package streamblocks.eclipse.cal.cal.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import streamblocks.eclipse.cal.cal.CalPackage;
import streamblocks.eclipse.cal.cal.SingleImportTail;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Single Import Tail</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link streamblocks.eclipse.cal.cal.impl.SingleImportTailImpl#getLocalNameToken <em>Local Name Token</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SingleImportTailImpl extends ImportImpl implements SingleImportTail
{
  /**
   * The default value of the '{@link #getLocalNameToken() <em>Local Name Token</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocalNameToken()
   * @generated
   * @ordered
   */
  protected static final String LOCAL_NAME_TOKEN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLocalNameToken() <em>Local Name Token</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocalNameToken()
   * @generated
   * @ordered
   */
  protected String localNameToken = LOCAL_NAME_TOKEN_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SingleImportTailImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CalPackage.Literals.SINGLE_IMPORT_TAIL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLocalNameToken()
  {
    return localNameToken;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocalNameToken(String newLocalNameToken)
  {
    String oldLocalNameToken = localNameToken;
    localNameToken = newLocalNameToken;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CalPackage.SINGLE_IMPORT_TAIL__LOCAL_NAME_TOKEN, oldLocalNameToken, localNameToken));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CalPackage.SINGLE_IMPORT_TAIL__LOCAL_NAME_TOKEN:
        return getLocalNameToken();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CalPackage.SINGLE_IMPORT_TAIL__LOCAL_NAME_TOKEN:
        setLocalNameToken((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CalPackage.SINGLE_IMPORT_TAIL__LOCAL_NAME_TOKEN:
        setLocalNameToken(LOCAL_NAME_TOKEN_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CalPackage.SINGLE_IMPORT_TAIL__LOCAL_NAME_TOKEN:
        return LOCAL_NAME_TOKEN_EDEFAULT == null ? localNameToken != null : !LOCAL_NAME_TOKEN_EDEFAULT.equals(localNameToken);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (localNameToken: ");
    result.append(localNameToken);
    result.append(')');
    return result.toString();
  }

} //SingleImportTailImpl

package streamblocks.eclipse.cal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import streamblocks.eclipse.cal.services.CalGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalCalParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_BOOL", "RULE_REAL", "RULE_DECIMAL", "RULE_OCTAL", "RULE_HEX", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "';'", "'unit'", "':'", "'end'", "'namespace'", "'import'", "'all'", "'='", "'.'", "'.*'", "'network'", "'('", "','", "')'", "'==>'", "'var'", "'entities'", "'if'", "'then'", "'else'", "'['", "']'", "'structure'", "'-->'", "'{'", "'}'", "'foreach'", "'do'", "'elsif'", "'external'", "'type'", "'|'", "'actor'", "'repeat'", "'function'", "'procedure'", "'begin'", "'invariant'", "'endinvariant'", "'>'", "'priority'", "'schedule'", "'fsm'", "'endschedule'", "'regexp'", "'*'", "'?'", "'action'", "'guard'", "'initialize'", "':='", "'in'", "'while'", "'<--'", "'case'", "'of'", "'||'", "'or'", "'..'", "'&&'", "'and'", "'^'", "'&'", "'!='", "'<'", "'<='", "'>='", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'/'", "'div'", "'mod'", "'**'", "'~'", "'not'", "'#'", "'old'", "'as'", "'::'", "'for'", "'map'", "'->'", "'let'", "'endlet'", "'lambda'", "'endlambda'", "'proc'", "'endproc'", "'_'", "'@'", "'`'", "'int'", "'uint'", "'float'", "'double'", "'bool'", "'List'", "'String'", "'set'", "'entity'"
    };
    public static final int RULE_HEX=9;
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_REAL=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_BOOL=5;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int RULE_OCTAL=8;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=7;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=10;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalCalParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalCalParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalCalParser.tokenNames; }
    public String getGrammarFileName() { return "InternalCal.g"; }



     	private CalGrammarAccess grammarAccess;

        public InternalCalParser(TokenStream input, CalGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "CompilationUnit";
       	}

       	@Override
       	protected CalGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleCompilationUnit"
    // InternalCal.g:65:1: entryRuleCompilationUnit returns [EObject current=null] : iv_ruleCompilationUnit= ruleCompilationUnit EOF ;
    public final EObject entryRuleCompilationUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompilationUnit = null;


        try {
            // InternalCal.g:65:56: (iv_ruleCompilationUnit= ruleCompilationUnit EOF )
            // InternalCal.g:66:2: iv_ruleCompilationUnit= ruleCompilationUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompilationUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompilationUnit=ruleCompilationUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompilationUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompilationUnit"


    // $ANTLR start "ruleCompilationUnit"
    // InternalCal.g:72:1: ruleCompilationUnit returns [EObject current=null] : (this_AstPackage_0= ruleAstPackage | this_AstNamespace_1= ruleAstNamespace ) ;
    public final EObject ruleCompilationUnit() throws RecognitionException {
        EObject current = null;

        EObject this_AstPackage_0 = null;

        EObject this_AstNamespace_1 = null;



        	enterRule();

        try {
            // InternalCal.g:78:2: ( (this_AstPackage_0= ruleAstPackage | this_AstNamespace_1= ruleAstNamespace ) )
            // InternalCal.g:79:2: (this_AstPackage_0= ruleAstPackage | this_AstNamespace_1= ruleAstNamespace )
            {
            // InternalCal.g:79:2: (this_AstPackage_0= ruleAstPackage | this_AstNamespace_1= ruleAstNamespace )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==15) ) {
                alt1=1;
            }
            else if ( (LA1_0==20||LA1_0==108) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalCal.g:80:3: this_AstPackage_0= ruleAstPackage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCompilationUnitAccess().getAstPackageParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPackage_0=ruleAstPackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPackage_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:89:3: this_AstNamespace_1= ruleAstNamespace
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCompilationUnitAccess().getAstNamespaceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstNamespace_1=ruleAstNamespace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstNamespace_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompilationUnit"


    // $ANTLR start "entryRuleAstPackage"
    // InternalCal.g:101:1: entryRuleAstPackage returns [EObject current=null] : iv_ruleAstPackage= ruleAstPackage EOF ;
    public final EObject entryRuleAstPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPackage = null;


        try {
            // InternalCal.g:101:51: (iv_ruleAstPackage= ruleAstPackage EOF )
            // InternalCal.g:102:2: iv_ruleAstPackage= ruleAstPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPackage=ruleAstPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPackage"


    // $ANTLR start "ruleAstPackage"
    // InternalCal.g:108:1: ruleAstPackage returns [EObject current=null] : ( () ( (lv_rvc_1_0= 'package' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ';' ( ( (lv_entities_4_0= ruleAstEntity ) ) | ( (lv_imports_5_0= ruleRvcImport ) ) | ( (lv_units_6_0= ruleAstUnit ) ) )* ) ;
    public final EObject ruleAstPackage() throws RecognitionException {
        EObject current = null;

        Token lv_rvc_1_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_imports_5_0 = null;

        EObject lv_units_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:114:2: ( ( () ( (lv_rvc_1_0= 'package' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ';' ( ( (lv_entities_4_0= ruleAstEntity ) ) | ( (lv_imports_5_0= ruleRvcImport ) ) | ( (lv_units_6_0= ruleAstUnit ) ) )* ) )
            // InternalCal.g:115:2: ( () ( (lv_rvc_1_0= 'package' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ';' ( ( (lv_entities_4_0= ruleAstEntity ) ) | ( (lv_imports_5_0= ruleRvcImport ) ) | ( (lv_units_6_0= ruleAstUnit ) ) )* )
            {
            // InternalCal.g:115:2: ( () ( (lv_rvc_1_0= 'package' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ';' ( ( (lv_entities_4_0= ruleAstEntity ) ) | ( (lv_imports_5_0= ruleRvcImport ) ) | ( (lv_units_6_0= ruleAstUnit ) ) )* )
            // InternalCal.g:116:3: () ( (lv_rvc_1_0= 'package' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ';' ( ( (lv_entities_4_0= ruleAstEntity ) ) | ( (lv_imports_5_0= ruleRvcImport ) ) | ( (lv_units_6_0= ruleAstUnit ) ) )*
            {
            // InternalCal.g:116:3: ()
            // InternalCal.g:117:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstPackageAccess().getAstNamespaceAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:123:3: ( (lv_rvc_1_0= 'package' ) )
            // InternalCal.g:124:4: (lv_rvc_1_0= 'package' )
            {
            // InternalCal.g:124:4: (lv_rvc_1_0= 'package' )
            // InternalCal.g:125:5: lv_rvc_1_0= 'package'
            {
            lv_rvc_1_0=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_rvc_1_0, grammarAccess.getAstPackageAccess().getRvcPackageKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstPackageRule());
              					}
              					setWithLastConsumed(current, "rvc", true, "package");
              				
            }

            }


            }

            // InternalCal.g:137:3: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalCal.g:138:4: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalCal.g:138:4: (lv_name_2_0= ruleQualifiedName )
            // InternalCal.g:139:5: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstPackageAccess().getNameQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstPackageRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstPackageAccess().getSemicolonKeyword_3());
              		
            }
            // InternalCal.g:160:3: ( ( (lv_entities_4_0= ruleAstEntity ) ) | ( (lv_imports_5_0= ruleRvcImport ) ) | ( (lv_units_6_0= ruleAstUnit ) ) )*
            loop2:
            do {
                int alt2=4;
                switch ( input.LA(1) ) {
                case 26:
                case 45:
                case 48:
                case 108:
                    {
                    alt2=1;
                    }
                    break;
                case 21:
                    {
                    alt2=2;
                    }
                    break;
                case 17:
                    {
                    alt2=3;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // InternalCal.g:161:4: ( (lv_entities_4_0= ruleAstEntity ) )
            	    {
            	    // InternalCal.g:161:4: ( (lv_entities_4_0= ruleAstEntity ) )
            	    // InternalCal.g:162:5: (lv_entities_4_0= ruleAstEntity )
            	    {
            	    // InternalCal.g:162:5: (lv_entities_4_0= ruleAstEntity )
            	    // InternalCal.g:163:6: lv_entities_4_0= ruleAstEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstPackageAccess().getEntitiesAstEntityParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_entities_4_0=ruleAstEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstPackageRule());
            	      						}
            	      						add(
            	      							current,
            	      							"entities",
            	      							lv_entities_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstEntity");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalCal.g:181:4: ( (lv_imports_5_0= ruleRvcImport ) )
            	    {
            	    // InternalCal.g:181:4: ( (lv_imports_5_0= ruleRvcImport ) )
            	    // InternalCal.g:182:5: (lv_imports_5_0= ruleRvcImport )
            	    {
            	    // InternalCal.g:182:5: (lv_imports_5_0= ruleRvcImport )
            	    // InternalCal.g:183:6: lv_imports_5_0= ruleRvcImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstPackageAccess().getImportsRvcImportParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_imports_5_0=ruleRvcImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstPackageRule());
            	      						}
            	      						add(
            	      							current,
            	      							"imports",
            	      							lv_imports_5_0,
            	      							"streamblocks.eclipse.cal.Cal.RvcImport");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalCal.g:201:4: ( (lv_units_6_0= ruleAstUnit ) )
            	    {
            	    // InternalCal.g:201:4: ( (lv_units_6_0= ruleAstUnit ) )
            	    // InternalCal.g:202:5: (lv_units_6_0= ruleAstUnit )
            	    {
            	    // InternalCal.g:202:5: (lv_units_6_0= ruleAstUnit )
            	    // InternalCal.g:203:6: lv_units_6_0= ruleAstUnit
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstPackageAccess().getUnitsAstUnitParserRuleCall_4_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_units_6_0=ruleAstUnit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstPackageRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_6_0,
            	      							"streamblocks.eclipse.cal.Cal.AstUnit");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPackage"


    // $ANTLR start "entryRuleAstUnit"
    // InternalCal.g:225:1: entryRuleAstUnit returns [EObject current=null] : iv_ruleAstUnit= ruleAstUnit EOF ;
    public final EObject entryRuleAstUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstUnit = null;


        try {
            // InternalCal.g:225:48: (iv_ruleAstUnit= ruleAstUnit EOF )
            // InternalCal.g:226:2: iv_ruleAstUnit= ruleAstUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstUnit=ruleAstUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstUnit"


    // $ANTLR start "ruleAstUnit"
    // InternalCal.g:232:1: ruleAstUnit returns [EObject current=null] : ( () ( (lv_rvc_1_0= 'unit' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )* otherlv_8= 'end' ) ;
    public final EObject ruleAstUnit() throws RecognitionException {
        EObject current = null;

        Token lv_rvc_1_0=null;
        Token otherlv_3=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_functions_4_0 = null;

        EObject lv_procedures_5_0 = null;

        EObject lv_variables_6_0 = null;

        EObject lv_externals_7_1 = null;

        EObject lv_externals_7_2 = null;

        EObject lv_externals_7_3 = null;



        	enterRule();

        try {
            // InternalCal.g:238:2: ( ( () ( (lv_rvc_1_0= 'unit' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )* otherlv_8= 'end' ) )
            // InternalCal.g:239:2: ( () ( (lv_rvc_1_0= 'unit' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )* otherlv_8= 'end' )
            {
            // InternalCal.g:239:2: ( () ( (lv_rvc_1_0= 'unit' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )* otherlv_8= 'end' )
            // InternalCal.g:240:3: () ( (lv_rvc_1_0= 'unit' ) ) ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )* otherlv_8= 'end'
            {
            // InternalCal.g:240:3: ()
            // InternalCal.g:241:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstUnitAccess().getAstNamespaceAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:247:3: ( (lv_rvc_1_0= 'unit' ) )
            // InternalCal.g:248:4: (lv_rvc_1_0= 'unit' )
            {
            // InternalCal.g:248:4: (lv_rvc_1_0= 'unit' )
            // InternalCal.g:249:5: lv_rvc_1_0= 'unit'
            {
            lv_rvc_1_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_rvc_1_0, grammarAccess.getAstUnitAccess().getRvcUnitKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstUnitRule());
              					}
              					setWithLastConsumed(current, "rvc", true, "unit");
              				
            }

            }


            }

            // InternalCal.g:261:3: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalCal.g:262:4: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalCal.g:262:4: (lv_name_2_0= ruleQualifiedName )
            // InternalCal.g:263:5: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstUnitAccess().getNameQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstUnitRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstUnitAccess().getColonKeyword_3());
              		
            }
            // InternalCal.g:284:3: ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )*
            loop4:
            do {
                int alt4=5;
                alt4 = dfa4.predict(input);
                switch (alt4) {
            	case 1 :
            	    // InternalCal.g:285:4: ( (lv_functions_4_0= ruleAstFunction ) )
            	    {
            	    // InternalCal.g:285:4: ( (lv_functions_4_0= ruleAstFunction ) )
            	    // InternalCal.g:286:5: (lv_functions_4_0= ruleAstFunction )
            	    {
            	    // InternalCal.g:286:5: (lv_functions_4_0= ruleAstFunction )
            	    // InternalCal.g:287:6: lv_functions_4_0= ruleAstFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstUnitAccess().getFunctionsAstFunctionParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_functions_4_0=ruleAstFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"functions",
            	      							lv_functions_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstFunction");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalCal.g:305:4: ( (lv_procedures_5_0= ruleAstProcedure ) )
            	    {
            	    // InternalCal.g:305:4: ( (lv_procedures_5_0= ruleAstProcedure ) )
            	    // InternalCal.g:306:5: (lv_procedures_5_0= ruleAstProcedure )
            	    {
            	    // InternalCal.g:306:5: (lv_procedures_5_0= ruleAstProcedure )
            	    // InternalCal.g:307:6: lv_procedures_5_0= ruleAstProcedure
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstUnitAccess().getProceduresAstProcedureParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_procedures_5_0=ruleAstProcedure();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"procedures",
            	      							lv_procedures_5_0,
            	      							"streamblocks.eclipse.cal.Cal.AstProcedure");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalCal.g:325:4: ( (lv_variables_6_0= ruleAstConstantVariable ) )
            	    {
            	    // InternalCal.g:325:4: ( (lv_variables_6_0= ruleAstConstantVariable ) )
            	    // InternalCal.g:326:5: (lv_variables_6_0= ruleAstConstantVariable )
            	    {
            	    // InternalCal.g:326:5: (lv_variables_6_0= ruleAstConstantVariable )
            	    // InternalCal.g:327:6: lv_variables_6_0= ruleAstConstantVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstUnitAccess().getVariablesAstConstantVariableParserRuleCall_4_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_variables_6_0=ruleAstConstantVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variables",
            	      							lv_variables_6_0,
            	      							"streamblocks.eclipse.cal.Cal.AstConstantVariable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalCal.g:345:4: ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) )
            	    {
            	    // InternalCal.g:345:4: ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) )
            	    // InternalCal.g:346:5: ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) )
            	    {
            	    // InternalCal.g:346:5: ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) )
            	    // InternalCal.g:347:6: (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure )
            	    {
            	    // InternalCal.g:347:6: (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure )
            	    int alt3=3;
            	    alt3 = dfa3.predict(input);
            	    switch (alt3) {
            	        case 1 :
            	            // InternalCal.g:348:7: lv_externals_7_1= ruleAstExternalVariable
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstUnitAccess().getExternalsAstExternalVariableParserRuleCall_4_3_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_7);
            	            lv_externals_7_1=ruleAstExternalVariable();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstUnitRule());
            	              							}
            	              							add(
            	              								current,
            	              								"externals",
            	              								lv_externals_7_1,
            	              								"streamblocks.eclipse.cal.Cal.AstExternalVariable");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:364:7: lv_externals_7_2= ruleAstExternalFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstUnitAccess().getExternalsAstExternalFunctionParserRuleCall_4_3_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_7);
            	            lv_externals_7_2=ruleAstExternalFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstUnitRule());
            	              							}
            	              							add(
            	              								current,
            	              								"externals",
            	              								lv_externals_7_2,
            	              								"streamblocks.eclipse.cal.Cal.AstExternalFunction");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalCal.g:380:7: lv_externals_7_3= ruleAstExternalProcedure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstUnitAccess().getExternalsAstExternalProcedureParserRuleCall_4_3_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_7);
            	            lv_externals_7_3=ruleAstExternalProcedure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstUnitRule());
            	              							}
            	              							add(
            	              								current,
            	              								"externals",
            	              								lv_externals_7_3,
            	              								"streamblocks.eclipse.cal.Cal.AstExternalProcedure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            otherlv_8=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstUnitAccess().getEndKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstUnit"


    // $ANTLR start "entryRuleAstNamespace"
    // InternalCal.g:407:1: entryRuleAstNamespace returns [EObject current=null] : iv_ruleAstNamespace= ruleAstNamespace EOF ;
    public final EObject entryRuleAstNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstNamespace = null;


        try {
            // InternalCal.g:407:53: (iv_ruleAstNamespace= ruleAstNamespace EOF )
            // InternalCal.g:408:2: iv_ruleAstNamespace= ruleAstNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstNamespace=ruleAstNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstNamespace"


    // $ANTLR start "ruleAstNamespace"
    // InternalCal.g:414:1: ruleAstNamespace returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* otherlv_1= 'namespace' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )* otherlv_12= 'end' ) ;
    public final EObject ruleAstNamespace() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_functions_4_0 = null;

        EObject lv_procedures_5_0 = null;

        EObject lv_variables_6_0 = null;

        EObject lv_externals_7_1 = null;

        EObject lv_externals_7_2 = null;

        EObject lv_externals_7_3 = null;

        EObject lv_typedefs_8_0 = null;

        EObject lv_imports_9_0 = null;

        EObject lv_entities_10_0 = null;

        EObject lv_namespaces_11_0 = null;



        	enterRule();

        try {
            // InternalCal.g:420:2: ( ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* otherlv_1= 'namespace' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )* otherlv_12= 'end' ) )
            // InternalCal.g:421:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* otherlv_1= 'namespace' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )* otherlv_12= 'end' )
            {
            // InternalCal.g:421:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* otherlv_1= 'namespace' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )* otherlv_12= 'end' )
            // InternalCal.g:422:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )* otherlv_1= 'namespace' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= ':' ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )* otherlv_12= 'end'
            {
            // InternalCal.g:422:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==108) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalCal.g:423:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:423:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    // InternalCal.g:424:5: lv_annotations_0_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstNamespaceAccess().getAnnotationsAstAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_8);
            	    lv_annotations_0_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            otherlv_1=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstNamespaceAccess().getNamespaceKeyword_1());
              		
            }
            // InternalCal.g:445:3: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalCal.g:446:4: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalCal.g:446:4: (lv_name_2_0= ruleQualifiedName )
            // InternalCal.g:447:5: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstNamespaceAccess().getNameQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,18,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstNamespaceAccess().getColonKeyword_3());
              		
            }
            // InternalCal.g:468:3: ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )*
            loop7:
            do {
                int alt7=9;
                alt7 = dfa7.predict(input);
                switch (alt7) {
            	case 1 :
            	    // InternalCal.g:469:4: ( (lv_functions_4_0= ruleAstFunction ) )
            	    {
            	    // InternalCal.g:469:4: ( (lv_functions_4_0= ruleAstFunction ) )
            	    // InternalCal.g:470:5: (lv_functions_4_0= ruleAstFunction )
            	    {
            	    // InternalCal.g:470:5: (lv_functions_4_0= ruleAstFunction )
            	    // InternalCal.g:471:6: lv_functions_4_0= ruleAstFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getFunctionsAstFunctionParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_functions_4_0=ruleAstFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"functions",
            	      							lv_functions_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstFunction");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalCal.g:489:4: ( (lv_procedures_5_0= ruleAstProcedure ) )
            	    {
            	    // InternalCal.g:489:4: ( (lv_procedures_5_0= ruleAstProcedure ) )
            	    // InternalCal.g:490:5: (lv_procedures_5_0= ruleAstProcedure )
            	    {
            	    // InternalCal.g:490:5: (lv_procedures_5_0= ruleAstProcedure )
            	    // InternalCal.g:491:6: lv_procedures_5_0= ruleAstProcedure
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getProceduresAstProcedureParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_procedures_5_0=ruleAstProcedure();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"procedures",
            	      							lv_procedures_5_0,
            	      							"streamblocks.eclipse.cal.Cal.AstProcedure");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalCal.g:509:4: ( (lv_variables_6_0= ruleAstConstantVariable ) )
            	    {
            	    // InternalCal.g:509:4: ( (lv_variables_6_0= ruleAstConstantVariable ) )
            	    // InternalCal.g:510:5: (lv_variables_6_0= ruleAstConstantVariable )
            	    {
            	    // InternalCal.g:510:5: (lv_variables_6_0= ruleAstConstantVariable )
            	    // InternalCal.g:511:6: lv_variables_6_0= ruleAstConstantVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getVariablesAstConstantVariableParserRuleCall_4_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_variables_6_0=ruleAstConstantVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variables",
            	      							lv_variables_6_0,
            	      							"streamblocks.eclipse.cal.Cal.AstConstantVariable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalCal.g:529:4: ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) )
            	    {
            	    // InternalCal.g:529:4: ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) )
            	    // InternalCal.g:530:5: ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) )
            	    {
            	    // InternalCal.g:530:5: ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) )
            	    // InternalCal.g:531:6: (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure )
            	    {
            	    // InternalCal.g:531:6: (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure )
            	    int alt6=3;
            	    alt6 = dfa6.predict(input);
            	    switch (alt6) {
            	        case 1 :
            	            // InternalCal.g:532:7: lv_externals_7_1= ruleAstExternalVariable
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalVariableParserRuleCall_4_3_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_9);
            	            lv_externals_7_1=ruleAstExternalVariable();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	              							}
            	              							add(
            	              								current,
            	              								"externals",
            	              								lv_externals_7_1,
            	              								"streamblocks.eclipse.cal.Cal.AstExternalVariable");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:548:7: lv_externals_7_2= ruleAstExternalFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalFunctionParserRuleCall_4_3_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_9);
            	            lv_externals_7_2=ruleAstExternalFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	              							}
            	              							add(
            	              								current,
            	              								"externals",
            	              								lv_externals_7_2,
            	              								"streamblocks.eclipse.cal.Cal.AstExternalFunction");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalCal.g:564:7: lv_externals_7_3= ruleAstExternalProcedure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalProcedureParserRuleCall_4_3_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_9);
            	            lv_externals_7_3=ruleAstExternalProcedure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	              							}
            	              							add(
            	              								current,
            	              								"externals",
            	              								lv_externals_7_3,
            	              								"streamblocks.eclipse.cal.Cal.AstExternalProcedure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalCal.g:583:4: ( (lv_typedefs_8_0= ruleAstTypeDefinition ) )
            	    {
            	    // InternalCal.g:583:4: ( (lv_typedefs_8_0= ruleAstTypeDefinition ) )
            	    // InternalCal.g:584:5: (lv_typedefs_8_0= ruleAstTypeDefinition )
            	    {
            	    // InternalCal.g:584:5: (lv_typedefs_8_0= ruleAstTypeDefinition )
            	    // InternalCal.g:585:6: lv_typedefs_8_0= ruleAstTypeDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getTypedefsAstTypeDefinitionParserRuleCall_4_4_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_typedefs_8_0=ruleAstTypeDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"typedefs",
            	      							lv_typedefs_8_0,
            	      							"streamblocks.eclipse.cal.Cal.AstTypeDefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalCal.g:603:4: ( (lv_imports_9_0= ruleImport ) )
            	    {
            	    // InternalCal.g:603:4: ( (lv_imports_9_0= ruleImport ) )
            	    // InternalCal.g:604:5: (lv_imports_9_0= ruleImport )
            	    {
            	    // InternalCal.g:604:5: (lv_imports_9_0= ruleImport )
            	    // InternalCal.g:605:6: lv_imports_9_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getImportsImportParserRuleCall_4_5_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_imports_9_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"imports",
            	      							lv_imports_9_0,
            	      							"streamblocks.eclipse.cal.Cal.Import");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalCal.g:623:4: ( (lv_entities_10_0= ruleAstEntity ) )
            	    {
            	    // InternalCal.g:623:4: ( (lv_entities_10_0= ruleAstEntity ) )
            	    // InternalCal.g:624:5: (lv_entities_10_0= ruleAstEntity )
            	    {
            	    // InternalCal.g:624:5: (lv_entities_10_0= ruleAstEntity )
            	    // InternalCal.g:625:6: lv_entities_10_0= ruleAstEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getEntitiesAstEntityParserRuleCall_4_6_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_entities_10_0=ruleAstEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"entities",
            	      							lv_entities_10_0,
            	      							"streamblocks.eclipse.cal.Cal.AstEntity");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalCal.g:643:4: ( (lv_namespaces_11_0= ruleAstNamespace ) )
            	    {
            	    // InternalCal.g:643:4: ( (lv_namespaces_11_0= ruleAstNamespace ) )
            	    // InternalCal.g:644:5: (lv_namespaces_11_0= ruleAstNamespace )
            	    {
            	    // InternalCal.g:644:5: (lv_namespaces_11_0= ruleAstNamespace )
            	    // InternalCal.g:645:6: lv_namespaces_11_0= ruleAstNamespace
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstNamespaceAccess().getNamespacesAstNamespaceParserRuleCall_4_7_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_namespaces_11_0=ruleAstNamespace();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstNamespaceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"namespaces",
            	      							lv_namespaces_11_0,
            	      							"streamblocks.eclipse.cal.Cal.AstNamespace");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            otherlv_12=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getAstNamespaceAccess().getEndKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstNamespace"


    // $ANTLR start "entryRuleAstEntity"
    // InternalCal.g:671:1: entryRuleAstEntity returns [EObject current=null] : iv_ruleAstEntity= ruleAstEntity EOF ;
    public final EObject entryRuleAstEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntity = null;


        try {
            // InternalCal.g:671:50: (iv_ruleAstEntity= ruleAstEntity EOF )
            // InternalCal.g:672:2: iv_ruleAstEntity= ruleAstEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntity=ruleAstEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntity"


    // $ANTLR start "ruleAstEntity"
    // InternalCal.g:678:1: ruleAstEntity returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_actor_1_0= ruleAstAbstractActor ) ) ) ;
    public final EObject ruleAstEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        EObject lv_actor_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:684:2: ( ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_actor_1_0= ruleAstAbstractActor ) ) ) )
            // InternalCal.g:685:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_actor_1_0= ruleAstAbstractActor ) ) )
            {
            // InternalCal.g:685:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_actor_1_0= ruleAstAbstractActor ) ) )
            // InternalCal.g:686:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_actor_1_0= ruleAstAbstractActor ) )
            {
            // InternalCal.g:686:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==108) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // InternalCal.g:687:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:687:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    // InternalCal.g:688:5: lv_annotations_0_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstEntityAccess().getAnnotationsAstAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_10);
            	    lv_annotations_0_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstEntityRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            // InternalCal.g:705:3: ( (lv_actor_1_0= ruleAstAbstractActor ) )
            // InternalCal.g:706:4: (lv_actor_1_0= ruleAstAbstractActor )
            {
            // InternalCal.g:706:4: (lv_actor_1_0= ruleAstAbstractActor )
            // InternalCal.g:707:5: lv_actor_1_0= ruleAstAbstractActor
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityAccess().getActorAstAbstractActorParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_actor_1_0=ruleAstAbstractActor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstEntityRule());
              					}
              					set(
              						current,
              						"actor",
              						lv_actor_1_0,
              						"streamblocks.eclipse.cal.Cal.AstAbstractActor");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntity"


    // $ANTLR start "entryRuleAstAbstractActor"
    // InternalCal.g:728:1: entryRuleAstAbstractActor returns [EObject current=null] : iv_ruleAstAbstractActor= ruleAstAbstractActor EOF ;
    public final EObject entryRuleAstAbstractActor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstAbstractActor = null;


        try {
            // InternalCal.g:728:57: (iv_ruleAstAbstractActor= ruleAstAbstractActor EOF )
            // InternalCal.g:729:2: iv_ruleAstAbstractActor= ruleAstAbstractActor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstAbstractActorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstAbstractActor=ruleAstAbstractActor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstAbstractActor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstAbstractActor"


    // $ANTLR start "ruleAstAbstractActor"
    // InternalCal.g:735:1: ruleAstAbstractActor returns [EObject current=null] : (this_AstActor_0= ruleAstActor | this_AstNetwork_1= ruleAstNetwork | this_AstExternalActor_2= ruleAstExternalActor ) ;
    public final EObject ruleAstAbstractActor() throws RecognitionException {
        EObject current = null;

        EObject this_AstActor_0 = null;

        EObject this_AstNetwork_1 = null;

        EObject this_AstExternalActor_2 = null;



        	enterRule();

        try {
            // InternalCal.g:741:2: ( (this_AstActor_0= ruleAstActor | this_AstNetwork_1= ruleAstNetwork | this_AstExternalActor_2= ruleAstExternalActor ) )
            // InternalCal.g:742:2: (this_AstActor_0= ruleAstActor | this_AstNetwork_1= ruleAstNetwork | this_AstExternalActor_2= ruleAstExternalActor )
            {
            // InternalCal.g:742:2: (this_AstActor_0= ruleAstActor | this_AstNetwork_1= ruleAstNetwork | this_AstExternalActor_2= ruleAstExternalActor )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt9=1;
                }
                break;
            case 26:
                {
                alt9=2;
                }
                break;
            case 45:
                {
                alt9=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalCal.g:743:3: this_AstActor_0= ruleAstActor
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstAbstractActorAccess().getAstActorParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstActor_0=ruleAstActor();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstActor_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:752:3: this_AstNetwork_1= ruleAstNetwork
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstAbstractActorAccess().getAstNetworkParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstNetwork_1=ruleAstNetwork();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstNetwork_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:761:3: this_AstExternalActor_2= ruleAstExternalActor
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstAbstractActorAccess().getAstExternalActorParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExternalActor_2=ruleAstExternalActor();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExternalActor_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstAbstractActor"


    // $ANTLR start "entryRuleImport"
    // InternalCal.g:773:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalCal.g:773:47: (iv_ruleImport= ruleImport EOF )
            // InternalCal.g:774:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalCal.g:780:1: ruleImport returns [EObject current=null] : (otherlv_0= 'import' (this_GroupImportTail_1= ruleGroupImportTail | this_SingleImportTail_2= ruleSingleImportTail ) otherlv_3= ';' ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject this_GroupImportTail_1 = null;

        EObject this_SingleImportTail_2 = null;



        	enterRule();

        try {
            // InternalCal.g:786:2: ( (otherlv_0= 'import' (this_GroupImportTail_1= ruleGroupImportTail | this_SingleImportTail_2= ruleSingleImportTail ) otherlv_3= ';' ) )
            // InternalCal.g:787:2: (otherlv_0= 'import' (this_GroupImportTail_1= ruleGroupImportTail | this_SingleImportTail_2= ruleSingleImportTail ) otherlv_3= ';' )
            {
            // InternalCal.g:787:2: (otherlv_0= 'import' (this_GroupImportTail_1= ruleGroupImportTail | this_SingleImportTail_2= ruleSingleImportTail ) otherlv_3= ';' )
            // InternalCal.g:788:3: otherlv_0= 'import' (this_GroupImportTail_1= ruleGroupImportTail | this_SingleImportTail_2= ruleSingleImportTail ) otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,21,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
              		
            }
            // InternalCal.g:792:3: (this_GroupImportTail_1= ruleGroupImportTail | this_SingleImportTail_2= ruleSingleImportTail )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==22) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_ID||LA10_0==31||LA10_0==46||LA10_0==118) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalCal.g:793:4: this_GroupImportTail_1= ruleGroupImportTail
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportAccess().getGroupImportTailParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_GroupImportTail_1=ruleGroupImportTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_GroupImportTail_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:802:4: this_SingleImportTail_2= ruleSingleImportTail
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportAccess().getSingleImportTailParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_SingleImportTail_2=ruleSingleImportTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SingleImportTail_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getImportAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleRvcImport"
    // InternalCal.g:819:1: entryRuleRvcImport returns [EObject current=null] : iv_ruleRvcImport= ruleRvcImport EOF ;
    public final EObject entryRuleRvcImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRvcImport = null;


        try {
            // InternalCal.g:819:50: (iv_ruleRvcImport= ruleRvcImport EOF )
            // InternalCal.g:820:2: iv_ruleRvcImport= ruleRvcImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRvcImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRvcImport=ruleRvcImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRvcImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRvcImport"


    // $ANTLR start "ruleRvcImport"
    // InternalCal.g:826:1: ruleRvcImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard ) ) otherlv_2= ';' ) ;
    public final EObject ruleRvcImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:832:2: ( (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard ) ) otherlv_2= ';' ) )
            // InternalCal.g:833:2: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard ) ) otherlv_2= ';' )
            {
            // InternalCal.g:833:2: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard ) ) otherlv_2= ';' )
            // InternalCal.g:834:3: otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRvcImportAccess().getImportKeyword_0());
              		
            }
            // InternalCal.g:838:3: ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard ) )
            // InternalCal.g:839:4: (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard )
            {
            // InternalCal.g:839:4: (lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard )
            // InternalCal.g:840:5: lv_importedNamespace_1_0= ruleQualifiedNameWithWildCard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRvcImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRvcImportRule());
              					}
              					set(
              						current,
              						"importedNamespace",
              						lv_importedNamespace_1_0,
              						"streamblocks.eclipse.cal.Cal.QualifiedNameWithWildCard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRvcImportAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRvcImport"


    // $ANTLR start "entryRuleGroupImportTail"
    // InternalCal.g:865:1: entryRuleGroupImportTail returns [EObject current=null] : iv_ruleGroupImportTail= ruleGroupImportTail EOF ;
    public final EObject entryRuleGroupImportTail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroupImportTail = null;


        try {
            // InternalCal.g:865:56: (iv_ruleGroupImportTail= ruleGroupImportTail EOF )
            // InternalCal.g:866:2: iv_ruleGroupImportTail= ruleGroupImportTail EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupImportTailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGroupImportTail=ruleGroupImportTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroupImportTail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupImportTail"


    // $ANTLR start "ruleGroupImportTail"
    // InternalCal.g:872:1: ruleGroupImportTail returns [EObject current=null] : (otherlv_0= 'all' ( (lv_kind_1_0= ruleImportKind ) )? ( (lv_importedNamespace_2_0= ruleQualifiedName ) ) ) ;
    public final EObject ruleGroupImportTail() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Enumerator lv_kind_1_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:878:2: ( (otherlv_0= 'all' ( (lv_kind_1_0= ruleImportKind ) )? ( (lv_importedNamespace_2_0= ruleQualifiedName ) ) ) )
            // InternalCal.g:879:2: (otherlv_0= 'all' ( (lv_kind_1_0= ruleImportKind ) )? ( (lv_importedNamespace_2_0= ruleQualifiedName ) ) )
            {
            // InternalCal.g:879:2: (otherlv_0= 'all' ( (lv_kind_1_0= ruleImportKind ) )? ( (lv_importedNamespace_2_0= ruleQualifiedName ) ) )
            // InternalCal.g:880:3: otherlv_0= 'all' ( (lv_kind_1_0= ruleImportKind ) )? ( (lv_importedNamespace_2_0= ruleQualifiedName ) )
            {
            otherlv_0=(Token)match(input,22,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGroupImportTailAccess().getAllKeyword_0());
              		
            }
            // InternalCal.g:884:3: ( (lv_kind_1_0= ruleImportKind ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==31||LA11_0==46||LA11_0==118) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalCal.g:885:4: (lv_kind_1_0= ruleImportKind )
                    {
                    // InternalCal.g:885:4: (lv_kind_1_0= ruleImportKind )
                    // InternalCal.g:886:5: lv_kind_1_0= ruleImportKind
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGroupImportTailAccess().getKindImportKindEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_kind_1_0=ruleImportKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGroupImportTailRule());
                      					}
                      					set(
                      						current,
                      						"kind",
                      						lv_kind_1_0,
                      						"streamblocks.eclipse.cal.Cal.ImportKind");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCal.g:903:3: ( (lv_importedNamespace_2_0= ruleQualifiedName ) )
            // InternalCal.g:904:4: (lv_importedNamespace_2_0= ruleQualifiedName )
            {
            // InternalCal.g:904:4: (lv_importedNamespace_2_0= ruleQualifiedName )
            // InternalCal.g:905:5: lv_importedNamespace_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGroupImportTailAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_importedNamespace_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGroupImportTailRule());
              					}
              					set(
              						current,
              						"importedNamespace",
              						lv_importedNamespace_2_0,
              						"streamblocks.eclipse.cal.Cal.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroupImportTail"


    // $ANTLR start "entryRuleSingleImportTail"
    // InternalCal.g:926:1: entryRuleSingleImportTail returns [EObject current=null] : iv_ruleSingleImportTail= ruleSingleImportTail EOF ;
    public final EObject entryRuleSingleImportTail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleImportTail = null;


        try {
            // InternalCal.g:926:57: (iv_ruleSingleImportTail= ruleSingleImportTail EOF )
            // InternalCal.g:927:2: iv_ruleSingleImportTail= ruleSingleImportTail EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleImportTailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSingleImportTail=ruleSingleImportTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleImportTail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleImportTail"


    // $ANTLR start "ruleSingleImportTail"
    // InternalCal.g:933:1: ruleSingleImportTail returns [EObject current=null] : ( ( (lv_kind_0_0= ruleImportKind ) )? ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) (otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSingleImportTail() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_localNameToken_3_0=null;
        Enumerator lv_kind_0_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:939:2: ( ( ( (lv_kind_0_0= ruleImportKind ) )? ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) (otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) ) )? ) )
            // InternalCal.g:940:2: ( ( (lv_kind_0_0= ruleImportKind ) )? ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) (otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) ) )? )
            {
            // InternalCal.g:940:2: ( ( (lv_kind_0_0= ruleImportKind ) )? ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) (otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) ) )? )
            // InternalCal.g:941:3: ( (lv_kind_0_0= ruleImportKind ) )? ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) (otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) ) )?
            {
            // InternalCal.g:941:3: ( (lv_kind_0_0= ruleImportKind ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==31||LA12_0==46||LA12_0==118) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalCal.g:942:4: (lv_kind_0_0= ruleImportKind )
                    {
                    // InternalCal.g:942:4: (lv_kind_0_0= ruleImportKind )
                    // InternalCal.g:943:5: lv_kind_0_0= ruleImportKind
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSingleImportTailAccess().getKindImportKindEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_kind_0_0=ruleImportKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSingleImportTailRule());
                      					}
                      					set(
                      						current,
                      						"kind",
                      						lv_kind_0_0,
                      						"streamblocks.eclipse.cal.Cal.ImportKind");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCal.g:960:3: ( (lv_importedNamespace_1_0= ruleQualifiedName ) )
            // InternalCal.g:961:4: (lv_importedNamespace_1_0= ruleQualifiedName )
            {
            // InternalCal.g:961:4: (lv_importedNamespace_1_0= ruleQualifiedName )
            // InternalCal.g:962:5: lv_importedNamespace_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSingleImportTailAccess().getImportedNamespaceQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_importedNamespace_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSingleImportTailRule());
              					}
              					set(
              						current,
              						"importedNamespace",
              						lv_importedNamespace_1_0,
              						"streamblocks.eclipse.cal.Cal.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:979:3: (otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==23) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalCal.g:980:4: otherlv_2= '=' ( (lv_localNameToken_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSingleImportTailAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalCal.g:984:4: ( (lv_localNameToken_3_0= RULE_ID ) )
                    // InternalCal.g:985:5: (lv_localNameToken_3_0= RULE_ID )
                    {
                    // InternalCal.g:985:5: (lv_localNameToken_3_0= RULE_ID )
                    // InternalCal.g:986:6: lv_localNameToken_3_0= RULE_ID
                    {
                    lv_localNameToken_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_localNameToken_3_0, grammarAccess.getSingleImportTailAccess().getLocalNameTokenIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSingleImportTailRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"localNameToken",
                      							lv_localNameToken_3_0,
                      							"streamblocks.eclipse.cal.Cal.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleImportTail"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalCal.g:1007:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalCal.g:1007:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalCal.g:1008:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalCal.g:1014:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;


        	enterRule();

        try {
            // InternalCal.g:1020:2: ( (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) )
            // InternalCal.g:1021:2: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            {
            // InternalCal.g:1021:2: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            // InternalCal.g:1022:3: this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalCal.g:1029:3: (kw= '.' this_ID_2= RULE_ID )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==24) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalCal.g:1030:4: kw= '.' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualifiedNameWithWildCard"
    // InternalCal.g:1047:1: entryRuleQualifiedNameWithWildCard returns [String current=null] : iv_ruleQualifiedNameWithWildCard= ruleQualifiedNameWithWildCard EOF ;
    public final String entryRuleQualifiedNameWithWildCard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildCard = null;


        try {
            // InternalCal.g:1047:65: (iv_ruleQualifiedNameWithWildCard= ruleQualifiedNameWithWildCard EOF )
            // InternalCal.g:1048:2: iv_ruleQualifiedNameWithWildCard= ruleQualifiedNameWithWildCard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildCard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildCard"


    // $ANTLR start "ruleQualifiedNameWithWildCard"
    // InternalCal.g:1054:1: ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildCard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1060:2: ( (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? ) )
            // InternalCal.g:1061:2: (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? )
            {
            // InternalCal.g:1061:2: (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? )
            // InternalCal.g:1062:3: this_QualifiedName_0= ruleQualifiedName (kw= '.*' )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_15);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:1072:3: (kw= '.*' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==25) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalCal.g:1073:4: kw= '.*'
                    {
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildCard"


    // $ANTLR start "entryRuleAstNetwork"
    // InternalCal.g:1083:1: entryRuleAstNetwork returns [EObject current=null] : iv_ruleAstNetwork= ruleAstNetwork EOF ;
    public final EObject entryRuleAstNetwork() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstNetwork = null;


        try {
            // InternalCal.g:1083:51: (iv_ruleAstNetwork= ruleAstNetwork EOF )
            // InternalCal.g:1084:2: iv_ruleAstNetwork= ruleAstNetwork EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstNetworkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstNetwork=ruleAstNetwork();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstNetwork; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstNetwork"


    // $ANTLR start "ruleAstNetwork"
    // InternalCal.g:1090:1: ruleAstNetwork returns [EObject current=null] : ( () otherlv_1= 'network' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )* )? otherlv_21= 'entities' ( (lv_entities_22_0= ruleAstEntityDeclaration ) )+ ( (lv_structure_23_0= ruleAstStructure ) )? otherlv_24= 'end' ) ;
    public final EObject ruleAstNetwork() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_inputs_8_0 = null;

        EObject lv_inputs_10_0 = null;

        EObject lv_outputs_12_0 = null;

        EObject lv_outputs_14_0 = null;

        EObject lv_variables_17_0 = null;

        EObject lv_variables_19_0 = null;

        EObject lv_entities_22_0 = null;

        EObject lv_structure_23_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1096:2: ( ( () otherlv_1= 'network' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )* )? otherlv_21= 'entities' ( (lv_entities_22_0= ruleAstEntityDeclaration ) )+ ( (lv_structure_23_0= ruleAstStructure ) )? otherlv_24= 'end' ) )
            // InternalCal.g:1097:2: ( () otherlv_1= 'network' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )* )? otherlv_21= 'entities' ( (lv_entities_22_0= ruleAstEntityDeclaration ) )+ ( (lv_structure_23_0= ruleAstStructure ) )? otherlv_24= 'end' )
            {
            // InternalCal.g:1097:2: ( () otherlv_1= 'network' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )* )? otherlv_21= 'entities' ( (lv_entities_22_0= ruleAstEntityDeclaration ) )+ ( (lv_structure_23_0= ruleAstStructure ) )? otherlv_24= 'end' )
            // InternalCal.g:1098:3: () otherlv_1= 'network' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )* )? otherlv_21= 'entities' ( (lv_entities_22_0= ruleAstEntityDeclaration ) )+ ( (lv_structure_23_0= ruleAstStructure ) )? otherlv_24= 'end'
            {
            // InternalCal.g:1098:3: ()
            // InternalCal.g:1099:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstNetworkAccess().getAstNetworkAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstNetworkAccess().getNetworkKeyword_1());
              		
            }
            // InternalCal.g:1109:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalCal.g:1110:4: (lv_name_2_0= RULE_ID )
            {
            // InternalCal.g:1110:4: (lv_name_2_0= RULE_ID )
            // InternalCal.g:1111:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getAstNetworkAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstNetworkRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstNetworkAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalCal.g:1131:3: ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID||LA17_0==36||LA17_0==99||LA17_0==108||(LA17_0>=110 && LA17_0<=117)) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalCal.g:1132:4: ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )*
                    {
                    // InternalCal.g:1132:4: ( (lv_parameters_4_0= ruleAstParameter ) )
                    // InternalCal.g:1133:5: (lv_parameters_4_0= ruleAstParameter )
                    {
                    // InternalCal.g:1133:5: (lv_parameters_4_0= ruleAstParameter )
                    // InternalCal.g:1134:6: lv_parameters_4_0= ruleAstParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstNetworkAccess().getParametersAstParameterParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_4_0=ruleAstParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_4_0,
                      							"streamblocks.eclipse.cal.Cal.AstParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:1151:4: (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==28) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalCal.g:1152:5: otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getAstNetworkAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:1156:5: ( (lv_parameters_6_0= ruleAstParameter ) )
                    	    // InternalCal.g:1157:6: (lv_parameters_6_0= ruleAstParameter )
                    	    {
                    	    // InternalCal.g:1157:6: (lv_parameters_6_0= ruleAstParameter )
                    	    // InternalCal.g:1158:7: lv_parameters_6_0= ruleAstParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstNetworkAccess().getParametersAstParameterParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_6_0=ruleAstParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_6_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,29,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstNetworkAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalCal.g:1181:3: ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID||LA19_0==36||LA19_0==99||LA19_0==108||(LA19_0>=110 && LA19_0<=117)) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalCal.g:1182:4: ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )*
                    {
                    // InternalCal.g:1182:4: ( (lv_inputs_8_0= ruleAstPort ) )
                    // InternalCal.g:1183:5: (lv_inputs_8_0= ruleAstPort )
                    {
                    // InternalCal.g:1183:5: (lv_inputs_8_0= ruleAstPort )
                    // InternalCal.g:1184:6: lv_inputs_8_0= ruleAstPort
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstNetworkAccess().getInputsAstPortParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_inputs_8_0=ruleAstPort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                      						}
                      						add(
                      							current,
                      							"inputs",
                      							lv_inputs_8_0,
                      							"streamblocks.eclipse.cal.Cal.AstPort");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:1201:4: (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==28) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalCal.g:1202:5: otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) )
                    	    {
                    	    otherlv_9=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getAstNetworkAccess().getCommaKeyword_6_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:1206:5: ( (lv_inputs_10_0= ruleAstPort ) )
                    	    // InternalCal.g:1207:6: (lv_inputs_10_0= ruleAstPort )
                    	    {
                    	    // InternalCal.g:1207:6: (lv_inputs_10_0= ruleAstPort )
                    	    // InternalCal.g:1208:7: lv_inputs_10_0= ruleAstPort
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstNetworkAccess().getInputsAstPortParserRuleCall_6_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_inputs_10_0=ruleAstPort();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"inputs",
                    	      								lv_inputs_10_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstPort");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,30,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getAstNetworkAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_7());
              		
            }
            // InternalCal.g:1231:3: ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID||LA21_0==36||LA21_0==99||LA21_0==108||(LA21_0>=110 && LA21_0<=117)) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalCal.g:1232:4: ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )*
                    {
                    // InternalCal.g:1232:4: ( (lv_outputs_12_0= ruleAstPort ) )
                    // InternalCal.g:1233:5: (lv_outputs_12_0= ruleAstPort )
                    {
                    // InternalCal.g:1233:5: (lv_outputs_12_0= ruleAstPort )
                    // InternalCal.g:1234:6: lv_outputs_12_0= ruleAstPort
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstNetworkAccess().getOutputsAstPortParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_outputs_12_0=ruleAstPort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                      						}
                      						add(
                      							current,
                      							"outputs",
                      							lv_outputs_12_0,
                      							"streamblocks.eclipse.cal.Cal.AstPort");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:1251:4: (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==28) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalCal.g:1252:5: otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) )
                    	    {
                    	    otherlv_13=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getAstNetworkAccess().getCommaKeyword_8_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:1256:5: ( (lv_outputs_14_0= ruleAstPort ) )
                    	    // InternalCal.g:1257:6: (lv_outputs_14_0= ruleAstPort )
                    	    {
                    	    // InternalCal.g:1257:6: (lv_outputs_14_0= ruleAstPort )
                    	    // InternalCal.g:1258:7: lv_outputs_14_0= ruleAstPort
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstNetworkAccess().getOutputsAstPortParserRuleCall_8_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_outputs_14_0=ruleAstPort();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"outputs",
                    	      								lv_outputs_14_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstPort");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_15=(Token)match(input,18,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getAstNetworkAccess().getColonKeyword_9());
              		
            }
            // InternalCal.g:1281:3: (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==31) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalCal.g:1282:4: otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) otherlv_18= ';' ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )*
                    {
                    otherlv_16=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getAstNetworkAccess().getVarKeyword_10_0());
                      			
                    }
                    // InternalCal.g:1286:4: ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:1287:5: (lv_variables_17_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:1287:5: (lv_variables_17_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:1288:6: lv_variables_17_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstNetworkAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_variables_17_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_17_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,16,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAstNetworkAccess().getSemicolonKeyword_10_2());
                      			
                    }
                    // InternalCal.g:1309:4: ( ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';' )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==RULE_ID||LA22_0==36||LA22_0==99||LA22_0==108||(LA22_0>=110 && LA22_0<=117)) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalCal.g:1310:5: ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) otherlv_20= ';'
                    	    {
                    	    // InternalCal.g:1310:5: ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:1311:6: (lv_variables_19_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:1311:6: (lv_variables_19_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:1312:7: lv_variables_19_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstNetworkAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_10_3_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_variables_19_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_19_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_20=(Token)match(input,16,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getAstNetworkAccess().getSemicolonKeyword_10_3_1());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_21=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_21, grammarAccess.getAstNetworkAccess().getEntitiesKeyword_11());
              		
            }
            // InternalCal.g:1339:3: ( (lv_entities_22_0= ruleAstEntityDeclaration ) )+
            int cnt24=0;
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==RULE_ID) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalCal.g:1340:4: (lv_entities_22_0= ruleAstEntityDeclaration )
            	    {
            	    // InternalCal.g:1340:4: (lv_entities_22_0= ruleAstEntityDeclaration )
            	    // InternalCal.g:1341:5: lv_entities_22_0= ruleAstEntityDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstNetworkAccess().getEntitiesAstEntityDeclarationParserRuleCall_12_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_entities_22_0=ruleAstEntityDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstNetworkRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_22_0,
            	      						"streamblocks.eclipse.cal.Cal.AstEntityDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt24 >= 1 ) break loop24;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(24, input);
                        throw eee;
                }
                cnt24++;
            } while (true);

            // InternalCal.g:1358:3: ( (lv_structure_23_0= ruleAstStructure ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==38) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalCal.g:1359:4: (lv_structure_23_0= ruleAstStructure )
                    {
                    // InternalCal.g:1359:4: (lv_structure_23_0= ruleAstStructure )
                    // InternalCal.g:1360:5: lv_structure_23_0= ruleAstStructure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAstNetworkAccess().getStructureAstStructureParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_27);
                    lv_structure_23_0=ruleAstStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAstNetworkRule());
                      					}
                      					set(
                      						current,
                      						"structure",
                      						lv_structure_23_0,
                      						"streamblocks.eclipse.cal.Cal.AstStructure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_24=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_24, grammarAccess.getAstNetworkAccess().getEndKeyword_14());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstNetwork"


    // $ANTLR start "entryRuleAstEntityDeclaration"
    // InternalCal.g:1385:1: entryRuleAstEntityDeclaration returns [EObject current=null] : iv_ruleAstEntityDeclaration= ruleAstEntityDeclaration EOF ;
    public final EObject entryRuleAstEntityDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntityDeclaration = null;


        try {
            // InternalCal.g:1385:61: (iv_ruleAstEntityDeclaration= ruleAstEntityDeclaration EOF )
            // InternalCal.g:1386:2: iv_ruleAstEntityDeclaration= ruleAstEntityDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntityDeclaration=ruleAstEntityDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntityDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntityDeclaration"


    // $ANTLR start "ruleAstEntityDeclaration"
    // InternalCal.g:1392:1: ruleAstEntityDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_entity_2_0= ruleAstEntityExpr ) ) otherlv_3= ';' ) ;
    public final EObject ruleAstEntityDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_entity_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1398:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_entity_2_0= ruleAstEntityExpr ) ) otherlv_3= ';' ) )
            // InternalCal.g:1399:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_entity_2_0= ruleAstEntityExpr ) ) otherlv_3= ';' )
            {
            // InternalCal.g:1399:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_entity_2_0= ruleAstEntityExpr ) ) otherlv_3= ';' )
            // InternalCal.g:1400:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_entity_2_0= ruleAstEntityExpr ) ) otherlv_3= ';'
            {
            // InternalCal.g:1400:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:1401:4: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:1401:4: (lv_name_0_0= RULE_ID )
            // InternalCal.g:1402:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAstEntityDeclarationAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstEntityDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstEntityDeclarationAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalCal.g:1422:3: ( (lv_entity_2_0= ruleAstEntityExpr ) )
            // InternalCal.g:1423:4: (lv_entity_2_0= ruleAstEntityExpr )
            {
            // InternalCal.g:1423:4: (lv_entity_2_0= ruleAstEntityExpr )
            // InternalCal.g:1424:5: lv_entity_2_0= ruleAstEntityExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityDeclarationAccess().getEntityAstEntityExprParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_entity_2_0=ruleAstEntityExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstEntityDeclarationRule());
              					}
              					set(
              						current,
              						"entity",
              						lv_entity_2_0,
              						"streamblocks.eclipse.cal.Cal.AstEntityExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstEntityDeclarationAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntityDeclaration"


    // $ANTLR start "entryRuleAstEntityExpr"
    // InternalCal.g:1449:1: entryRuleAstEntityExpr returns [EObject current=null] : iv_ruleAstEntityExpr= ruleAstEntityExpr EOF ;
    public final EObject entryRuleAstEntityExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntityExpr = null;


        try {
            // InternalCal.g:1449:54: (iv_ruleAstEntityExpr= ruleAstEntityExpr EOF )
            // InternalCal.g:1450:2: iv_ruleAstEntityExpr= ruleAstEntityExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntityExpr=ruleAstEntityExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntityExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntityExpr"


    // $ANTLR start "ruleAstEntityExpr"
    // InternalCal.g:1456:1: ruleAstEntityExpr returns [EObject current=null] : (this_AstEntityInstanceExpr_0= ruleAstEntityInstanceExpr | this_AstEntityIfExpr_1= ruleAstEntityIfExpr | this_AstEntityListExpr_2= ruleAstEntityListExpr ) ;
    public final EObject ruleAstEntityExpr() throws RecognitionException {
        EObject current = null;

        EObject this_AstEntityInstanceExpr_0 = null;

        EObject this_AstEntityIfExpr_1 = null;

        EObject this_AstEntityListExpr_2 = null;



        	enterRule();

        try {
            // InternalCal.g:1462:2: ( (this_AstEntityInstanceExpr_0= ruleAstEntityInstanceExpr | this_AstEntityIfExpr_1= ruleAstEntityIfExpr | this_AstEntityListExpr_2= ruleAstEntityListExpr ) )
            // InternalCal.g:1463:2: (this_AstEntityInstanceExpr_0= ruleAstEntityInstanceExpr | this_AstEntityIfExpr_1= ruleAstEntityIfExpr | this_AstEntityListExpr_2= ruleAstEntityListExpr )
            {
            // InternalCal.g:1463:2: (this_AstEntityInstanceExpr_0= ruleAstEntityInstanceExpr | this_AstEntityIfExpr_1= ruleAstEntityIfExpr | this_AstEntityListExpr_2= ruleAstEntityListExpr )
            int alt26=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt26=1;
                }
                break;
            case 33:
                {
                alt26=2;
                }
                break;
            case 36:
                {
                alt26=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalCal.g:1464:3: this_AstEntityInstanceExpr_0= ruleAstEntityInstanceExpr
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstEntityExprAccess().getAstEntityInstanceExprParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstEntityInstanceExpr_0=ruleAstEntityInstanceExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstEntityInstanceExpr_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:1473:3: this_AstEntityIfExpr_1= ruleAstEntityIfExpr
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstEntityExprAccess().getAstEntityIfExprParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstEntityIfExpr_1=ruleAstEntityIfExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstEntityIfExpr_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:1482:3: this_AstEntityListExpr_2= ruleAstEntityListExpr
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstEntityExprAccess().getAstEntityListExprParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstEntityListExpr_2=ruleAstEntityListExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstEntityListExpr_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntityExpr"


    // $ANTLR start "entryRuleAstEntityInstanceExpr"
    // InternalCal.g:1494:1: entryRuleAstEntityInstanceExpr returns [EObject current=null] : iv_ruleAstEntityInstanceExpr= ruleAstEntityInstanceExpr EOF ;
    public final EObject entryRuleAstEntityInstanceExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntityInstanceExpr = null;


        try {
            // InternalCal.g:1494:62: (iv_ruleAstEntityInstanceExpr= ruleAstEntityInstanceExpr EOF )
            // InternalCal.g:1495:2: iv_ruleAstEntityInstanceExpr= ruleAstEntityInstanceExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityInstanceExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntityInstanceExpr=ruleAstEntityInstanceExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntityInstanceExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntityInstanceExpr"


    // $ANTLR start "ruleAstEntityInstanceExpr"
    // InternalCal.g:1501:1: ruleAstEntityInstanceExpr returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleAstEntityInstanceExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1507:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )* )? otherlv_5= ')' ) )
            // InternalCal.g:1508:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )* )? otherlv_5= ')' )
            {
            // InternalCal.g:1508:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )* )? otherlv_5= ')' )
            // InternalCal.g:1509:3: ( ( ruleQualifiedName ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )* )? otherlv_5= ')'
            {
            // InternalCal.g:1509:3: ( ( ruleQualifiedName ) )
            // InternalCal.g:1510:4: ( ruleQualifiedName )
            {
            // InternalCal.g:1510:4: ( ruleQualifiedName )
            // InternalCal.g:1511:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstEntityInstanceExprRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityInstanceExprAccess().getTypeAstEntityCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_16);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,27,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstEntityInstanceExprAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCal.g:1529:3: ( ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )* )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_ID) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalCal.g:1530:4: ( (lv_parameters_2_0= ruleAstAssignParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )*
                    {
                    // InternalCal.g:1530:4: ( (lv_parameters_2_0= ruleAstAssignParameter ) )
                    // InternalCal.g:1531:5: (lv_parameters_2_0= ruleAstAssignParameter )
                    {
                    // InternalCal.g:1531:5: (lv_parameters_2_0= ruleAstAssignParameter )
                    // InternalCal.g:1532:6: lv_parameters_2_0= ruleAstAssignParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstEntityInstanceExprAccess().getParametersAstAssignParameterParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_2_0=ruleAstAssignParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstEntityInstanceExprRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstAssignParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:1549:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) ) )*
                    loop27:
                    do {
                        int alt27=2;
                        int LA27_0 = input.LA(1);

                        if ( (LA27_0==28) ) {
                            alt27=1;
                        }


                        switch (alt27) {
                    	case 1 :
                    	    // InternalCal.g:1550:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleAstAssignParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getAstEntityInstanceExprAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:1554:5: ( (lv_parameters_4_0= ruleAstAssignParameter ) )
                    	    // InternalCal.g:1555:6: (lv_parameters_4_0= ruleAstAssignParameter )
                    	    {
                    	    // InternalCal.g:1555:6: (lv_parameters_4_0= ruleAstAssignParameter )
                    	    // InternalCal.g:1556:7: lv_parameters_4_0= ruleAstAssignParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstEntityInstanceExprAccess().getParametersAstAssignParameterParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_4_0=ruleAstAssignParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstEntityInstanceExprRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstAssignParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop27;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstEntityInstanceExprAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntityInstanceExpr"


    // $ANTLR start "entryRuleAstAssignParameter"
    // InternalCal.g:1583:1: entryRuleAstAssignParameter returns [EObject current=null] : iv_ruleAstAssignParameter= ruleAstAssignParameter EOF ;
    public final EObject entryRuleAstAssignParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstAssignParameter = null;


        try {
            // InternalCal.g:1583:59: (iv_ruleAstAssignParameter= ruleAstAssignParameter EOF )
            // InternalCal.g:1584:2: iv_ruleAstAssignParameter= ruleAstAssignParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstAssignParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstAssignParameter=ruleAstAssignParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstAssignParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstAssignParameter"


    // $ANTLR start "ruleAstAssignParameter"
    // InternalCal.g:1590:1: ruleAstAssignParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) ) ;
    public final EObject ruleAstAssignParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1596:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) ) )
            // InternalCal.g:1597:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )
            {
            // InternalCal.g:1597:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )
            // InternalCal.g:1598:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) )
            {
            // InternalCal.g:1598:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:1599:4: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:1599:4: (lv_name_0_0= RULE_ID )
            // InternalCal.g:1600:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAstAssignParameterAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstAssignParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstAssignParameterAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalCal.g:1620:3: ( (lv_value_2_0= ruleAstExpression ) )
            // InternalCal.g:1621:4: (lv_value_2_0= ruleAstExpression )
            {
            // InternalCal.g:1621:4: (lv_value_2_0= ruleAstExpression )
            // InternalCal.g:1622:5: lv_value_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstAssignParameterAccess().getValueAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstAssignParameterRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstAssignParameter"


    // $ANTLR start "entryRuleAstEntityIfExpr"
    // InternalCal.g:1643:1: entryRuleAstEntityIfExpr returns [EObject current=null] : iv_ruleAstEntityIfExpr= ruleAstEntityIfExpr EOF ;
    public final EObject entryRuleAstEntityIfExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntityIfExpr = null;


        try {
            // InternalCal.g:1643:56: (iv_ruleAstEntityIfExpr= ruleAstEntityIfExpr EOF )
            // InternalCal.g:1644:2: iv_ruleAstEntityIfExpr= ruleAstEntityIfExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityIfExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntityIfExpr=ruleAstEntityIfExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntityIfExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntityIfExpr"


    // $ANTLR start "ruleAstEntityIfExpr"
    // InternalCal.g:1650:1: ruleAstEntityIfExpr returns [EObject current=null] : (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_trueEntity_3_0= ruleAstEntityExpr ) ) otherlv_4= 'else' ( (lv_falseEntity_5_0= ruleAstEntityExpr ) ) otherlv_6= 'end' ) ;
    public final EObject ruleAstEntityIfExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_condition_1_0 = null;

        EObject lv_trueEntity_3_0 = null;

        EObject lv_falseEntity_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1656:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_trueEntity_3_0= ruleAstEntityExpr ) ) otherlv_4= 'else' ( (lv_falseEntity_5_0= ruleAstEntityExpr ) ) otherlv_6= 'end' ) )
            // InternalCal.g:1657:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_trueEntity_3_0= ruleAstEntityExpr ) ) otherlv_4= 'else' ( (lv_falseEntity_5_0= ruleAstEntityExpr ) ) otherlv_6= 'end' )
            {
            // InternalCal.g:1657:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_trueEntity_3_0= ruleAstEntityExpr ) ) otherlv_4= 'else' ( (lv_falseEntity_5_0= ruleAstEntityExpr ) ) otherlv_6= 'end' )
            // InternalCal.g:1658:3: otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_trueEntity_3_0= ruleAstEntityExpr ) ) otherlv_4= 'else' ( (lv_falseEntity_5_0= ruleAstEntityExpr ) ) otherlv_6= 'end'
            {
            otherlv_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstEntityIfExprAccess().getIfKeyword_0());
              		
            }
            // InternalCal.g:1662:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:1663:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:1663:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:1664:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityIfExprAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstEntityIfExprRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstEntityIfExprAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:1685:3: ( (lv_trueEntity_3_0= ruleAstEntityExpr ) )
            // InternalCal.g:1686:4: (lv_trueEntity_3_0= ruleAstEntityExpr )
            {
            // InternalCal.g:1686:4: (lv_trueEntity_3_0= ruleAstEntityExpr )
            // InternalCal.g:1687:5: lv_trueEntity_3_0= ruleAstEntityExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityIfExprAccess().getTrueEntityAstEntityExprParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_trueEntity_3_0=ruleAstEntityExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstEntityIfExprRule());
              					}
              					set(
              						current,
              						"trueEntity",
              						lv_trueEntity_3_0,
              						"streamblocks.eclipse.cal.Cal.AstEntityExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,35,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstEntityIfExprAccess().getElseKeyword_4());
              		
            }
            // InternalCal.g:1708:3: ( (lv_falseEntity_5_0= ruleAstEntityExpr ) )
            // InternalCal.g:1709:4: (lv_falseEntity_5_0= ruleAstEntityExpr )
            {
            // InternalCal.g:1709:4: (lv_falseEntity_5_0= ruleAstEntityExpr )
            // InternalCal.g:1710:5: lv_falseEntity_5_0= ruleAstEntityExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityIfExprAccess().getFalseEntityAstEntityExprParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_falseEntity_5_0=ruleAstEntityExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstEntityIfExprRule());
              					}
              					set(
              						current,
              						"falseEntity",
              						lv_falseEntity_5_0,
              						"streamblocks.eclipse.cal.Cal.AstEntityExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstEntityIfExprAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntityIfExpr"


    // $ANTLR start "entryRuleAstEntityListExpr"
    // InternalCal.g:1735:1: entryRuleAstEntityListExpr returns [EObject current=null] : iv_ruleAstEntityListExpr= ruleAstEntityListExpr EOF ;
    public final EObject entryRuleAstEntityListExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntityListExpr = null;


        try {
            // InternalCal.g:1735:58: (iv_ruleAstEntityListExpr= ruleAstEntityListExpr EOF )
            // InternalCal.g:1736:2: iv_ruleAstEntityListExpr= ruleAstEntityListExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityListExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntityListExpr=ruleAstEntityListExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntityListExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntityListExpr"


    // $ANTLR start "ruleAstEntityListExpr"
    // InternalCal.g:1742:1: ruleAstEntityListExpr returns [EObject current=null] : (otherlv_0= '[' ( (lv_exprs_1_0= ruleAstEntityExpr ) ) (otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) ) )* (otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) ) )? otherlv_6= ']' ) ;
    public final EObject ruleAstEntityListExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_exprs_1_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_generator_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1748:2: ( (otherlv_0= '[' ( (lv_exprs_1_0= ruleAstEntityExpr ) ) (otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) ) )* (otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) ) )? otherlv_6= ']' ) )
            // InternalCal.g:1749:2: (otherlv_0= '[' ( (lv_exprs_1_0= ruleAstEntityExpr ) ) (otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) ) )* (otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) ) )? otherlv_6= ']' )
            {
            // InternalCal.g:1749:2: (otherlv_0= '[' ( (lv_exprs_1_0= ruleAstEntityExpr ) ) (otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) ) )* (otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) ) )? otherlv_6= ']' )
            // InternalCal.g:1750:3: otherlv_0= '[' ( (lv_exprs_1_0= ruleAstEntityExpr ) ) (otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) ) )* (otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) ) )? otherlv_6= ']'
            {
            otherlv_0=(Token)match(input,36,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstEntityListExprAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalCal.g:1754:3: ( (lv_exprs_1_0= ruleAstEntityExpr ) )
            // InternalCal.g:1755:4: (lv_exprs_1_0= ruleAstEntityExpr )
            {
            // InternalCal.g:1755:4: (lv_exprs_1_0= ruleAstEntityExpr )
            // InternalCal.g:1756:5: lv_exprs_1_0= ruleAstEntityExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstEntityListExprAccess().getExprsAstEntityExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_exprs_1_0=ruleAstEntityExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstEntityListExprRule());
              					}
              					add(
              						current,
              						"exprs",
              						lv_exprs_1_0,
              						"streamblocks.eclipse.cal.Cal.AstEntityExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:1773:3: (otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==28) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalCal.g:1774:4: otherlv_2= ',' ( (lv_exprs_3_0= ruleAstEntityExpr ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_29); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstEntityListExprAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:1778:4: ( (lv_exprs_3_0= ruleAstEntityExpr ) )
            	    // InternalCal.g:1779:5: (lv_exprs_3_0= ruleAstEntityExpr )
            	    {
            	    // InternalCal.g:1779:5: (lv_exprs_3_0= ruleAstEntityExpr )
            	    // InternalCal.g:1780:6: lv_exprs_3_0= ruleAstEntityExpr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstEntityListExprAccess().getExprsAstEntityExprParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_exprs_3_0=ruleAstEntityExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstEntityListExprRule());
            	      						}
            	      						add(
            	      							current,
            	      							"exprs",
            	      							lv_exprs_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstEntityExpr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            // InternalCal.g:1798:3: (otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==18) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalCal.g:1799:4: otherlv_4= ':' ( (lv_generator_5_0= ruleAstGenerator ) )
                    {
                    otherlv_4=(Token)match(input,18,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstEntityListExprAccess().getColonKeyword_3_0());
                      			
                    }
                    // InternalCal.g:1803:4: ( (lv_generator_5_0= ruleAstGenerator ) )
                    // InternalCal.g:1804:5: (lv_generator_5_0= ruleAstGenerator )
                    {
                    // InternalCal.g:1804:5: (lv_generator_5_0= ruleAstGenerator )
                    // InternalCal.g:1805:6: lv_generator_5_0= ruleAstGenerator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstEntityListExprAccess().getGeneratorAstGeneratorParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_generator_5_0=ruleAstGenerator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstEntityListExprRule());
                      						}
                      						set(
                      							current,
                      							"generator",
                      							lv_generator_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstGenerator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstEntityListExprAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntityListExpr"


    // $ANTLR start "entryRuleAstStructure"
    // InternalCal.g:1831:1: entryRuleAstStructure returns [EObject current=null] : iv_ruleAstStructure= ruleAstStructure EOF ;
    public final EObject entryRuleAstStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStructure = null;


        try {
            // InternalCal.g:1831:53: (iv_ruleAstStructure= ruleAstStructure EOF )
            // InternalCal.g:1832:2: iv_ruleAstStructure= ruleAstStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStructure=ruleAstStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStructure"


    // $ANTLR start "ruleAstStructure"
    // InternalCal.g:1838:1: ruleAstStructure returns [EObject current=null] : (otherlv_0= 'structure' ( (lv_connections_1_0= ruleAstStructureStatement ) )+ ) ;
    public final EObject ruleAstStructure() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_connections_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1844:2: ( (otherlv_0= 'structure' ( (lv_connections_1_0= ruleAstStructureStatement ) )+ ) )
            // InternalCal.g:1845:2: (otherlv_0= 'structure' ( (lv_connections_1_0= ruleAstStructureStatement ) )+ )
            {
            // InternalCal.g:1845:2: (otherlv_0= 'structure' ( (lv_connections_1_0= ruleAstStructureStatement ) )+ )
            // InternalCal.g:1846:3: otherlv_0= 'structure' ( (lv_connections_1_0= ruleAstStructureStatement ) )+
            {
            otherlv_0=(Token)match(input,38,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStructureAccess().getStructureKeyword_0());
              		
            }
            // InternalCal.g:1850:3: ( (lv_connections_1_0= ruleAstStructureStatement ) )+
            int cnt31=0;
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID||LA31_0==33||LA31_0==42) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalCal.g:1851:4: (lv_connections_1_0= ruleAstStructureStatement )
            	    {
            	    // InternalCal.g:1851:4: (lv_connections_1_0= ruleAstStructureStatement )
            	    // InternalCal.g:1852:5: lv_connections_1_0= ruleAstStructureStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStructureAccess().getConnectionsAstStructureStatementParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_connections_1_0=ruleAstStructureStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStructureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"connections",
            	      						lv_connections_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStructureStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt31 >= 1 ) break loop31;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(31, input);
                        throw eee;
                }
                cnt31++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStructure"


    // $ANTLR start "entryRuleAstStructureStatement"
    // InternalCal.g:1873:1: entryRuleAstStructureStatement returns [EObject current=null] : iv_ruleAstStructureStatement= ruleAstStructureStatement EOF ;
    public final EObject entryRuleAstStructureStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStructureStatement = null;


        try {
            // InternalCal.g:1873:62: (iv_ruleAstStructureStatement= ruleAstStructureStatement EOF )
            // InternalCal.g:1874:2: iv_ruleAstStructureStatement= ruleAstStructureStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStructureStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStructureStatement=ruleAstStructureStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStructureStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStructureStatement"


    // $ANTLR start "ruleAstStructureStatement"
    // InternalCal.g:1880:1: ruleAstStructureStatement returns [EObject current=null] : (this_AstStructureStatementConnection_0= ruleAstStructureStatementConnection | this_AstStructureStatementForeach_1= ruleAstStructureStatementForeach | this_AstStructureStatementIf_2= ruleAstStructureStatementIf ) ;
    public final EObject ruleAstStructureStatement() throws RecognitionException {
        EObject current = null;

        EObject this_AstStructureStatementConnection_0 = null;

        EObject this_AstStructureStatementForeach_1 = null;

        EObject this_AstStructureStatementIf_2 = null;



        	enterRule();

        try {
            // InternalCal.g:1886:2: ( (this_AstStructureStatementConnection_0= ruleAstStructureStatementConnection | this_AstStructureStatementForeach_1= ruleAstStructureStatementForeach | this_AstStructureStatementIf_2= ruleAstStructureStatementIf ) )
            // InternalCal.g:1887:2: (this_AstStructureStatementConnection_0= ruleAstStructureStatementConnection | this_AstStructureStatementForeach_1= ruleAstStructureStatementForeach | this_AstStructureStatementIf_2= ruleAstStructureStatementIf )
            {
            // InternalCal.g:1887:2: (this_AstStructureStatementConnection_0= ruleAstStructureStatementConnection | this_AstStructureStatementForeach_1= ruleAstStructureStatementForeach | this_AstStructureStatementIf_2= ruleAstStructureStatementIf )
            int alt32=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt32=1;
                }
                break;
            case 42:
                {
                alt32=2;
                }
                break;
            case 33:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalCal.g:1888:3: this_AstStructureStatementConnection_0= ruleAstStructureStatementConnection
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStructureStatementAccess().getAstStructureStatementConnectionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStructureStatementConnection_0=ruleAstStructureStatementConnection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStructureStatementConnection_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:1897:3: this_AstStructureStatementForeach_1= ruleAstStructureStatementForeach
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStructureStatementAccess().getAstStructureStatementForeachParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStructureStatementForeach_1=ruleAstStructureStatementForeach();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStructureStatementForeach_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:1906:3: this_AstStructureStatementIf_2= ruleAstStructureStatementIf
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStructureStatementAccess().getAstStructureStatementIfParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStructureStatementIf_2=ruleAstStructureStatementIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStructureStatementIf_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStructureStatement"


    // $ANTLR start "entryRuleAstStructureStatementConnection"
    // InternalCal.g:1918:1: entryRuleAstStructureStatementConnection returns [EObject current=null] : iv_ruleAstStructureStatementConnection= ruleAstStructureStatementConnection EOF ;
    public final EObject entryRuleAstStructureStatementConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStructureStatementConnection = null;


        try {
            // InternalCal.g:1918:72: (iv_ruleAstStructureStatementConnection= ruleAstStructureStatementConnection EOF )
            // InternalCal.g:1919:2: iv_ruleAstStructureStatementConnection= ruleAstStructureStatementConnection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStructureStatementConnectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStructureStatementConnection=ruleAstStructureStatementConnection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStructureStatementConnection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStructureStatementConnection"


    // $ANTLR start "ruleAstStructureStatementConnection"
    // InternalCal.g:1925:1: ruleAstStructureStatementConnection returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.' )? ( (lv_outPort_5_0= RULE_ID ) ) otherlv_6= '-->' ( ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.' )? ( (lv_inPort_12_0= RULE_ID ) ) (otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}' )? otherlv_16= ';' ) ;
    public final EObject ruleAstStructureStatementConnection() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_outPort_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_inPort_12_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_from_0_0 = null;

        EObject lv_fromIndexes_2_0 = null;

        EObject lv_to_7_0 = null;

        EObject lv_fromIndexes_9_0 = null;

        EObject lv_attribute_14_0 = null;



        	enterRule();

        try {
            // InternalCal.g:1931:2: ( ( ( ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.' )? ( (lv_outPort_5_0= RULE_ID ) ) otherlv_6= '-->' ( ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.' )? ( (lv_inPort_12_0= RULE_ID ) ) (otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}' )? otherlv_16= ';' ) )
            // InternalCal.g:1932:2: ( ( ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.' )? ( (lv_outPort_5_0= RULE_ID ) ) otherlv_6= '-->' ( ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.' )? ( (lv_inPort_12_0= RULE_ID ) ) (otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}' )? otherlv_16= ';' )
            {
            // InternalCal.g:1932:2: ( ( ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.' )? ( (lv_outPort_5_0= RULE_ID ) ) otherlv_6= '-->' ( ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.' )? ( (lv_inPort_12_0= RULE_ID ) ) (otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}' )? otherlv_16= ';' )
            // InternalCal.g:1933:3: ( ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.' )? ( (lv_outPort_5_0= RULE_ID ) ) otherlv_6= '-->' ( ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.' )? ( (lv_inPort_12_0= RULE_ID ) ) (otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}' )? otherlv_16= ';'
            {
            // InternalCal.g:1933:3: ( ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_ID) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==24||LA34_1==36) ) {
                    alt34=1;
                }
            }
            switch (alt34) {
                case 1 :
                    // InternalCal.g:1934:4: ( (lv_from_0_0= ruleAstEntityVariableReference ) ) (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* otherlv_4= '.'
                    {
                    // InternalCal.g:1934:4: ( (lv_from_0_0= ruleAstEntityVariableReference ) )
                    // InternalCal.g:1935:5: (lv_from_0_0= ruleAstEntityVariableReference )
                    {
                    // InternalCal.g:1935:5: (lv_from_0_0= ruleAstEntityVariableReference )
                    // InternalCal.g:1936:6: lv_from_0_0= ruleAstEntityVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStructureStatementConnectionAccess().getFromAstEntityVariableReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_from_0_0=ruleAstEntityVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStructureStatementConnectionRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"streamblocks.eclipse.cal.Cal.AstEntityVariableReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:1953:4: (otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )*
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==36) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // InternalCal.g:1954:5: otherlv_1= '[' ( (lv_fromIndexes_2_0= ruleAstExpression ) ) otherlv_3= ']'
                    	    {
                    	    otherlv_1=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_1, grammarAccess.getAstStructureStatementConnectionAccess().getLeftSquareBracketKeyword_0_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:1958:5: ( (lv_fromIndexes_2_0= ruleAstExpression ) )
                    	    // InternalCal.g:1959:6: (lv_fromIndexes_2_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:1959:6: (lv_fromIndexes_2_0= ruleAstExpression )
                    	    // InternalCal.g:1960:7: lv_fromIndexes_2_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStructureStatementConnectionAccess().getFromIndexesAstExpressionParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_36);
                    	    lv_fromIndexes_2_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStructureStatementConnectionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"fromIndexes",
                    	      								lv_fromIndexes_2_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_3=(Token)match(input,37,FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getAstStructureStatementConnectionAccess().getRightSquareBracketKeyword_0_1_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop33;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstStructureStatementConnectionAccess().getFullStopKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalCal.g:1987:3: ( (lv_outPort_5_0= RULE_ID ) )
            // InternalCal.g:1988:4: (lv_outPort_5_0= RULE_ID )
            {
            // InternalCal.g:1988:4: (lv_outPort_5_0= RULE_ID )
            // InternalCal.g:1989:5: lv_outPort_5_0= RULE_ID
            {
            lv_outPort_5_0=(Token)match(input,RULE_ID,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_outPort_5_0, grammarAccess.getAstStructureStatementConnectionAccess().getOutPortIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstStructureStatementConnectionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"outPort",
              						lv_outPort_5_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstStructureStatementConnectionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2());
              		
            }
            // InternalCal.g:2009:3: ( ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.' )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_ID) ) {
                int LA36_1 = input.LA(2);

                if ( (LA36_1==24||LA36_1==36) ) {
                    alt36=1;
                }
            }
            switch (alt36) {
                case 1 :
                    // InternalCal.g:2010:4: ( (lv_to_7_0= ruleAstEntityVariableReference ) ) (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )* otherlv_11= '.'
                    {
                    // InternalCal.g:2010:4: ( (lv_to_7_0= ruleAstEntityVariableReference ) )
                    // InternalCal.g:2011:5: (lv_to_7_0= ruleAstEntityVariableReference )
                    {
                    // InternalCal.g:2011:5: (lv_to_7_0= ruleAstEntityVariableReference )
                    // InternalCal.g:2012:6: lv_to_7_0= ruleAstEntityVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStructureStatementConnectionAccess().getToAstEntityVariableReferenceParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_to_7_0=ruleAstEntityVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStructureStatementConnectionRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_7_0,
                      							"streamblocks.eclipse.cal.Cal.AstEntityVariableReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:2029:4: (otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']' )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==36) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalCal.g:2030:5: otherlv_8= '[' ( (lv_fromIndexes_9_0= ruleAstExpression ) ) otherlv_10= ']'
                    	    {
                    	    otherlv_8=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getAstStructureStatementConnectionAccess().getLeftSquareBracketKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:2034:5: ( (lv_fromIndexes_9_0= ruleAstExpression ) )
                    	    // InternalCal.g:2035:6: (lv_fromIndexes_9_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:2035:6: (lv_fromIndexes_9_0= ruleAstExpression )
                    	    // InternalCal.g:2036:7: lv_fromIndexes_9_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStructureStatementConnectionAccess().getFromIndexesAstExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_36);
                    	    lv_fromIndexes_9_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStructureStatementConnectionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"fromIndexes",
                    	      								lv_fromIndexes_9_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_10=(Token)match(input,37,FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getAstStructureStatementConnectionAccess().getRightSquareBracketKeyword_3_1_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getAstStructureStatementConnectionAccess().getFullStopKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalCal.g:2063:3: ( (lv_inPort_12_0= RULE_ID ) )
            // InternalCal.g:2064:4: (lv_inPort_12_0= RULE_ID )
            {
            // InternalCal.g:2064:4: (lv_inPort_12_0= RULE_ID )
            // InternalCal.g:2065:5: lv_inPort_12_0= RULE_ID
            {
            lv_inPort_12_0=(Token)match(input,RULE_ID,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_inPort_12_0, grammarAccess.getAstStructureStatementConnectionAccess().getInPortIDTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstStructureStatementConnectionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"inPort",
              						lv_inPort_12_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:2081:3: (otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}' )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==40) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalCal.g:2082:4: otherlv_13= '{' ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )* otherlv_15= '}'
                    {
                    otherlv_13=(Token)match(input,40,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getAstStructureStatementConnectionAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalCal.g:2086:4: ( (lv_attribute_14_0= ruleAstConnectionAttribute ) )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==RULE_ID) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalCal.g:2087:5: (lv_attribute_14_0= ruleAstConnectionAttribute )
                    	    {
                    	    // InternalCal.g:2087:5: (lv_attribute_14_0= ruleAstConnectionAttribute )
                    	    // InternalCal.g:2088:6: lv_attribute_14_0= ruleAstConnectionAttribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAstStructureStatementConnectionAccess().getAttributeAstConnectionAttributeParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_attribute_14_0=ruleAstConnectionAttribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAstStructureStatementConnectionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"attribute",
                    	      							lv_attribute_14_0,
                    	      							"streamblocks.eclipse.cal.Cal.AstConnectionAttribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);

                    otherlv_15=(Token)match(input,41,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getAstStructureStatementConnectionAccess().getRightCurlyBracketKeyword_5_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_16=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getAstStructureStatementConnectionAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStructureStatementConnection"


    // $ANTLR start "entryRuleAstEntityVariableReference"
    // InternalCal.g:2118:1: entryRuleAstEntityVariableReference returns [EObject current=null] : iv_ruleAstEntityVariableReference= ruleAstEntityVariableReference EOF ;
    public final EObject entryRuleAstEntityVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstEntityVariableReference = null;


        try {
            // InternalCal.g:2118:67: (iv_ruleAstEntityVariableReference= ruleAstEntityVariableReference EOF )
            // InternalCal.g:2119:2: iv_ruleAstEntityVariableReference= ruleAstEntityVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstEntityVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstEntityVariableReference=ruleAstEntityVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstEntityVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstEntityVariableReference"


    // $ANTLR start "ruleAstEntityVariableReference"
    // InternalCal.g:2125:1: ruleAstEntityVariableReference returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleAstEntityVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalCal.g:2131:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalCal.g:2132:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalCal.g:2132:2: ( (otherlv_0= RULE_ID ) )
            // InternalCal.g:2133:3: (otherlv_0= RULE_ID )
            {
            // InternalCal.g:2133:3: (otherlv_0= RULE_ID )
            // InternalCal.g:2134:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAstEntityVariableReferenceRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getAstEntityVariableReferenceAccess().getVariableAstEntityVariableCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstEntityVariableReference"


    // $ANTLR start "entryRuleAstConnectionAttribute"
    // InternalCal.g:2148:1: entryRuleAstConnectionAttribute returns [EObject current=null] : iv_ruleAstConnectionAttribute= ruleAstConnectionAttribute EOF ;
    public final EObject entryRuleAstConnectionAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstConnectionAttribute = null;


        try {
            // InternalCal.g:2148:63: (iv_ruleAstConnectionAttribute= ruleAstConnectionAttribute EOF )
            // InternalCal.g:2149:2: iv_ruleAstConnectionAttribute= ruleAstConnectionAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstConnectionAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstConnectionAttribute=ruleAstConnectionAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstConnectionAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstConnectionAttribute"


    // $ANTLR start "ruleAstConnectionAttribute"
    // InternalCal.g:2155:1: ruleAstConnectionAttribute returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleAstConnectionAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2161:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' ) )
            // InternalCal.g:2162:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' )
            {
            // InternalCal.g:2162:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' )
            // InternalCal.g:2163:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';'
            {
            // InternalCal.g:2163:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:2164:4: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:2164:4: (lv_name_0_0= RULE_ID )
            // InternalCal.g:2165:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAstConnectionAttributeAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstConnectionAttributeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstConnectionAttributeAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalCal.g:2185:3: ( (lv_value_2_0= ruleAstExpression ) )
            // InternalCal.g:2186:4: (lv_value_2_0= ruleAstExpression )
            {
            // InternalCal.g:2186:4: (lv_value_2_0= ruleAstExpression )
            // InternalCal.g:2187:5: lv_value_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstConnectionAttributeAccess().getValueAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_value_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstConnectionAttributeRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstConnectionAttributeAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstConnectionAttribute"


    // $ANTLR start "entryRuleAstStructureStatementForeach"
    // InternalCal.g:2212:1: entryRuleAstStructureStatementForeach returns [EObject current=null] : iv_ruleAstStructureStatementForeach= ruleAstStructureStatementForeach EOF ;
    public final EObject entryRuleAstStructureStatementForeach() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStructureStatementForeach = null;


        try {
            // InternalCal.g:2212:69: (iv_ruleAstStructureStatementForeach= ruleAstStructureStatementForeach EOF )
            // InternalCal.g:2213:2: iv_ruleAstStructureStatementForeach= ruleAstStructureStatementForeach EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStructureStatementForeachRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStructureStatementForeach=ruleAstStructureStatementForeach();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStructureStatementForeach; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStructureStatementForeach"


    // $ANTLR start "ruleAstStructureStatementForeach"
    // InternalCal.g:2219:1: ruleAstStructureStatementForeach returns [EObject current=null] : (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* otherlv_4= 'do' (otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )* )? ( (lv_statements_9_0= ruleAstStructureStatement ) )* otherlv_10= 'end' ) ;
    public final EObject ruleAstStructureStatementForeach() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        EObject lv_generators_1_0 = null;

        EObject lv_generators_3_0 = null;

        EObject lv_variables_6_0 = null;

        EObject lv_variables_8_0 = null;

        EObject lv_statements_9_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2225:2: ( (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* otherlv_4= 'do' (otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )* )? ( (lv_statements_9_0= ruleAstStructureStatement ) )* otherlv_10= 'end' ) )
            // InternalCal.g:2226:2: (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* otherlv_4= 'do' (otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )* )? ( (lv_statements_9_0= ruleAstStructureStatement ) )* otherlv_10= 'end' )
            {
            // InternalCal.g:2226:2: (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* otherlv_4= 'do' (otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )* )? ( (lv_statements_9_0= ruleAstStructureStatement ) )* otherlv_10= 'end' )
            // InternalCal.g:2227:3: otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* otherlv_4= 'do' (otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )* )? ( (lv_statements_9_0= ruleAstStructureStatement ) )* otherlv_10= 'end'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStructureStatementForeachAccess().getForeachKeyword_0());
              		
            }
            // InternalCal.g:2231:3: ( (lv_generators_1_0= ruleAstForeachGenerator ) )
            // InternalCal.g:2232:4: (lv_generators_1_0= ruleAstForeachGenerator )
            {
            // InternalCal.g:2232:4: (lv_generators_1_0= ruleAstForeachGenerator )
            // InternalCal.g:2233:5: lv_generators_1_0= ruleAstForeachGenerator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStructureStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_43);
            lv_generators_1_0=ruleAstForeachGenerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStructureStatementForeachRule());
              					}
              					add(
              						current,
              						"generators",
              						lv_generators_1_0,
              						"streamblocks.eclipse.cal.Cal.AstForeachGenerator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:2250:3: (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==28) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalCal.g:2251:4: otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstStructureStatementForeachAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:2255:4: ( (lv_generators_3_0= ruleAstForeachGenerator ) )
            	    // InternalCal.g:2256:5: (lv_generators_3_0= ruleAstForeachGenerator )
            	    {
            	    // InternalCal.g:2256:5: (lv_generators_3_0= ruleAstForeachGenerator )
            	    // InternalCal.g:2257:6: lv_generators_3_0= ruleAstForeachGenerator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstStructureStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_generators_3_0=ruleAstForeachGenerator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstStructureStatementForeachRule());
            	      						}
            	      						add(
            	      							current,
            	      							"generators",
            	      							lv_generators_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstForeachGenerator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            otherlv_4=(Token)match(input,43,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstStructureStatementForeachAccess().getDoKeyword_3());
              		
            }
            // InternalCal.g:2279:3: (otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==31) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalCal.g:2280:4: otherlv_5= 'var' ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_5=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstStructureStatementForeachAccess().getVarKeyword_4_0());
                      			
                    }
                    // InternalCal.g:2284:4: ( (lv_variables_6_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:2285:5: (lv_variables_6_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:2285:5: (lv_variables_6_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:2286:6: lv_variables_6_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStructureStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_variables_6_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStructureStatementForeachRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:2303:4: (otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==28) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // InternalCal.g:2304:5: otherlv_7= ',' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_7=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getAstStructureStatementForeachAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:2308:5: ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:2309:6: (lv_variables_8_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:2309:6: (lv_variables_8_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:2310:7: lv_variables_8_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStructureStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_45);
                    	    lv_variables_8_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStructureStatementForeachRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_8_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop40;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:2329:3: ( (lv_statements_9_0= ruleAstStructureStatement ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_ID||LA42_0==33||LA42_0==42) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalCal.g:2330:4: (lv_statements_9_0= ruleAstStructureStatement )
            	    {
            	    // InternalCal.g:2330:4: (lv_statements_9_0= ruleAstStructureStatement )
            	    // InternalCal.g:2331:5: lv_statements_9_0= ruleAstStructureStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStructureStatementForeachAccess().getStatementsAstStructureStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_46);
            	    lv_statements_9_0=ruleAstStructureStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStructureStatementForeachRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_9_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStructureStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            otherlv_10=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getAstStructureStatementForeachAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStructureStatementForeach"


    // $ANTLR start "entryRuleAstStructureStatementIf"
    // InternalCal.g:2356:1: entryRuleAstStructureStatementIf returns [EObject current=null] : iv_ruleAstStructureStatementIf= ruleAstStructureStatementIf EOF ;
    public final EObject entryRuleAstStructureStatementIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStructureStatementIf = null;


        try {
            // InternalCal.g:2356:64: (iv_ruleAstStructureStatementIf= ruleAstStructureStatementIf EOF )
            // InternalCal.g:2357:2: iv_ruleAstStructureStatementIf= ruleAstStructureStatementIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStructureStatementIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStructureStatementIf=ruleAstStructureStatementIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStructureStatementIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStructureStatementIf"


    // $ANTLR start "ruleAstStructureStatementIf"
    // InternalCal.g:2363:1: ruleAstStructureStatementIf returns [EObject current=null] : (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ( (lv_elsifs_4_0= ruleAstStructureStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )* )? otherlv_7= 'end' ) ;
    public final EObject ruleAstStructureStatementIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_3_0 = null;

        EObject lv_elsifs_4_0 = null;

        EObject lv_else_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2369:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ( (lv_elsifs_4_0= ruleAstStructureStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )* )? otherlv_7= 'end' ) )
            // InternalCal.g:2370:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ( (lv_elsifs_4_0= ruleAstStructureStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )* )? otherlv_7= 'end' )
            {
            // InternalCal.g:2370:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ( (lv_elsifs_4_0= ruleAstStructureStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )* )? otherlv_7= 'end' )
            // InternalCal.g:2371:3: otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ( (lv_elsifs_4_0= ruleAstStructureStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )* )? otherlv_7= 'end'
            {
            otherlv_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStructureStatementIfAccess().getIfKeyword_0());
              		
            }
            // InternalCal.g:2375:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:2376:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:2376:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:2377:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStructureStatementIfAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStructureStatementIfRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStructureStatementIfAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:2398:3: ( (lv_then_3_0= ruleAstStructureStatement ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==RULE_ID||LA43_0==33||LA43_0==42) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalCal.g:2399:4: (lv_then_3_0= ruleAstStructureStatement )
            	    {
            	    // InternalCal.g:2399:4: (lv_then_3_0= ruleAstStructureStatement )
            	    // InternalCal.g:2400:5: lv_then_3_0= ruleAstStructureStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStructureStatementIfAccess().getThenAstStructureStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_then_3_0=ruleAstStructureStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStructureStatementIfRule());
            	      					}
            	      					add(
            	      						current,
            	      						"then",
            	      						lv_then_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStructureStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            // InternalCal.g:2417:3: ( (lv_elsifs_4_0= ruleAstStructureStatementElsif ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==44) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalCal.g:2418:4: (lv_elsifs_4_0= ruleAstStructureStatementElsif )
            	    {
            	    // InternalCal.g:2418:4: (lv_elsifs_4_0= ruleAstStructureStatementElsif )
            	    // InternalCal.g:2419:5: lv_elsifs_4_0= ruleAstStructureStatementElsif
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStructureStatementIfAccess().getElsifsAstStructureStatementElsifParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_elsifs_4_0=ruleAstStructureStatementElsif();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStructureStatementIfRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elsifs",
            	      						lv_elsifs_4_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStructureStatementElsif");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            // InternalCal.g:2436:3: (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )* )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==35) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalCal.g:2437:4: otherlv_5= 'else' ( (lv_else_6_0= ruleAstStructureStatement ) )*
                    {
                    otherlv_5=(Token)match(input,35,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstStructureStatementIfAccess().getElseKeyword_5_0());
                      			
                    }
                    // InternalCal.g:2441:4: ( (lv_else_6_0= ruleAstStructureStatement ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==RULE_ID||LA45_0==33||LA45_0==42) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalCal.g:2442:5: (lv_else_6_0= ruleAstStructureStatement )
                    	    {
                    	    // InternalCal.g:2442:5: (lv_else_6_0= ruleAstStructureStatement )
                    	    // InternalCal.g:2443:6: lv_else_6_0= ruleAstStructureStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAstStructureStatementIfAccess().getElseAstStructureStatementParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_else_6_0=ruleAstStructureStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAstStructureStatementIfRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"else",
                    	      							lv_else_6_0,
                    	      							"streamblocks.eclipse.cal.Cal.AstStructureStatement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstStructureStatementIfAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStructureStatementIf"


    // $ANTLR start "entryRuleAstStructureStatementElsif"
    // InternalCal.g:2469:1: entryRuleAstStructureStatementElsif returns [EObject current=null] : iv_ruleAstStructureStatementElsif= ruleAstStructureStatementElsif EOF ;
    public final EObject entryRuleAstStructureStatementElsif() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStructureStatementElsif = null;


        try {
            // InternalCal.g:2469:67: (iv_ruleAstStructureStatementElsif= ruleAstStructureStatementElsif EOF )
            // InternalCal.g:2470:2: iv_ruleAstStructureStatementElsif= ruleAstStructureStatementElsif EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStructureStatementElsifRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStructureStatementElsif=ruleAstStructureStatementElsif();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStructureStatementElsif; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStructureStatementElsif"


    // $ANTLR start "ruleAstStructureStatementElsif"
    // InternalCal.g:2476:1: ruleAstStructureStatementElsif returns [EObject current=null] : (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ) ;
    public final EObject ruleAstStructureStatementElsif() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2482:2: ( (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* ) )
            // InternalCal.g:2483:2: (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* )
            {
            // InternalCal.g:2483:2: (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )* )
            // InternalCal.g:2484:3: otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStructureStatement ) )*
            {
            otherlv_0=(Token)match(input,44,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStructureStatementElsifAccess().getElsifKeyword_0());
              		
            }
            // InternalCal.g:2488:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:2489:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:2489:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:2490:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStructureStatementElsifAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStructureStatementElsifRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStructureStatementElsifAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:2511:3: ( (lv_then_3_0= ruleAstStructureStatement ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==RULE_ID||LA47_0==33||LA47_0==42) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalCal.g:2512:4: (lv_then_3_0= ruleAstStructureStatement )
            	    {
            	    // InternalCal.g:2512:4: (lv_then_3_0= ruleAstStructureStatement )
            	    // InternalCal.g:2513:5: lv_then_3_0= ruleAstStructureStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStructureStatementElsifAccess().getThenAstStructureStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_then_3_0=ruleAstStructureStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStructureStatementElsifRule());
            	      					}
            	      					add(
            	      						current,
            	      						"then",
            	      						lv_then_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStructureStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStructureStatementElsif"


    // $ANTLR start "entryRuleAstConstantVariable"
    // InternalCal.g:2534:1: entryRuleAstConstantVariable returns [EObject current=null] : iv_ruleAstConstantVariable= ruleAstConstantVariable EOF ;
    public final EObject entryRuleAstConstantVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstConstantVariable = null;


        try {
            // InternalCal.g:2534:60: (iv_ruleAstConstantVariable= ruleAstConstantVariable EOF )
            // InternalCal.g:2535:2: iv_ruleAstConstantVariable= ruleAstConstantVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstConstantVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstConstantVariable=ruleAstConstantVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstConstantVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstConstantVariable"


    // $ANTLR start "ruleAstConstantVariable"
    // InternalCal.g:2541:1: ruleAstConstantVariable returns [EObject current=null] : (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( (lv_constant_1_0= '=' ) ) ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleAstConstantVariable() throws RecognitionException {
        EObject current = null;

        Token lv_constant_1_0=null;
        Token otherlv_3=null;
        EObject this_AstVariableDeclaration_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2547:2: ( (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( (lv_constant_1_0= '=' ) ) ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' ) )
            // InternalCal.g:2548:2: (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( (lv_constant_1_0= '=' ) ) ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' )
            {
            // InternalCal.g:2548:2: (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( (lv_constant_1_0= '=' ) ) ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' )
            // InternalCal.g:2549:3: this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( (lv_constant_1_0= '=' ) ) ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstConstantVariableAccess().getAstVariableDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_28);
            this_AstVariableDeclaration_0=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstVariableDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:2557:3: ( (lv_constant_1_0= '=' ) )
            // InternalCal.g:2558:4: (lv_constant_1_0= '=' )
            {
            // InternalCal.g:2558:4: (lv_constant_1_0= '=' )
            // InternalCal.g:2559:5: lv_constant_1_0= '='
            {
            lv_constant_1_0=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_constant_1_0, grammarAccess.getAstConstantVariableAccess().getConstantEqualsSignKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstConstantVariableRule());
              					}
              					setWithLastConsumed(current, "constant", true, "=");
              				
            }

            }


            }

            // InternalCal.g:2571:3: ( (lv_value_2_0= ruleAstExpression ) )
            // InternalCal.g:2572:4: (lv_value_2_0= ruleAstExpression )
            {
            // InternalCal.g:2572:4: (lv_value_2_0= ruleAstExpression )
            // InternalCal.g:2573:5: lv_value_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstConstantVariableAccess().getValueAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_value_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstConstantVariableRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstConstantVariableAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstConstantVariable"


    // $ANTLR start "entryRuleAstExternalVariable"
    // InternalCal.g:2598:1: entryRuleAstExternalVariable returns [EObject current=null] : iv_ruleAstExternalVariable= ruleAstExternalVariable EOF ;
    public final EObject entryRuleAstExternalVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExternalVariable = null;


        try {
            // InternalCal.g:2598:60: (iv_ruleAstExternalVariable= ruleAstExternalVariable EOF )
            // InternalCal.g:2599:2: iv_ruleAstExternalVariable= ruleAstExternalVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExternalVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExternalVariable=ruleAstExternalVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExternalVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExternalVariable"


    // $ANTLR start "ruleAstExternalVariable"
    // InternalCal.g:2605:1: ruleAstExternalVariable returns [EObject current=null] : (otherlv_0= 'external' this_AstVariableDeclaration_1= ruleAstVariableDeclaration otherlv_2= ';' ) ;
    public final EObject ruleAstExternalVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_AstVariableDeclaration_1 = null;



        	enterRule();

        try {
            // InternalCal.g:2611:2: ( (otherlv_0= 'external' this_AstVariableDeclaration_1= ruleAstVariableDeclaration otherlv_2= ';' ) )
            // InternalCal.g:2612:2: (otherlv_0= 'external' this_AstVariableDeclaration_1= ruleAstVariableDeclaration otherlv_2= ';' )
            {
            // InternalCal.g:2612:2: (otherlv_0= 'external' this_AstVariableDeclaration_1= ruleAstVariableDeclaration otherlv_2= ';' )
            // InternalCal.g:2613:3: otherlv_0= 'external' this_AstVariableDeclaration_1= ruleAstVariableDeclaration otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,45,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExternalVariableAccess().getExternalKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExternalVariableAccess().getAstVariableDeclarationParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_4);
            this_AstVariableDeclaration_1=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstVariableDeclaration_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExternalVariableAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExternalVariable"


    // $ANTLR start "entryRuleAstTypeDefinition"
    // InternalCal.g:2633:1: entryRuleAstTypeDefinition returns [EObject current=null] : iv_ruleAstTypeDefinition= ruleAstTypeDefinition EOF ;
    public final EObject entryRuleAstTypeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTypeDefinition = null;


        try {
            // InternalCal.g:2633:58: (iv_ruleAstTypeDefinition= ruleAstTypeDefinition EOF )
            // InternalCal.g:2634:2: iv_ruleAstTypeDefinition= ruleAstTypeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTypeDefinition=ruleAstTypeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTypeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTypeDefinition"


    // $ANTLR start "ruleAstTypeDefinition"
    // InternalCal.g:2640:1: ruleAstTypeDefinition returns [EObject current=null] : ( ( (lv_definition_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')' )? otherlv_7= ':' ( ( (lv_tuples_8_0= ruleAstTuple ) ) | ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* ) ) otherlv_12= 'end' ) ;
    public final EObject ruleAstTypeDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_definition_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_tuples_8_0 = null;

        EObject lv_tuples_9_0 = null;

        EObject lv_tuples_11_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2646:2: ( ( ( (lv_definition_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')' )? otherlv_7= ':' ( ( (lv_tuples_8_0= ruleAstTuple ) ) | ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* ) ) otherlv_12= 'end' ) )
            // InternalCal.g:2647:2: ( ( (lv_definition_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')' )? otherlv_7= ':' ( ( (lv_tuples_8_0= ruleAstTuple ) ) | ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* ) ) otherlv_12= 'end' )
            {
            // InternalCal.g:2647:2: ( ( (lv_definition_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')' )? otherlv_7= ':' ( ( (lv_tuples_8_0= ruleAstTuple ) ) | ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* ) ) otherlv_12= 'end' )
            // InternalCal.g:2648:3: ( (lv_definition_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')' )? otherlv_7= ':' ( ( (lv_tuples_8_0= ruleAstTuple ) ) | ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* ) ) otherlv_12= 'end'
            {
            // InternalCal.g:2648:3: ( (lv_definition_0_0= 'type' ) )
            // InternalCal.g:2649:4: (lv_definition_0_0= 'type' )
            {
            // InternalCal.g:2649:4: (lv_definition_0_0= 'type' )
            // InternalCal.g:2650:5: lv_definition_0_0= 'type'
            {
            lv_definition_0_0=(Token)match(input,46,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_definition_0_0, grammarAccess.getAstTypeDefinitionAccess().getDefinitionTypeKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTypeDefinitionRule());
              					}
              					setWithLastConsumed(current, "definition", true, "type");
              				
            }

            }


            }

            // InternalCal.g:2662:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalCal.g:2663:4: (lv_name_1_0= RULE_ID )
            {
            // InternalCal.g:2663:4: (lv_name_1_0= RULE_ID )
            // InternalCal.g:2664:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAstTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTypeDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:2680:3: (otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')' )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==27) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalCal.g:2681:4: otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )? otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,27,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAstTypeDefinitionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalCal.g:2685:4: ( ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )* )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==RULE_ID||LA49_0==36||LA49_0==46||LA49_0==99||LA49_0==108||(LA49_0>=110 && LA49_0<=117)) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalCal.g:2686:5: ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )*
                            {
                            // InternalCal.g:2686:5: ( (lv_parameters_3_0= ruleAstTypeDefinitionParameter ) )
                            // InternalCal.g:2687:6: (lv_parameters_3_0= ruleAstTypeDefinitionParameter )
                            {
                            // InternalCal.g:2687:6: (lv_parameters_3_0= ruleAstTypeDefinitionParameter )
                            // InternalCal.g:2688:7: lv_parameters_3_0= ruleAstTypeDefinitionParameter
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAstTypeDefinitionAccess().getParametersAstTypeDefinitionParameterParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_18);
                            lv_parameters_3_0=ruleAstTypeDefinitionParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAstTypeDefinitionRule());
                              							}
                              							add(
                              								current,
                              								"parameters",
                              								lv_parameters_3_0,
                              								"streamblocks.eclipse.cal.Cal.AstTypeDefinitionParameter");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalCal.g:2705:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) ) )*
                            loop48:
                            do {
                                int alt48=2;
                                int LA48_0 = input.LA(1);

                                if ( (LA48_0==28) ) {
                                    alt48=1;
                                }


                                switch (alt48) {
                            	case 1 :
                            	    // InternalCal.g:2706:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) )
                            	    {
                            	    otherlv_4=(Token)match(input,28,FOLLOW_51); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getAstTypeDefinitionAccess().getCommaKeyword_2_1_1_0());
                            	      					
                            	    }
                            	    // InternalCal.g:2710:6: ( (lv_parameters_5_0= ruleAstTypeDefinitionParameter ) )
                            	    // InternalCal.g:2711:7: (lv_parameters_5_0= ruleAstTypeDefinitionParameter )
                            	    {
                            	    // InternalCal.g:2711:7: (lv_parameters_5_0= ruleAstTypeDefinitionParameter )
                            	    // InternalCal.g:2712:8: lv_parameters_5_0= ruleAstTypeDefinitionParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getAstTypeDefinitionAccess().getParametersAstTypeDefinitionParameterParserRuleCall_2_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_18);
                            	    lv_parameters_5_0=ruleAstTypeDefinitionParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getAstTypeDefinitionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"parameters",
                            	      									lv_parameters_5_0,
                            	      									"streamblocks.eclipse.cal.Cal.AstTypeDefinitionParameter");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop48;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,29,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstTypeDefinitionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,18,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstTypeDefinitionAccess().getColonKeyword_3());
              		
            }
            // InternalCal.g:2740:3: ( ( (lv_tuples_8_0= ruleAstTuple ) ) | ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==27) ) {
                alt52=1;
            }
            else if ( (LA52_0==RULE_ID) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalCal.g:2741:4: ( (lv_tuples_8_0= ruleAstTuple ) )
                    {
                    // InternalCal.g:2741:4: ( (lv_tuples_8_0= ruleAstTuple ) )
                    // InternalCal.g:2742:5: (lv_tuples_8_0= ruleAstTuple )
                    {
                    // InternalCal.g:2742:5: (lv_tuples_8_0= ruleAstTuple )
                    // InternalCal.g:2743:6: lv_tuples_8_0= ruleAstTuple
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstTypeDefinitionAccess().getTuplesAstTupleParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_tuples_8_0=ruleAstTuple();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstTypeDefinitionRule());
                      						}
                      						add(
                      							current,
                      							"tuples",
                      							lv_tuples_8_0,
                      							"streamblocks.eclipse.cal.Cal.AstTuple");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:2761:4: ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* )
                    {
                    // InternalCal.g:2761:4: ( ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )* )
                    // InternalCal.g:2762:5: ( (lv_tuples_9_0= ruleAstTaggedTuple ) ) (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )*
                    {
                    // InternalCal.g:2762:5: ( (lv_tuples_9_0= ruleAstTaggedTuple ) )
                    // InternalCal.g:2763:6: (lv_tuples_9_0= ruleAstTaggedTuple )
                    {
                    // InternalCal.g:2763:6: (lv_tuples_9_0= ruleAstTaggedTuple )
                    // InternalCal.g:2764:7: lv_tuples_9_0= ruleAstTaggedTuple
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAstTypeDefinitionAccess().getTuplesAstTaggedTupleParserRuleCall_4_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_53);
                    lv_tuples_9_0=ruleAstTaggedTuple();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAstTypeDefinitionRule());
                      							}
                      							add(
                      								current,
                      								"tuples",
                      								lv_tuples_9_0,
                      								"streamblocks.eclipse.cal.Cal.AstTaggedTuple");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalCal.g:2781:5: (otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==47) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalCal.g:2782:6: otherlv_10= '|' ( (lv_tuples_11_0= ruleAstTaggedTuple ) )
                    	    {
                    	    otherlv_10=(Token)match(input,47,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getAstTypeDefinitionAccess().getVerticalLineKeyword_4_1_1_0());
                    	      					
                    	    }
                    	    // InternalCal.g:2786:6: ( (lv_tuples_11_0= ruleAstTaggedTuple ) )
                    	    // InternalCal.g:2787:7: (lv_tuples_11_0= ruleAstTaggedTuple )
                    	    {
                    	    // InternalCal.g:2787:7: (lv_tuples_11_0= ruleAstTaggedTuple )
                    	    // InternalCal.g:2788:8: lv_tuples_11_0= ruleAstTaggedTuple
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getAstTypeDefinitionAccess().getTuplesAstTaggedTupleParserRuleCall_4_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_53);
                    	    lv_tuples_11_0=ruleAstTaggedTuple();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getAstTypeDefinitionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"tuples",
                    	      									lv_tuples_11_0,
                    	      									"streamblocks.eclipse.cal.Cal.AstTaggedTuple");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getAstTypeDefinitionAccess().getEndKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTypeDefinition"


    // $ANTLR start "entryRuleAstTypeDefinitionParameter"
    // InternalCal.g:2816:1: entryRuleAstTypeDefinitionParameter returns [EObject current=null] : iv_ruleAstTypeDefinitionParameter= ruleAstTypeDefinitionParameter EOF ;
    public final EObject entryRuleAstTypeDefinitionParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTypeDefinitionParameter = null;


        try {
            // InternalCal.g:2816:67: (iv_ruleAstTypeDefinitionParameter= ruleAstTypeDefinitionParameter EOF )
            // InternalCal.g:2817:2: iv_ruleAstTypeDefinitionParameter= ruleAstTypeDefinitionParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeDefinitionParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTypeDefinitionParameter=ruleAstTypeDefinitionParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTypeDefinitionParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTypeDefinitionParameter"


    // $ANTLR start "ruleAstTypeDefinitionParameter"
    // InternalCal.g:2823:1: ruleAstTypeDefinitionParameter returns [EObject current=null] : ( ( (lv_value_0_0= ruleAstVariableDeclaration ) ) | ( (lv_type_1_0= ruleAstTypeDefinitionTypeParameter ) ) ) ;
    public final EObject ruleAstTypeDefinitionParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_value_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2829:2: ( ( ( (lv_value_0_0= ruleAstVariableDeclaration ) ) | ( (lv_type_1_0= ruleAstTypeDefinitionTypeParameter ) ) ) )
            // InternalCal.g:2830:2: ( ( (lv_value_0_0= ruleAstVariableDeclaration ) ) | ( (lv_type_1_0= ruleAstTypeDefinitionTypeParameter ) ) )
            {
            // InternalCal.g:2830:2: ( ( (lv_value_0_0= ruleAstVariableDeclaration ) ) | ( (lv_type_1_0= ruleAstTypeDefinitionTypeParameter ) ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_ID||LA53_0==36||LA53_0==99||LA53_0==108||(LA53_0>=110 && LA53_0<=117)) ) {
                alt53=1;
            }
            else if ( (LA53_0==46) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalCal.g:2831:3: ( (lv_value_0_0= ruleAstVariableDeclaration ) )
                    {
                    // InternalCal.g:2831:3: ( (lv_value_0_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:2832:4: (lv_value_0_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:2832:4: (lv_value_0_0= ruleAstVariableDeclaration )
                    // InternalCal.g:2833:5: lv_value_0_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAstTypeDefinitionParameterAccess().getValueAstVariableDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_0_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAstTypeDefinitionParameterRule());
                      					}
                      					set(
                      						current,
                      						"value",
                      						lv_value_0_0,
                      						"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:2851:3: ( (lv_type_1_0= ruleAstTypeDefinitionTypeParameter ) )
                    {
                    // InternalCal.g:2851:3: ( (lv_type_1_0= ruleAstTypeDefinitionTypeParameter ) )
                    // InternalCal.g:2852:4: (lv_type_1_0= ruleAstTypeDefinitionTypeParameter )
                    {
                    // InternalCal.g:2852:4: (lv_type_1_0= ruleAstTypeDefinitionTypeParameter )
                    // InternalCal.g:2853:5: lv_type_1_0= ruleAstTypeDefinitionTypeParameter
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAstTypeDefinitionParameterAccess().getTypeAstTypeDefinitionTypeParameterParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruleAstTypeDefinitionTypeParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAstTypeDefinitionParameterRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"streamblocks.eclipse.cal.Cal.AstTypeDefinitionTypeParameter");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTypeDefinitionParameter"


    // $ANTLR start "entryRuleAstTypeDefinitionTypeParameter"
    // InternalCal.g:2874:1: entryRuleAstTypeDefinitionTypeParameter returns [EObject current=null] : iv_ruleAstTypeDefinitionTypeParameter= ruleAstTypeDefinitionTypeParameter EOF ;
    public final EObject entryRuleAstTypeDefinitionTypeParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTypeDefinitionTypeParameter = null;


        try {
            // InternalCal.g:2874:71: (iv_ruleAstTypeDefinitionTypeParameter= ruleAstTypeDefinitionTypeParameter EOF )
            // InternalCal.g:2875:2: iv_ruleAstTypeDefinitionTypeParameter= ruleAstTypeDefinitionTypeParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeDefinitionTypeParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTypeDefinitionTypeParameter=ruleAstTypeDefinitionTypeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTypeDefinitionTypeParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTypeDefinitionTypeParameter"


    // $ANTLR start "ruleAstTypeDefinitionTypeParameter"
    // InternalCal.g:2881:1: ruleAstTypeDefinitionTypeParameter returns [EObject current=null] : ( ( (lv_variable_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleAstTypeDefinitionTypeParameter() throws RecognitionException {
        EObject current = null;

        Token lv_variable_0_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalCal.g:2887:2: ( ( ( (lv_variable_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalCal.g:2888:2: ( ( (lv_variable_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalCal.g:2888:2: ( ( (lv_variable_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) ) )
            // InternalCal.g:2889:3: ( (lv_variable_0_0= 'type' ) ) ( (lv_name_1_0= RULE_ID ) )
            {
            // InternalCal.g:2889:3: ( (lv_variable_0_0= 'type' ) )
            // InternalCal.g:2890:4: (lv_variable_0_0= 'type' )
            {
            // InternalCal.g:2890:4: (lv_variable_0_0= 'type' )
            // InternalCal.g:2891:5: lv_variable_0_0= 'type'
            {
            lv_variable_0_0=(Token)match(input,46,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_variable_0_0, grammarAccess.getAstTypeDefinitionTypeParameterAccess().getVariableTypeKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTypeDefinitionTypeParameterRule());
              					}
              					setWithLastConsumed(current, "variable", true, "type");
              				
            }

            }


            }

            // InternalCal.g:2903:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalCal.g:2904:4: (lv_name_1_0= RULE_ID )
            {
            // InternalCal.g:2904:4: (lv_name_1_0= RULE_ID )
            // InternalCal.g:2905:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAstTypeDefinitionTypeParameterAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTypeDefinitionTypeParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTypeDefinitionTypeParameter"


    // $ANTLR start "entryRuleAstTaggedTuple"
    // InternalCal.g:2925:1: entryRuleAstTaggedTuple returns [EObject current=null] : iv_ruleAstTaggedTuple= ruleAstTaggedTuple EOF ;
    public final EObject entryRuleAstTaggedTuple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTaggedTuple = null;


        try {
            // InternalCal.g:2925:55: (iv_ruleAstTaggedTuple= ruleAstTaggedTuple EOF )
            // InternalCal.g:2926:2: iv_ruleAstTaggedTuple= ruleAstTaggedTuple EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTaggedTupleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTaggedTuple=ruleAstTaggedTuple();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTaggedTuple; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTaggedTuple"


    // $ANTLR start "ruleAstTaggedTuple"
    // InternalCal.g:2932:1: ruleAstTaggedTuple returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleAstTaggedTuple() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_fields_2_0 = null;

        EObject lv_fields_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:2938:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )? ) )
            // InternalCal.g:2939:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalCal.g:2939:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )? )
            // InternalCal.g:2940:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )?
            {
            // InternalCal.g:2940:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:2941:4: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:2941:4: (lv_name_0_0= RULE_ID )
            // InternalCal.g:2942:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAstTaggedTupleAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTaggedTupleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:2958:3: (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==27) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalCal.g:2959:4: otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstTaggedTupleAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalCal.g:2963:4: ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )?
                    int alt55=2;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==RULE_ID||LA55_0==36||LA55_0==99||LA55_0==108||(LA55_0>=110 && LA55_0<=117)) ) {
                        alt55=1;
                    }
                    switch (alt55) {
                        case 1 :
                            // InternalCal.g:2964:5: ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )*
                            {
                            // InternalCal.g:2964:5: ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) )
                            // InternalCal.g:2965:6: (lv_fields_2_0= ruleAstValuedVariableDeclaration )
                            {
                            // InternalCal.g:2965:6: (lv_fields_2_0= ruleAstValuedVariableDeclaration )
                            // InternalCal.g:2966:7: lv_fields_2_0= ruleAstValuedVariableDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAstTaggedTupleAccess().getFieldsAstValuedVariableDeclarationParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_18);
                            lv_fields_2_0=ruleAstValuedVariableDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAstTaggedTupleRule());
                              							}
                              							add(
                              								current,
                              								"fields",
                              								lv_fields_2_0,
                              								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalCal.g:2983:5: (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )*
                            loop54:
                            do {
                                int alt54=2;
                                int LA54_0 = input.LA(1);

                                if ( (LA54_0==28) ) {
                                    alt54=1;
                                }


                                switch (alt54) {
                            	case 1 :
                            	    // InternalCal.g:2984:6: otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) )
                            	    {
                            	    otherlv_3=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getAstTaggedTupleAccess().getCommaKeyword_1_1_1_0());
                            	      					
                            	    }
                            	    // InternalCal.g:2988:6: ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) )
                            	    // InternalCal.g:2989:7: (lv_fields_4_0= ruleAstValuedVariableDeclaration )
                            	    {
                            	    // InternalCal.g:2989:7: (lv_fields_4_0= ruleAstValuedVariableDeclaration )
                            	    // InternalCal.g:2990:8: lv_fields_4_0= ruleAstValuedVariableDeclaration
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getAstTaggedTupleAccess().getFieldsAstValuedVariableDeclarationParserRuleCall_1_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_18);
                            	    lv_fields_4_0=ruleAstValuedVariableDeclaration();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getAstTaggedTupleRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"fields",
                            	      									lv_fields_4_0,
                            	      									"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop54;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstTaggedTupleAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTaggedTuple"


    // $ANTLR start "entryRuleAstTuple"
    // InternalCal.g:3018:1: entryRuleAstTuple returns [EObject current=null] : iv_ruleAstTuple= ruleAstTuple EOF ;
    public final EObject entryRuleAstTuple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTuple = null;


        try {
            // InternalCal.g:3018:49: (iv_ruleAstTuple= ruleAstTuple EOF )
            // InternalCal.g:3019:2: iv_ruleAstTuple= ruleAstTuple EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTupleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTuple=ruleAstTuple();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTuple; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTuple"


    // $ANTLR start "ruleAstTuple"
    // InternalCal.g:3025:1: ruleAstTuple returns [EObject current=null] : ( () (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' ) ) ;
    public final EObject ruleAstTuple() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_fields_2_0 = null;

        EObject lv_fields_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:3031:2: ( ( () (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' ) ) )
            // InternalCal.g:3032:2: ( () (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' ) )
            {
            // InternalCal.g:3032:2: ( () (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' ) )
            // InternalCal.g:3033:3: () (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )
            {
            // InternalCal.g:3033:3: ()
            // InternalCal.g:3034:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstTupleAccess().getAstTupleAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:3040:3: (otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')' )
            // InternalCal.g:3041:4: otherlv_1= '(' ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_5= ')'
            {
            otherlv_1=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getAstTupleAccess().getLeftParenthesisKeyword_1_0());
              			
            }
            // InternalCal.g:3045:4: ( ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_ID||LA58_0==36||LA58_0==99||LA58_0==108||(LA58_0>=110 && LA58_0<=117)) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalCal.g:3046:5: ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) ) (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:3046:5: ( (lv_fields_2_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:3047:6: (lv_fields_2_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:3047:6: (lv_fields_2_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:3048:7: lv_fields_2_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAstTupleAccess().getFieldsAstValuedVariableDeclarationParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_18);
                    lv_fields_2_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAstTupleRule());
                      							}
                      							add(
                      								current,
                      								"fields",
                      								lv_fields_2_0,
                      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalCal.g:3065:5: (otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==28) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // InternalCal.g:3066:6: otherlv_3= ',' ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getAstTupleAccess().getCommaKeyword_1_1_1_0());
                    	      					
                    	    }
                    	    // InternalCal.g:3070:6: ( (lv_fields_4_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:3071:7: (lv_fields_4_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:3071:7: (lv_fields_4_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:3072:8: lv_fields_4_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getAstTupleAccess().getFieldsAstValuedVariableDeclarationParserRuleCall_1_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_fields_4_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getAstTupleRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"fields",
                    	      									lv_fields_4_0,
                    	      									"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop57;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_5, grammarAccess.getAstTupleAccess().getRightParenthesisKeyword_1_2());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTuple"


    // $ANTLR start "entryRuleAstActor"
    // InternalCal.g:3100:1: entryRuleAstActor returns [EObject current=null] : iv_ruleAstActor= ruleAstActor EOF ;
    public final EObject entryRuleAstActor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstActor = null;


        try {
            // InternalCal.g:3100:49: (iv_ruleAstActor= ruleAstActor EOF )
            // InternalCal.g:3101:2: iv_ruleAstActor= ruleAstActor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstActorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstActor=ruleAstActor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstActor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstActor"


    // $ANTLR start "ruleAstActor"
    // InternalCal.g:3107:1: ruleAstActor returns [EObject current=null] : ( () otherlv_1= 'actor' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )* ( ( (lv_schedules_23_0= ruleAstSchedule ) ) | ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) ) )? ( (lv_priorities_25_0= ruleAstPriority ) )* otherlv_26= 'end' ) ;
    public final EObject ruleAstActor() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_26=null;
        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_inputs_8_0 = null;

        EObject lv_inputs_10_0 = null;

        EObject lv_outputs_12_0 = null;

        EObject lv_outputs_14_0 = null;

        EObject lv_functions_16_0 = null;

        EObject lv_procedures_17_0 = null;

        EObject lv_invariants_18_0 = null;

        EObject lv_actions_19_0 = null;

        EObject lv_processes_20_0 = null;

        EObject lv_initializes_21_0 = null;

        EObject lv_stateVariables_22_0 = null;

        EObject lv_schedules_23_0 = null;

        EObject lv_scheduleRegExp_24_0 = null;

        EObject lv_priorities_25_0 = null;



        	enterRule();

        try {
            // InternalCal.g:3113:2: ( ( () otherlv_1= 'actor' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )* ( ( (lv_schedules_23_0= ruleAstSchedule ) ) | ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) ) )? ( (lv_priorities_25_0= ruleAstPriority ) )* otherlv_26= 'end' ) )
            // InternalCal.g:3114:2: ( () otherlv_1= 'actor' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )* ( ( (lv_schedules_23_0= ruleAstSchedule ) ) | ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) ) )? ( (lv_priorities_25_0= ruleAstPriority ) )* otherlv_26= 'end' )
            {
            // InternalCal.g:3114:2: ( () otherlv_1= 'actor' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )* ( ( (lv_schedules_23_0= ruleAstSchedule ) ) | ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) ) )? ( (lv_priorities_25_0= ruleAstPriority ) )* otherlv_26= 'end' )
            // InternalCal.g:3115:3: () otherlv_1= 'actor' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )? otherlv_7= ')' ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )? otherlv_11= '==>' ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )? otherlv_15= ':' ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )* ( ( (lv_schedules_23_0= ruleAstSchedule ) ) | ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) ) )? ( (lv_priorities_25_0= ruleAstPriority ) )* otherlv_26= 'end'
            {
            // InternalCal.g:3115:3: ()
            // InternalCal.g:3116:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstActorAccess().getAstActorAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,48,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstActorAccess().getActorKeyword_1());
              		
            }
            // InternalCal.g:3126:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalCal.g:3127:4: (lv_name_2_0= RULE_ID )
            {
            // InternalCal.g:3127:4: (lv_name_2_0= RULE_ID )
            // InternalCal.g:3128:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getAstActorAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstActorRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstActorAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalCal.g:3148:3: ( ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )* )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_ID||LA60_0==36||LA60_0==99||LA60_0==108||(LA60_0>=110 && LA60_0<=117)) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalCal.g:3149:4: ( (lv_parameters_4_0= ruleAstParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )*
                    {
                    // InternalCal.g:3149:4: ( (lv_parameters_4_0= ruleAstParameter ) )
                    // InternalCal.g:3150:5: (lv_parameters_4_0= ruleAstParameter )
                    {
                    // InternalCal.g:3150:5: (lv_parameters_4_0= ruleAstParameter )
                    // InternalCal.g:3151:6: lv_parameters_4_0= ruleAstParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActorAccess().getParametersAstParameterParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_4_0=ruleAstParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActorRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_4_0,
                      							"streamblocks.eclipse.cal.Cal.AstParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:3168:4: (otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) ) )*
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==28) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // InternalCal.g:3169:5: otherlv_5= ',' ( (lv_parameters_6_0= ruleAstParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getAstActorAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:3173:5: ( (lv_parameters_6_0= ruleAstParameter ) )
                    	    // InternalCal.g:3174:6: (lv_parameters_6_0= ruleAstParameter )
                    	    {
                    	    // InternalCal.g:3174:6: (lv_parameters_6_0= ruleAstParameter )
                    	    // InternalCal.g:3175:7: lv_parameters_6_0= ruleAstParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActorAccess().getParametersAstParameterParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_6_0=ruleAstParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActorRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_6_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,29,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstActorAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalCal.g:3198:3: ( ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )* )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||LA62_0==36||LA62_0==99||LA62_0==108||(LA62_0>=110 && LA62_0<=117)) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalCal.g:3199:4: ( (lv_inputs_8_0= ruleAstPort ) ) (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )*
                    {
                    // InternalCal.g:3199:4: ( (lv_inputs_8_0= ruleAstPort ) )
                    // InternalCal.g:3200:5: (lv_inputs_8_0= ruleAstPort )
                    {
                    // InternalCal.g:3200:5: (lv_inputs_8_0= ruleAstPort )
                    // InternalCal.g:3201:6: lv_inputs_8_0= ruleAstPort
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActorAccess().getInputsAstPortParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_inputs_8_0=ruleAstPort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActorRule());
                      						}
                      						add(
                      							current,
                      							"inputs",
                      							lv_inputs_8_0,
                      							"streamblocks.eclipse.cal.Cal.AstPort");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:3218:4: (otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==28) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // InternalCal.g:3219:5: otherlv_9= ',' ( (lv_inputs_10_0= ruleAstPort ) )
                    	    {
                    	    otherlv_9=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getAstActorAccess().getCommaKeyword_6_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:3223:5: ( (lv_inputs_10_0= ruleAstPort ) )
                    	    // InternalCal.g:3224:6: (lv_inputs_10_0= ruleAstPort )
                    	    {
                    	    // InternalCal.g:3224:6: (lv_inputs_10_0= ruleAstPort )
                    	    // InternalCal.g:3225:7: lv_inputs_10_0= ruleAstPort
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActorAccess().getInputsAstPortParserRuleCall_6_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_inputs_10_0=ruleAstPort();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActorRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"inputs",
                    	      								lv_inputs_10_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstPort");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,30,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getAstActorAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_7());
              		
            }
            // InternalCal.g:3248:3: ( ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )* )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ID||LA64_0==36||LA64_0==99||LA64_0==108||(LA64_0>=110 && LA64_0<=117)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalCal.g:3249:4: ( (lv_outputs_12_0= ruleAstPort ) ) (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )*
                    {
                    // InternalCal.g:3249:4: ( (lv_outputs_12_0= ruleAstPort ) )
                    // InternalCal.g:3250:5: (lv_outputs_12_0= ruleAstPort )
                    {
                    // InternalCal.g:3250:5: (lv_outputs_12_0= ruleAstPort )
                    // InternalCal.g:3251:6: lv_outputs_12_0= ruleAstPort
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActorAccess().getOutputsAstPortParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_outputs_12_0=ruleAstPort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActorRule());
                      						}
                      						add(
                      							current,
                      							"outputs",
                      							lv_outputs_12_0,
                      							"streamblocks.eclipse.cal.Cal.AstPort");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:3268:4: (otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==28) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalCal.g:3269:5: otherlv_13= ',' ( (lv_outputs_14_0= ruleAstPort ) )
                    	    {
                    	    otherlv_13=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getAstActorAccess().getCommaKeyword_8_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:3273:5: ( (lv_outputs_14_0= ruleAstPort ) )
                    	    // InternalCal.g:3274:6: (lv_outputs_14_0= ruleAstPort )
                    	    {
                    	    // InternalCal.g:3274:6: (lv_outputs_14_0= ruleAstPort )
                    	    // InternalCal.g:3275:7: lv_outputs_14_0= ruleAstPort
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActorAccess().getOutputsAstPortParserRuleCall_8_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_outputs_14_0=ruleAstPort();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActorRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"outputs",
                    	      								lv_outputs_14_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstPort");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_15=(Token)match(input,18,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getAstActorAccess().getColonKeyword_9());
              		
            }
            // InternalCal.g:3298:3: ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )*
            loop65:
            do {
                int alt65=8;
                alt65 = dfa65.predict(input);
                switch (alt65) {
            	case 1 :
            	    // InternalCal.g:3299:4: ( (lv_functions_16_0= ruleAstFunction ) )
            	    {
            	    // InternalCal.g:3299:4: ( (lv_functions_16_0= ruleAstFunction ) )
            	    // InternalCal.g:3300:5: (lv_functions_16_0= ruleAstFunction )
            	    {
            	    // InternalCal.g:3300:5: (lv_functions_16_0= ruleAstFunction )
            	    // InternalCal.g:3301:6: lv_functions_16_0= ruleAstFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getFunctionsAstFunctionParserRuleCall_10_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_functions_16_0=ruleAstFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"functions",
            	      							lv_functions_16_0,
            	      							"streamblocks.eclipse.cal.Cal.AstFunction");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalCal.g:3319:4: ( (lv_procedures_17_0= ruleAstProcedure ) )
            	    {
            	    // InternalCal.g:3319:4: ( (lv_procedures_17_0= ruleAstProcedure ) )
            	    // InternalCal.g:3320:5: (lv_procedures_17_0= ruleAstProcedure )
            	    {
            	    // InternalCal.g:3320:5: (lv_procedures_17_0= ruleAstProcedure )
            	    // InternalCal.g:3321:6: lv_procedures_17_0= ruleAstProcedure
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getProceduresAstProcedureParserRuleCall_10_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_procedures_17_0=ruleAstProcedure();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"procedures",
            	      							lv_procedures_17_0,
            	      							"streamblocks.eclipse.cal.Cal.AstProcedure");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalCal.g:3339:4: ( (lv_invariants_18_0= ruleAstInvariant ) )
            	    {
            	    // InternalCal.g:3339:4: ( (lv_invariants_18_0= ruleAstInvariant ) )
            	    // InternalCal.g:3340:5: (lv_invariants_18_0= ruleAstInvariant )
            	    {
            	    // InternalCal.g:3340:5: (lv_invariants_18_0= ruleAstInvariant )
            	    // InternalCal.g:3341:6: lv_invariants_18_0= ruleAstInvariant
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getInvariantsAstInvariantParserRuleCall_10_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_invariants_18_0=ruleAstInvariant();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"invariants",
            	      							lv_invariants_18_0,
            	      							"streamblocks.eclipse.cal.Cal.AstInvariant");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalCal.g:3359:4: ( (lv_actions_19_0= ruleAstAction ) )
            	    {
            	    // InternalCal.g:3359:4: ( (lv_actions_19_0= ruleAstAction ) )
            	    // InternalCal.g:3360:5: (lv_actions_19_0= ruleAstAction )
            	    {
            	    // InternalCal.g:3360:5: (lv_actions_19_0= ruleAstAction )
            	    // InternalCal.g:3361:6: lv_actions_19_0= ruleAstAction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getActionsAstActionParserRuleCall_10_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_actions_19_0=ruleAstAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"actions",
            	      							lv_actions_19_0,
            	      							"streamblocks.eclipse.cal.Cal.AstAction");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalCal.g:3379:4: ( (lv_processes_20_0= ruleAstProcessDescription ) )
            	    {
            	    // InternalCal.g:3379:4: ( (lv_processes_20_0= ruleAstProcessDescription ) )
            	    // InternalCal.g:3380:5: (lv_processes_20_0= ruleAstProcessDescription )
            	    {
            	    // InternalCal.g:3380:5: (lv_processes_20_0= ruleAstProcessDescription )
            	    // InternalCal.g:3381:6: lv_processes_20_0= ruleAstProcessDescription
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getProcessesAstProcessDescriptionParserRuleCall_10_4_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_processes_20_0=ruleAstProcessDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"processes",
            	      							lv_processes_20_0,
            	      							"streamblocks.eclipse.cal.Cal.AstProcessDescription");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalCal.g:3399:4: ( (lv_initializes_21_0= ruleAstInitialize ) )
            	    {
            	    // InternalCal.g:3399:4: ( (lv_initializes_21_0= ruleAstInitialize ) )
            	    // InternalCal.g:3400:5: (lv_initializes_21_0= ruleAstInitialize )
            	    {
            	    // InternalCal.g:3400:5: (lv_initializes_21_0= ruleAstInitialize )
            	    // InternalCal.g:3401:6: lv_initializes_21_0= ruleAstInitialize
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getInitializesAstInitializeParserRuleCall_10_5_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_initializes_21_0=ruleAstInitialize();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"initializes",
            	      							lv_initializes_21_0,
            	      							"streamblocks.eclipse.cal.Cal.AstInitialize");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalCal.g:3419:4: ( (lv_stateVariables_22_0= ruleAstStateVariable ) )
            	    {
            	    // InternalCal.g:3419:4: ( (lv_stateVariables_22_0= ruleAstStateVariable ) )
            	    // InternalCal.g:3420:5: (lv_stateVariables_22_0= ruleAstStateVariable )
            	    {
            	    // InternalCal.g:3420:5: (lv_stateVariables_22_0= ruleAstStateVariable )
            	    // InternalCal.g:3421:6: lv_stateVariables_22_0= ruleAstStateVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstActorAccess().getStateVariablesAstStateVariableParserRuleCall_10_6_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_stateVariables_22_0=ruleAstStateVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"stateVariables",
            	      							lv_stateVariables_22_0,
            	      							"streamblocks.eclipse.cal.Cal.AstStateVariable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            // InternalCal.g:3439:3: ( ( (lv_schedules_23_0= ruleAstSchedule ) ) | ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) ) )?
            int alt66=3;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==57) ) {
                int LA66_1 = input.LA(2);

                if ( (LA66_1==58) ) {
                    alt66=1;
                }
                else if ( (LA66_1==60) ) {
                    alt66=2;
                }
            }
            switch (alt66) {
                case 1 :
                    // InternalCal.g:3440:4: ( (lv_schedules_23_0= ruleAstSchedule ) )
                    {
                    // InternalCal.g:3440:4: ( (lv_schedules_23_0= ruleAstSchedule ) )
                    // InternalCal.g:3441:5: (lv_schedules_23_0= ruleAstSchedule )
                    {
                    // InternalCal.g:3441:5: (lv_schedules_23_0= ruleAstSchedule )
                    // InternalCal.g:3442:6: lv_schedules_23_0= ruleAstSchedule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActorAccess().getSchedulesAstScheduleParserRuleCall_11_0_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_schedules_23_0=ruleAstSchedule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActorRule());
                      						}
                      						set(
                      							current,
                      							"schedules",
                      							lv_schedules_23_0,
                      							"streamblocks.eclipse.cal.Cal.AstSchedule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:3460:4: ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) )
                    {
                    // InternalCal.g:3460:4: ( (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp ) )
                    // InternalCal.g:3461:5: (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp )
                    {
                    // InternalCal.g:3461:5: (lv_scheduleRegExp_24_0= ruleAstScheduleRegExp )
                    // InternalCal.g:3462:6: lv_scheduleRegExp_24_0= ruleAstScheduleRegExp
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActorAccess().getScheduleRegExpAstScheduleRegExpParserRuleCall_11_1_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_scheduleRegExp_24_0=ruleAstScheduleRegExp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActorRule());
                      						}
                      						set(
                      							current,
                      							"scheduleRegExp",
                      							lv_scheduleRegExp_24_0,
                      							"streamblocks.eclipse.cal.Cal.AstScheduleRegExp");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalCal.g:3480:3: ( (lv_priorities_25_0= ruleAstPriority ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==56) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalCal.g:3481:4: (lv_priorities_25_0= ruleAstPriority )
            	    {
            	    // InternalCal.g:3481:4: (lv_priorities_25_0= ruleAstPriority )
            	    // InternalCal.g:3482:5: lv_priorities_25_0= ruleAstPriority
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstActorAccess().getPrioritiesAstPriorityParserRuleCall_12_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_priorities_25_0=ruleAstPriority();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstActorRule());
            	      					}
            	      					add(
            	      						current,
            	      						"priorities",
            	      						lv_priorities_25_0,
            	      						"streamblocks.eclipse.cal.Cal.AstPriority");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            otherlv_26=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_26, grammarAccess.getAstActorAccess().getEndKeyword_13());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstActor"


    // $ANTLR start "entryRuleAstProcessDescription"
    // InternalCal.g:3507:1: entryRuleAstProcessDescription returns [EObject current=null] : iv_ruleAstProcessDescription= ruleAstProcessDescription EOF ;
    public final EObject entryRuleAstProcessDescription() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstProcessDescription = null;


        try {
            // InternalCal.g:3507:62: (iv_ruleAstProcessDescription= ruleAstProcessDescription EOF )
            // InternalCal.g:3508:2: iv_ruleAstProcessDescription= ruleAstProcessDescription EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstProcessDescriptionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstProcessDescription=ruleAstProcessDescription();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstProcessDescription; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstProcessDescription"


    // $ANTLR start "ruleAstProcessDescription"
    // InternalCal.g:3514:1: ruleAstProcessDescription returns [EObject current=null] : ( () ( ( (lv_repeated_1_0= 'repeat' ) ) | otherlv_2= 'do' ) ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' ) ;
    public final EObject ruleAstProcessDescription() throws RecognitionException {
        EObject current = null;

        Token lv_repeated_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:3520:2: ( ( () ( ( (lv_repeated_1_0= 'repeat' ) ) | otherlv_2= 'do' ) ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' ) )
            // InternalCal.g:3521:2: ( () ( ( (lv_repeated_1_0= 'repeat' ) ) | otherlv_2= 'do' ) ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' )
            {
            // InternalCal.g:3521:2: ( () ( ( (lv_repeated_1_0= 'repeat' ) ) | otherlv_2= 'do' ) ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' )
            // InternalCal.g:3522:3: () ( ( (lv_repeated_1_0= 'repeat' ) ) | otherlv_2= 'do' ) ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end'
            {
            // InternalCal.g:3522:3: ()
            // InternalCal.g:3523:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstProcessDescriptionAccess().getAstProcessDescriptionAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:3529:3: ( ( (lv_repeated_1_0= 'repeat' ) ) | otherlv_2= 'do' )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==49) ) {
                alt68=1;
            }
            else if ( (LA68_0==43) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalCal.g:3530:4: ( (lv_repeated_1_0= 'repeat' ) )
                    {
                    // InternalCal.g:3530:4: ( (lv_repeated_1_0= 'repeat' ) )
                    // InternalCal.g:3531:5: (lv_repeated_1_0= 'repeat' )
                    {
                    // InternalCal.g:3531:5: (lv_repeated_1_0= 'repeat' )
                    // InternalCal.g:3532:6: lv_repeated_1_0= 'repeat'
                    {
                    lv_repeated_1_0=(Token)match(input,49,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_repeated_1_0, grammarAccess.getAstProcessDescriptionAccess().getRepeatedRepeatKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAstProcessDescriptionRule());
                      						}
                      						setWithLastConsumed(current, "repeated", true, "repeat");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:3545:4: otherlv_2= 'do'
                    {
                    otherlv_2=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAstProcessDescriptionAccess().getDoKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalCal.g:3550:3: ( (lv_statements_3_0= ruleAstStatement ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==RULE_ID||LA69_0==33||LA69_0==42||LA69_0==52||LA69_0==68||LA69_0==70||LA69_0==108) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalCal.g:3551:4: (lv_statements_3_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:3551:4: (lv_statements_3_0= ruleAstStatement )
            	    // InternalCal.g:3552:5: lv_statements_3_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstProcessDescriptionAccess().getStatementsAstStatementParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_statements_3_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstProcessDescriptionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstProcessDescriptionAccess().getEndKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstProcessDescription"


    // $ANTLR start "entryRuleAstPort"
    // InternalCal.g:3577:1: entryRuleAstPort returns [EObject current=null] : iv_ruleAstPort= ruleAstPort EOF ;
    public final EObject entryRuleAstPort() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPort = null;


        try {
            // InternalCal.g:3577:48: (iv_ruleAstPort= ruleAstPort EOF )
            // InternalCal.g:3578:2: iv_ruleAstPort= ruleAstPort EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPortRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPort=ruleAstPort();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPort; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPort"


    // $ANTLR start "ruleAstPort"
    // InternalCal.g:3584:1: ruleAstPort returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) ) ;
    public final EObject ruleAstPort() throws RecognitionException {
        EObject current = null;

        Token lv_name_2_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:3590:2: ( ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) ) )
            // InternalCal.g:3591:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) )
            {
            // InternalCal.g:3591:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) )
            // InternalCal.g:3592:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) )
            {
            // InternalCal.g:3592:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==108) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalCal.g:3593:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:3593:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    // InternalCal.g:3594:5: lv_annotations_0_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstPortAccess().getAnnotationsAstAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_annotations_0_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstPortRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            // InternalCal.g:3611:3: ( (lv_type_1_0= ruleAstType ) )
            // InternalCal.g:3612:4: (lv_type_1_0= ruleAstType )
            {
            // InternalCal.g:3612:4: (lv_type_1_0= ruleAstType )
            // InternalCal.g:3613:5: lv_type_1_0= ruleAstType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstPortAccess().getTypeAstTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_1_0=ruleAstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstPortRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"streamblocks.eclipse.cal.Cal.AstType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:3630:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalCal.g:3631:4: (lv_name_2_0= RULE_ID )
            {
            // InternalCal.g:3631:4: (lv_name_2_0= RULE_ID )
            // InternalCal.g:3632:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getAstPortAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstPortRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPort"


    // $ANTLR start "entryRuleAstFunction"
    // InternalCal.g:3652:1: entryRuleAstFunction returns [EObject current=null] : iv_ruleAstFunction= ruleAstFunction EOF ;
    public final EObject entryRuleAstFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstFunction = null;


        try {
            // InternalCal.g:3652:52: (iv_ruleAstFunction= ruleAstFunction EOF )
            // InternalCal.g:3653:2: iv_ruleAstFunction= ruleAstFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstFunction=ruleAstFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstFunction"


    // $ANTLR start "ruleAstFunction"
    // InternalCal.g:3659:1: ruleAstFunction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'function' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' otherlv_9= '-->' ( (lv_type_10_0= ruleAstType ) ) (otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) ) )? otherlv_17= 'end' ) ;
    public final EObject ruleAstFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_type_10_0 = null;

        EObject lv_variables_12_0 = null;

        EObject lv_variables_14_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalCal.g:3665:2: ( ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'function' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' otherlv_9= '-->' ( (lv_type_10_0= ruleAstType ) ) (otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) ) )? otherlv_17= 'end' ) )
            // InternalCal.g:3666:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'function' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' otherlv_9= '-->' ( (lv_type_10_0= ruleAstType ) ) (otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) ) )? otherlv_17= 'end' )
            {
            // InternalCal.g:3666:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'function' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' otherlv_9= '-->' ( (lv_type_10_0= ruleAstType ) ) (otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) ) )? otherlv_17= 'end' )
            // InternalCal.g:3667:3: () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'function' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' otherlv_9= '-->' ( (lv_type_10_0= ruleAstType ) ) (otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) ) )? otherlv_17= 'end'
            {
            // InternalCal.g:3667:3: ()
            // InternalCal.g:3668:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstFunctionAccess().getAstFunctionAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:3674:3: ( (lv_annotations_1_0= ruleAstAnnotation ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==108) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalCal.g:3675:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:3675:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    // InternalCal.g:3676:5: lv_annotations_1_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstFunctionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_annotations_1_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstFunctionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            otherlv_2=(Token)match(input,50,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstFunctionAccess().getFunctionKeyword_2());
              		
            }
            // InternalCal.g:3697:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalCal.g:3698:4: (lv_name_3_0= RULE_ID )
            {
            // InternalCal.g:3698:4: (lv_name_3_0= RULE_ID )
            // InternalCal.g:3699:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getAstFunctionAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstFunctionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstFunctionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalCal.g:3719:3: ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_ID||LA73_0==36||LA73_0==99||LA73_0==108||(LA73_0>=110 && LA73_0<=117)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalCal.g:3720:4: ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:3720:4: ( (lv_parameters_5_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:3721:5: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:3721:5: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    // InternalCal.g:3722:6: lv_parameters_5_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_5_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstFunctionRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:3739:4: (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==28) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // InternalCal.g:3740:5: otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) )
                    	    {
                    	    otherlv_6=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAstFunctionAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:3744:5: ( (lv_parameters_7_0= ruleAstVariableDeclaration ) )
                    	    // InternalCal.g:3745:6: (lv_parameters_7_0= ruleAstVariableDeclaration )
                    	    {
                    	    // InternalCal.g:3745:6: (lv_parameters_7_0= ruleAstVariableDeclaration )
                    	    // InternalCal.g:3746:7: lv_parameters_7_0= ruleAstVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_7_0=ruleAstVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstFunctionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_7_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,29,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstFunctionAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_9=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getAstFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_7());
              		
            }
            // InternalCal.g:3773:3: ( (lv_type_10_0= ruleAstType ) )
            // InternalCal.g:3774:4: (lv_type_10_0= ruleAstType )
            {
            // InternalCal.g:3774:4: (lv_type_10_0= ruleAstType )
            // InternalCal.g:3775:5: lv_type_10_0= ruleAstType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstFunctionAccess().getTypeAstTypeParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_59);
            lv_type_10_0=ruleAstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstFunctionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_10_0,
              						"streamblocks.eclipse.cal.Cal.AstType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:3792:3: (otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==31) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalCal.g:3793:4: otherlv_11= 'var' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_11=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getAstFunctionAccess().getVarKeyword_9_0());
                      			
                    }
                    // InternalCal.g:3797:4: ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:3798:5: (lv_variables_12_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:3798:5: (lv_variables_12_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:3799:6: lv_variables_12_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstFunctionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_variables_12_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstFunctionRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_12_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:3816:4: (otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop74:
                    do {
                        int alt74=2;
                        int LA74_0 = input.LA(1);

                        if ( (LA74_0==28) ) {
                            alt74=1;
                        }


                        switch (alt74) {
                    	case 1 :
                    	    // InternalCal.g:3817:5: otherlv_13= ',' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_13=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getAstFunctionAccess().getCommaKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:3821:5: ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:3822:6: (lv_variables_14_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:3822:6: (lv_variables_14_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:3823:7: lv_variables_14_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstFunctionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_9_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_variables_14_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstFunctionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_14_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop74;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:3842:3: (otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==18) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalCal.g:3843:4: otherlv_15= ':' ( (lv_expression_16_0= ruleAstExpression ) )
                    {
                    otherlv_15=(Token)match(input,18,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getAstFunctionAccess().getColonKeyword_10_0());
                      			
                    }
                    // InternalCal.g:3847:4: ( (lv_expression_16_0= ruleAstExpression ) )
                    // InternalCal.g:3848:5: (lv_expression_16_0= ruleAstExpression )
                    {
                    // InternalCal.g:3848:5: (lv_expression_16_0= ruleAstExpression )
                    // InternalCal.g:3849:6: lv_expression_16_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstFunctionAccess().getExpressionAstExpressionParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_expression_16_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstFunctionRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getAstFunctionAccess().getEndKeyword_11());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstFunction"


    // $ANTLR start "entryRuleAstExternalFunction"
    // InternalCal.g:3875:1: entryRuleAstExternalFunction returns [EObject current=null] : iv_ruleAstExternalFunction= ruleAstExternalFunction EOF ;
    public final EObject entryRuleAstExternalFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExternalFunction = null;


        try {
            // InternalCal.g:3875:60: (iv_ruleAstExternalFunction= ruleAstExternalFunction EOF )
            // InternalCal.g:3876:2: iv_ruleAstExternalFunction= ruleAstExternalFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExternalFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExternalFunction=ruleAstExternalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExternalFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExternalFunction"


    // $ANTLR start "ruleAstExternalFunction"
    // InternalCal.g:3882:1: ruleAstExternalFunction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'function' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= '-->' ( (lv_type_11_0= ruleAstType ) ) otherlv_12= 'end' ) ;
    public final EObject ruleAstExternalFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_name_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_type_11_0 = null;



        	enterRule();

        try {
            // InternalCal.g:3888:2: ( ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'function' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= '-->' ( (lv_type_11_0= ruleAstType ) ) otherlv_12= 'end' ) )
            // InternalCal.g:3889:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'function' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= '-->' ( (lv_type_11_0= ruleAstType ) ) otherlv_12= 'end' )
            {
            // InternalCal.g:3889:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'function' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= '-->' ( (lv_type_11_0= ruleAstType ) ) otherlv_12= 'end' )
            // InternalCal.g:3890:3: () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'function' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= '-->' ( (lv_type_11_0= ruleAstType ) ) otherlv_12= 'end'
            {
            // InternalCal.g:3890:3: ()
            // InternalCal.g:3891:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstExternalFunctionAccess().getAstFunctionAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:3897:3: ( (lv_annotations_1_0= ruleAstAnnotation ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==108) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalCal.g:3898:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:3898:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    // InternalCal.g:3899:5: lv_annotations_1_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExternalFunctionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_annotations_1_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExternalFunctionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            otherlv_2=(Token)match(input,45,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExternalFunctionAccess().getExternalKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,50,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstExternalFunctionAccess().getFunctionKeyword_3());
              		
            }
            // InternalCal.g:3924:3: ( (lv_name_4_0= RULE_ID ) )
            // InternalCal.g:3925:4: (lv_name_4_0= RULE_ID )
            {
            // InternalCal.g:3925:4: (lv_name_4_0= RULE_ID )
            // InternalCal.g:3926:5: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_4_0, grammarAccess.getAstExternalFunctionAccess().getNameIDTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstExternalFunctionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_4_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstExternalFunctionAccess().getLeftParenthesisKeyword_5());
              		
            }
            // InternalCal.g:3946:3: ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_ID||LA79_0==36||LA79_0==99||LA79_0==108||(LA79_0>=110 && LA79_0<=117)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalCal.g:3947:4: ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:3947:4: ( (lv_parameters_6_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:3948:5: (lv_parameters_6_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:3948:5: (lv_parameters_6_0= ruleAstVariableDeclaration )
                    // InternalCal.g:3949:6: lv_parameters_6_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExternalFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_6_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExternalFunctionRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:3966:4: (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )*
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==28) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // InternalCal.g:3967:5: otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) )
                    	    {
                    	    otherlv_7=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getAstExternalFunctionAccess().getCommaKeyword_6_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:3971:5: ( (lv_parameters_8_0= ruleAstVariableDeclaration ) )
                    	    // InternalCal.g:3972:6: (lv_parameters_8_0= ruleAstVariableDeclaration )
                    	    {
                    	    // InternalCal.g:3972:6: (lv_parameters_8_0= ruleAstVariableDeclaration )
                    	    // InternalCal.g:3973:7: lv_parameters_8_0= ruleAstVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExternalFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_6_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_8_0=ruleAstVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExternalFunctionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_8_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop78;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,29,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getAstExternalFunctionAccess().getRightParenthesisKeyword_7());
              		
            }
            otherlv_10=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getAstExternalFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_8());
              		
            }
            // InternalCal.g:4000:3: ( (lv_type_11_0= ruleAstType ) )
            // InternalCal.g:4001:4: (lv_type_11_0= ruleAstType )
            {
            // InternalCal.g:4001:4: (lv_type_11_0= ruleAstType )
            // InternalCal.g:4002:5: lv_type_11_0= ruleAstType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExternalFunctionAccess().getTypeAstTypeParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_type_11_0=ruleAstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExternalFunctionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_11_0,
              						"streamblocks.eclipse.cal.Cal.AstType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getAstExternalFunctionAccess().getEndKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExternalFunction"


    // $ANTLR start "entryRuleAstProcedure"
    // InternalCal.g:4027:1: entryRuleAstProcedure returns [EObject current=null] : iv_ruleAstProcedure= ruleAstProcedure EOF ;
    public final EObject entryRuleAstProcedure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstProcedure = null;


        try {
            // InternalCal.g:4027:53: (iv_ruleAstProcedure= ruleAstProcedure EOF )
            // InternalCal.g:4028:2: iv_ruleAstProcedure= ruleAstProcedure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstProcedureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstProcedure=ruleAstProcedure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstProcedure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstProcedure"


    // $ANTLR start "ruleAstProcedure"
    // InternalCal.g:4034:1: ruleAstProcedure returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'procedure' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )* )? otherlv_15= 'end' ) ;
    public final EObject ruleAstProcedure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_variables_10_0 = null;

        EObject lv_variables_12_0 = null;

        EObject lv_statements_14_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4040:2: ( ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'procedure' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )* )? otherlv_15= 'end' ) )
            // InternalCal.g:4041:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'procedure' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )* )? otherlv_15= 'end' )
            {
            // InternalCal.g:4041:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'procedure' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )* )? otherlv_15= 'end' )
            // InternalCal.g:4042:3: () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'procedure' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )? otherlv_8= ')' (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )* )? otherlv_15= 'end'
            {
            // InternalCal.g:4042:3: ()
            // InternalCal.g:4043:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstProcedureAccess().getAstProcedureAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:4049:3: ( (lv_annotations_1_0= ruleAstAnnotation ) )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==108) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalCal.g:4050:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:4050:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    // InternalCal.g:4051:5: lv_annotations_1_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstProcedureAccess().getAnnotationsAstAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_annotations_1_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstProcedureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            otherlv_2=(Token)match(input,51,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstProcedureAccess().getProcedureKeyword_2());
              		
            }
            // InternalCal.g:4072:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalCal.g:4073:4: (lv_name_3_0= RULE_ID )
            {
            // InternalCal.g:4073:4: (lv_name_3_0= RULE_ID )
            // InternalCal.g:4074:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getAstProcedureAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstProcedureRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstProcedureAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalCal.g:4094:3: ( ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )* )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_ID||LA82_0==36||LA82_0==99||LA82_0==108||(LA82_0>=110 && LA82_0<=117)) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalCal.g:4095:4: ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:4095:4: ( (lv_parameters_5_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:4096:5: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:4096:5: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    // InternalCal.g:4097:6: lv_parameters_5_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_5_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstProcedureRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:4114:4: (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==28) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalCal.g:4115:5: otherlv_6= ',' ( (lv_parameters_7_0= ruleAstVariableDeclaration ) )
                    	    {
                    	    otherlv_6=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAstProcedureAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:4119:5: ( (lv_parameters_7_0= ruleAstVariableDeclaration ) )
                    	    // InternalCal.g:4120:6: (lv_parameters_7_0= ruleAstVariableDeclaration )
                    	    {
                    	    // InternalCal.g:4120:6: (lv_parameters_7_0= ruleAstVariableDeclaration )
                    	    // InternalCal.g:4121:7: lv_parameters_7_0= ruleAstVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_7_0=ruleAstVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstProcedureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_7_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,29,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstProcedureAccess().getRightParenthesisKeyword_6());
              		
            }
            // InternalCal.g:4144:3: (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==31) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalCal.g:4145:4: otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_9=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getAstProcedureAccess().getVarKeyword_7_0());
                      			
                    }
                    // InternalCal.g:4149:4: ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:4150:5: (lv_variables_10_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:4150:5: (lv_variables_10_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:4151:6: lv_variables_10_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstProcedureAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_variables_10_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstProcedureRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_10_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:4168:4: (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop83:
                    do {
                        int alt83=2;
                        int LA83_0 = input.LA(1);

                        if ( (LA83_0==28) ) {
                            alt83=1;
                        }


                        switch (alt83) {
                    	case 1 :
                    	    // InternalCal.g:4169:5: otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_11=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_11, grammarAccess.getAstProcedureAccess().getCommaKeyword_7_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:4173:5: ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:4174:6: (lv_variables_12_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:4174:6: (lv_variables_12_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:4175:7: lv_variables_12_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstProcedureAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_65);
                    	    lv_variables_12_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstProcedureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_12_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:4194:3: (otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )* )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==52) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalCal.g:4195:4: otherlv_13= 'begin' ( (lv_statements_14_0= ruleAstStatement ) )*
                    {
                    otherlv_13=(Token)match(input,52,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getAstProcedureAccess().getBeginKeyword_8_0());
                      			
                    }
                    // InternalCal.g:4199:4: ( (lv_statements_14_0= ruleAstStatement ) )*
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==RULE_ID||LA85_0==33||LA85_0==42||LA85_0==52||LA85_0==68||LA85_0==70||LA85_0==108) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // InternalCal.g:4200:5: (lv_statements_14_0= ruleAstStatement )
                    	    {
                    	    // InternalCal.g:4200:5: (lv_statements_14_0= ruleAstStatement )
                    	    // InternalCal.g:4201:6: lv_statements_14_0= ruleAstStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAstProcedureAccess().getStatementsAstStatementParserRuleCall_8_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_statements_14_0=ruleAstStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAstProcedureRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_14_0,
                    	      							"streamblocks.eclipse.cal.Cal.AstStatement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_15=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getAstProcedureAccess().getEndKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstProcedure"


    // $ANTLR start "entryRuleAstExternalProcedure"
    // InternalCal.g:4227:1: entryRuleAstExternalProcedure returns [EObject current=null] : iv_ruleAstExternalProcedure= ruleAstExternalProcedure EOF ;
    public final EObject entryRuleAstExternalProcedure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExternalProcedure = null;


        try {
            // InternalCal.g:4227:61: (iv_ruleAstExternalProcedure= ruleAstExternalProcedure EOF )
            // InternalCal.g:4228:2: iv_ruleAstExternalProcedure= ruleAstExternalProcedure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExternalProcedureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExternalProcedure=ruleAstExternalProcedure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExternalProcedure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExternalProcedure"


    // $ANTLR start "ruleAstExternalProcedure"
    // InternalCal.g:4234:1: ruleAstExternalProcedure returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'procedure' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= 'end' ) ;
    public final EObject ruleAstExternalProcedure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_name_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_8_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4240:2: ( ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'procedure' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= 'end' ) )
            // InternalCal.g:4241:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'procedure' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= 'end' )
            {
            // InternalCal.g:4241:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'procedure' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= 'end' )
            // InternalCal.g:4242:3: () ( (lv_annotations_1_0= ruleAstAnnotation ) )* otherlv_2= 'external' otherlv_3= 'procedure' ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )? otherlv_9= ')' otherlv_10= 'end'
            {
            // InternalCal.g:4242:3: ()
            // InternalCal.g:4243:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstExternalProcedureAccess().getAstProcedureAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:4249:3: ( (lv_annotations_1_0= ruleAstAnnotation ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==108) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalCal.g:4250:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:4250:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    // InternalCal.g:4251:5: lv_annotations_1_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExternalProcedureAccess().getAnnotationsAstAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_annotations_1_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExternalProcedureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            otherlv_2=(Token)match(input,45,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExternalProcedureAccess().getExternalKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,51,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstExternalProcedureAccess().getProcedureKeyword_3());
              		
            }
            // InternalCal.g:4276:3: ( (lv_name_4_0= RULE_ID ) )
            // InternalCal.g:4277:4: (lv_name_4_0= RULE_ID )
            {
            // InternalCal.g:4277:4: (lv_name_4_0= RULE_ID )
            // InternalCal.g:4278:5: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_4_0, grammarAccess.getAstExternalProcedureAccess().getNameIDTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstExternalProcedureRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_4_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstExternalProcedureAccess().getLeftParenthesisKeyword_5());
              		
            }
            // InternalCal.g:4298:3: ( ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )* )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_ID||LA89_0==36||LA89_0==99||LA89_0==108||(LA89_0>=110 && LA89_0<=117)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalCal.g:4299:4: ( (lv_parameters_6_0= ruleAstVariableDeclaration ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:4299:4: ( (lv_parameters_6_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:4300:5: (lv_parameters_6_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:4300:5: (lv_parameters_6_0= ruleAstVariableDeclaration )
                    // InternalCal.g:4301:6: lv_parameters_6_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExternalProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_6_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExternalProcedureRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:4318:4: (otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==28) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalCal.g:4319:5: otherlv_7= ',' ( (lv_parameters_8_0= ruleAstVariableDeclaration ) )
                    	    {
                    	    otherlv_7=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getAstExternalProcedureAccess().getCommaKeyword_6_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:4323:5: ( (lv_parameters_8_0= ruleAstVariableDeclaration ) )
                    	    // InternalCal.g:4324:6: (lv_parameters_8_0= ruleAstVariableDeclaration )
                    	    {
                    	    // InternalCal.g:4324:6: (lv_parameters_8_0= ruleAstVariableDeclaration )
                    	    // InternalCal.g:4325:7: lv_parameters_8_0= ruleAstVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExternalProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_6_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_8_0=ruleAstVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExternalProcedureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_8_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,29,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getAstExternalProcedureAccess().getRightParenthesisKeyword_7());
              		
            }
            otherlv_10=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getAstExternalProcedureAccess().getEndKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExternalProcedure"


    // $ANTLR start "entryRuleAstParameter"
    // InternalCal.g:4356:1: entryRuleAstParameter returns [EObject current=null] : iv_ruleAstParameter= ruleAstParameter EOF ;
    public final EObject entryRuleAstParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstParameter = null;


        try {
            // InternalCal.g:4356:53: (iv_ruleAstParameter= ruleAstParameter EOF )
            // InternalCal.g:4357:2: iv_ruleAstParameter= ruleAstParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstParameter=ruleAstParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstParameter"


    // $ANTLR start "ruleAstParameter"
    // InternalCal.g:4363:1: ruleAstParameter returns [EObject current=null] : (this_AstVariableDeclaration_0= ruleAstVariableDeclaration (otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )? ) ;
    public final EObject ruleAstParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_AstVariableDeclaration_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4369:2: ( (this_AstVariableDeclaration_0= ruleAstVariableDeclaration (otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )? ) )
            // InternalCal.g:4370:2: (this_AstVariableDeclaration_0= ruleAstVariableDeclaration (otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )? )
            {
            // InternalCal.g:4370:2: (this_AstVariableDeclaration_0= ruleAstVariableDeclaration (otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )? )
            // InternalCal.g:4371:3: this_AstVariableDeclaration_0= ruleAstVariableDeclaration (otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstParameterAccess().getAstVariableDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_AstVariableDeclaration_0=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstVariableDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:4379:3: (otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==23) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalCal.g:4380:4: otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) )
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstParameterAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalCal.g:4384:4: ( (lv_value_2_0= ruleAstExpression ) )
                    // InternalCal.g:4385:5: (lv_value_2_0= ruleAstExpression )
                    {
                    // InternalCal.g:4385:5: (lv_value_2_0= ruleAstExpression )
                    // InternalCal.g:4386:6: lv_value_2_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstParameterAccess().getValueAstExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstParameterRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstParameter"


    // $ANTLR start "entryRuleAstStateVariable"
    // InternalCal.g:4408:1: entryRuleAstStateVariable returns [EObject current=null] : iv_ruleAstStateVariable= ruleAstStateVariable EOF ;
    public final EObject entryRuleAstStateVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStateVariable = null;


        try {
            // InternalCal.g:4408:57: (iv_ruleAstStateVariable= ruleAstStateVariable EOF )
            // InternalCal.g:4409:2: iv_ruleAstStateVariable= ruleAstStateVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStateVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStateVariable=ruleAstStateVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStateVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStateVariable"


    // $ANTLR start "ruleAstStateVariable"
    // InternalCal.g:4415:1: ruleAstStateVariable returns [EObject current=null] : (this_AstValuedVariableDeclaration_0= ruleAstValuedVariableDeclaration otherlv_1= ';' ) ;
    public final EObject ruleAstStateVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_AstValuedVariableDeclaration_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4421:2: ( (this_AstValuedVariableDeclaration_0= ruleAstValuedVariableDeclaration otherlv_1= ';' ) )
            // InternalCal.g:4422:2: (this_AstValuedVariableDeclaration_0= ruleAstValuedVariableDeclaration otherlv_1= ';' )
            {
            // InternalCal.g:4422:2: (this_AstValuedVariableDeclaration_0= ruleAstValuedVariableDeclaration otherlv_1= ';' )
            // InternalCal.g:4423:3: this_AstValuedVariableDeclaration_0= ruleAstValuedVariableDeclaration otherlv_1= ';'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstStateVariableAccess().getAstValuedVariableDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_4);
            this_AstValuedVariableDeclaration_0=ruleAstValuedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstValuedVariableDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstStateVariableAccess().getSemicolonKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStateVariable"


    // $ANTLR start "entryRuleAstTag"
    // InternalCal.g:4439:1: entryRuleAstTag returns [EObject current=null] : iv_ruleAstTag= ruleAstTag EOF ;
    public final EObject entryRuleAstTag() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTag = null;


        try {
            // InternalCal.g:4439:47: (iv_ruleAstTag= ruleAstTag EOF )
            // InternalCal.g:4440:2: iv_ruleAstTag= ruleAstTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTag=ruleAstTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTag; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTag"


    // $ANTLR start "ruleAstTag"
    // InternalCal.g:4446:1: ruleAstTag returns [EObject current=null] : ( ( (lv_identifiers_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) ) )* ) ;
    public final EObject ruleAstTag() throws RecognitionException {
        EObject current = null;

        Token lv_identifiers_0_0=null;
        Token otherlv_1=null;
        Token lv_identifiers_2_0=null;


        	enterRule();

        try {
            // InternalCal.g:4452:2: ( ( ( (lv_identifiers_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) ) )* ) )
            // InternalCal.g:4453:2: ( ( (lv_identifiers_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) ) )* )
            {
            // InternalCal.g:4453:2: ( ( (lv_identifiers_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) ) )* )
            // InternalCal.g:4454:3: ( (lv_identifiers_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) ) )*
            {
            // InternalCal.g:4454:3: ( (lv_identifiers_0_0= RULE_ID ) )
            // InternalCal.g:4455:4: (lv_identifiers_0_0= RULE_ID )
            {
            // InternalCal.g:4455:4: (lv_identifiers_0_0= RULE_ID )
            // InternalCal.g:4456:5: lv_identifiers_0_0= RULE_ID
            {
            lv_identifiers_0_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_identifiers_0_0, grammarAccess.getAstTagAccess().getIdentifiersIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTagRule());
              					}
              					addWithLastConsumed(
              						current,
              						"identifiers",
              						lv_identifiers_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:4472:3: (otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==24) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalCal.g:4473:4: otherlv_1= '.' ( (lv_identifiers_2_0= RULE_ID ) )
            	    {
            	    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getAstTagAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalCal.g:4477:4: ( (lv_identifiers_2_0= RULE_ID ) )
            	    // InternalCal.g:4478:5: (lv_identifiers_2_0= RULE_ID )
            	    {
            	    // InternalCal.g:4478:5: (lv_identifiers_2_0= RULE_ID )
            	    // InternalCal.g:4479:6: lv_identifiers_2_0= RULE_ID
            	    {
            	    lv_identifiers_2_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_identifiers_2_0, grammarAccess.getAstTagAccess().getIdentifiersIDTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAstTagRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"identifiers",
            	      							lv_identifiers_2_0,
            	      							"streamblocks.eclipse.cal.Cal.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTag"


    // $ANTLR start "entryRuleAstInvariant"
    // InternalCal.g:4500:1: entryRuleAstInvariant returns [EObject current=null] : iv_ruleAstInvariant= ruleAstInvariant EOF ;
    public final EObject entryRuleAstInvariant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstInvariant = null;


        try {
            // InternalCal.g:4500:53: (iv_ruleAstInvariant= ruleAstInvariant EOF )
            // InternalCal.g:4501:2: iv_ruleAstInvariant= ruleAstInvariant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstInvariantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstInvariant=ruleAstInvariant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstInvariant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstInvariant"


    // $ANTLR start "ruleAstInvariant"
    // InternalCal.g:4507:1: ruleAstInvariant returns [EObject current=null] : (otherlv_0= 'invariant' ( (lv_invariants_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) ) )* (otherlv_4= 'end' | otherlv_5= 'endinvariant' ) ) ;
    public final EObject ruleAstInvariant() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_invariants_1_0 = null;

        EObject lv_invariants_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4513:2: ( (otherlv_0= 'invariant' ( (lv_invariants_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) ) )* (otherlv_4= 'end' | otherlv_5= 'endinvariant' ) ) )
            // InternalCal.g:4514:2: (otherlv_0= 'invariant' ( (lv_invariants_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) ) )* (otherlv_4= 'end' | otherlv_5= 'endinvariant' ) )
            {
            // InternalCal.g:4514:2: (otherlv_0= 'invariant' ( (lv_invariants_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) ) )* (otherlv_4= 'end' | otherlv_5= 'endinvariant' ) )
            // InternalCal.g:4515:3: otherlv_0= 'invariant' ( (lv_invariants_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) ) )* (otherlv_4= 'end' | otherlv_5= 'endinvariant' )
            {
            otherlv_0=(Token)match(input,53,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstInvariantAccess().getInvariantKeyword_0());
              		
            }
            // InternalCal.g:4519:3: ( (lv_invariants_1_0= ruleAstExpression ) )
            // InternalCal.g:4520:4: (lv_invariants_1_0= ruleAstExpression )
            {
            // InternalCal.g:4520:4: (lv_invariants_1_0= ruleAstExpression )
            // InternalCal.g:4521:5: lv_invariants_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstInvariantAccess().getInvariantsAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_invariants_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstInvariantRule());
              					}
              					add(
              						current,
              						"invariants",
              						lv_invariants_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:4538:3: (otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==28) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalCal.g:4539:4: otherlv_2= ',' ( (lv_invariants_3_0= ruleAstExpression ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstInvariantAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:4543:4: ( (lv_invariants_3_0= ruleAstExpression ) )
            	    // InternalCal.g:4544:5: (lv_invariants_3_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:4544:5: (lv_invariants_3_0= ruleAstExpression )
            	    // InternalCal.g:4545:6: lv_invariants_3_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstInvariantAccess().getInvariantsAstExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_invariants_3_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstInvariantRule());
            	      						}
            	      						add(
            	      							current,
            	      							"invariants",
            	      							lv_invariants_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            // InternalCal.g:4563:3: (otherlv_4= 'end' | otherlv_5= 'endinvariant' )
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==19) ) {
                alt93=1;
            }
            else if ( (LA93_0==54) ) {
                alt93=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }
            switch (alt93) {
                case 1 :
                    // InternalCal.g:4564:4: otherlv_4= 'end'
                    {
                    otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstInvariantAccess().getEndKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:4569:4: otherlv_5= 'endinvariant'
                    {
                    otherlv_5=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstInvariantAccess().getEndinvariantKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstInvariant"


    // $ANTLR start "entryRuleAstExternalActor"
    // InternalCal.g:4578:1: entryRuleAstExternalActor returns [EObject current=null] : iv_ruleAstExternalActor= ruleAstExternalActor EOF ;
    public final EObject entryRuleAstExternalActor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExternalActor = null;


        try {
            // InternalCal.g:4578:57: (iv_ruleAstExternalActor= ruleAstExternalActor EOF )
            // InternalCal.g:4579:2: iv_ruleAstExternalActor= ruleAstExternalActor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExternalActorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExternalActor=ruleAstExternalActor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExternalActor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExternalActor"


    // $ANTLR start "ruleAstExternalActor"
    // InternalCal.g:4585:1: ruleAstExternalActor returns [EObject current=null] : ( () otherlv_1= 'external' otherlv_2= 'actor' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )* )? otherlv_8= ')' ( ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )* )? otherlv_12= '==>' ( ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )* )? otherlv_16= ';' ) ;
    public final EObject ruleAstExternalActor() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_inputs_9_0 = null;

        EObject lv_inputs_11_0 = null;

        EObject lv_outputs_13_0 = null;

        EObject lv_outputs_15_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4591:2: ( ( () otherlv_1= 'external' otherlv_2= 'actor' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )* )? otherlv_8= ')' ( ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )* )? otherlv_12= '==>' ( ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )* )? otherlv_16= ';' ) )
            // InternalCal.g:4592:2: ( () otherlv_1= 'external' otherlv_2= 'actor' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )* )? otherlv_8= ')' ( ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )* )? otherlv_12= '==>' ( ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )* )? otherlv_16= ';' )
            {
            // InternalCal.g:4592:2: ( () otherlv_1= 'external' otherlv_2= 'actor' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )* )? otherlv_8= ')' ( ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )* )? otherlv_12= '==>' ( ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )* )? otherlv_16= ';' )
            // InternalCal.g:4593:3: () otherlv_1= 'external' otherlv_2= 'actor' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )* )? otherlv_8= ')' ( ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )* )? otherlv_12= '==>' ( ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )* )? otherlv_16= ';'
            {
            // InternalCal.g:4593:3: ()
            // InternalCal.g:4594:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstExternalActorAccess().getAstExternalActorAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstExternalActorAccess().getExternalKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,48,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExternalActorAccess().getActorKeyword_2());
              		
            }
            // InternalCal.g:4608:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalCal.g:4609:4: (lv_name_3_0= RULE_ID )
            {
            // InternalCal.g:4609:4: (lv_name_3_0= RULE_ID )
            // InternalCal.g:4610:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getAstExternalActorAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstExternalActorRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstExternalActorAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalCal.g:4630:3: ( ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )* )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_ID||LA95_0==36||LA95_0==99||LA95_0==108||(LA95_0>=110 && LA95_0<=117)) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalCal.g:4631:4: ( (lv_parameters_5_0= ruleAstParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )*
                    {
                    // InternalCal.g:4631:4: ( (lv_parameters_5_0= ruleAstParameter ) )
                    // InternalCal.g:4632:5: (lv_parameters_5_0= ruleAstParameter )
                    {
                    // InternalCal.g:4632:5: (lv_parameters_5_0= ruleAstParameter )
                    // InternalCal.g:4633:6: lv_parameters_5_0= ruleAstParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExternalActorAccess().getParametersAstParameterParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_5_0=ruleAstParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExternalActorRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:4650:4: (otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) ) )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==28) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // InternalCal.g:4651:5: otherlv_6= ',' ( (lv_parameters_7_0= ruleAstParameter ) )
                    	    {
                    	    otherlv_6=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAstExternalActorAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:4655:5: ( (lv_parameters_7_0= ruleAstParameter ) )
                    	    // InternalCal.g:4656:6: (lv_parameters_7_0= ruleAstParameter )
                    	    {
                    	    // InternalCal.g:4656:6: (lv_parameters_7_0= ruleAstParameter )
                    	    // InternalCal.g:4657:7: lv_parameters_7_0= ruleAstParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExternalActorAccess().getParametersAstParameterParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_7_0=ruleAstParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExternalActorRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_7_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,29,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstExternalActorAccess().getRightParenthesisKeyword_6());
              		
            }
            // InternalCal.g:4680:3: ( ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )* )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_ID||LA97_0==36||LA97_0==99||LA97_0==108||(LA97_0>=110 && LA97_0<=117)) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalCal.g:4681:4: ( (lv_inputs_9_0= ruleAstPort ) ) (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )*
                    {
                    // InternalCal.g:4681:4: ( (lv_inputs_9_0= ruleAstPort ) )
                    // InternalCal.g:4682:5: (lv_inputs_9_0= ruleAstPort )
                    {
                    // InternalCal.g:4682:5: (lv_inputs_9_0= ruleAstPort )
                    // InternalCal.g:4683:6: lv_inputs_9_0= ruleAstPort
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExternalActorAccess().getInputsAstPortParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_inputs_9_0=ruleAstPort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExternalActorRule());
                      						}
                      						add(
                      							current,
                      							"inputs",
                      							lv_inputs_9_0,
                      							"streamblocks.eclipse.cal.Cal.AstPort");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:4700:4: (otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) ) )*
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==28) ) {
                            alt96=1;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // InternalCal.g:4701:5: otherlv_10= ',' ( (lv_inputs_11_0= ruleAstPort ) )
                    	    {
                    	    otherlv_10=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getAstExternalActorAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:4705:5: ( (lv_inputs_11_0= ruleAstPort ) )
                    	    // InternalCal.g:4706:6: (lv_inputs_11_0= ruleAstPort )
                    	    {
                    	    // InternalCal.g:4706:6: (lv_inputs_11_0= ruleAstPort )
                    	    // InternalCal.g:4707:7: lv_inputs_11_0= ruleAstPort
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExternalActorAccess().getInputsAstPortParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_inputs_11_0=ruleAstPort();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExternalActorRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"inputs",
                    	      								lv_inputs_11_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstPort");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,30,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getAstExternalActorAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_8());
              		
            }
            // InternalCal.g:4730:3: ( ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )* )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_ID||LA99_0==36||LA99_0==99||LA99_0==108||(LA99_0>=110 && LA99_0<=117)) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalCal.g:4731:4: ( (lv_outputs_13_0= ruleAstPort ) ) (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )*
                    {
                    // InternalCal.g:4731:4: ( (lv_outputs_13_0= ruleAstPort ) )
                    // InternalCal.g:4732:5: (lv_outputs_13_0= ruleAstPort )
                    {
                    // InternalCal.g:4732:5: (lv_outputs_13_0= ruleAstPort )
                    // InternalCal.g:4733:6: lv_outputs_13_0= ruleAstPort
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExternalActorAccess().getOutputsAstPortParserRuleCall_9_0_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_outputs_13_0=ruleAstPort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExternalActorRule());
                      						}
                      						add(
                      							current,
                      							"outputs",
                      							lv_outputs_13_0,
                      							"streamblocks.eclipse.cal.Cal.AstPort");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:4750:4: (otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) ) )*
                    loop98:
                    do {
                        int alt98=2;
                        int LA98_0 = input.LA(1);

                        if ( (LA98_0==28) ) {
                            alt98=1;
                        }


                        switch (alt98) {
                    	case 1 :
                    	    // InternalCal.g:4751:5: otherlv_14= ',' ( (lv_outputs_15_0= ruleAstPort ) )
                    	    {
                    	    otherlv_14=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getAstExternalActorAccess().getCommaKeyword_9_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:4755:5: ( (lv_outputs_15_0= ruleAstPort ) )
                    	    // InternalCal.g:4756:6: (lv_outputs_15_0= ruleAstPort )
                    	    {
                    	    // InternalCal.g:4756:6: (lv_outputs_15_0= ruleAstPort )
                    	    // InternalCal.g:4757:7: lv_outputs_15_0= ruleAstPort
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExternalActorAccess().getOutputsAstPortParserRuleCall_9_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_outputs_15_0=ruleAstPort();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExternalActorRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"outputs",
                    	      								lv_outputs_15_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstPort");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_16=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getAstExternalActorAccess().getSemicolonKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExternalActor"


    // $ANTLR start "entryRuleAstInequality"
    // InternalCal.g:4784:1: entryRuleAstInequality returns [EObject current=null] : iv_ruleAstInequality= ruleAstInequality EOF ;
    public final EObject entryRuleAstInequality() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstInequality = null;


        try {
            // InternalCal.g:4784:54: (iv_ruleAstInequality= ruleAstInequality EOF )
            // InternalCal.g:4785:2: iv_ruleAstInequality= ruleAstInequality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstInequalityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstInequality=ruleAstInequality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstInequality; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstInequality"


    // $ANTLR start "ruleAstInequality"
    // InternalCal.g:4791:1: ruleAstInequality returns [EObject current=null] : ( ( (lv_tags_0_0= ruleAstTag ) ) (otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) ) )+ otherlv_3= ';' ) ;
    public final EObject ruleAstInequality() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_tags_0_0 = null;

        EObject lv_tags_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4797:2: ( ( ( (lv_tags_0_0= ruleAstTag ) ) (otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) ) )+ otherlv_3= ';' ) )
            // InternalCal.g:4798:2: ( ( (lv_tags_0_0= ruleAstTag ) ) (otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) ) )+ otherlv_3= ';' )
            {
            // InternalCal.g:4798:2: ( ( (lv_tags_0_0= ruleAstTag ) ) (otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) ) )+ otherlv_3= ';' )
            // InternalCal.g:4799:3: ( (lv_tags_0_0= ruleAstTag ) ) (otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) ) )+ otherlv_3= ';'
            {
            // InternalCal.g:4799:3: ( (lv_tags_0_0= ruleAstTag ) )
            // InternalCal.g:4800:4: (lv_tags_0_0= ruleAstTag )
            {
            // InternalCal.g:4800:4: (lv_tags_0_0= ruleAstTag )
            // InternalCal.g:4801:5: lv_tags_0_0= ruleAstTag
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstInequalityAccess().getTagsAstTagParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_71);
            lv_tags_0_0=ruleAstTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstInequalityRule());
              					}
              					add(
              						current,
              						"tags",
              						lv_tags_0_0,
              						"streamblocks.eclipse.cal.Cal.AstTag");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:4818:3: (otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) ) )+
            int cnt100=0;
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==55) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalCal.g:4819:4: otherlv_1= '>' ( (lv_tags_2_0= ruleAstTag ) )
            	    {
            	    otherlv_1=(Token)match(input,55,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getAstInequalityAccess().getGreaterThanSignKeyword_1_0());
            	      			
            	    }
            	    // InternalCal.g:4823:4: ( (lv_tags_2_0= ruleAstTag ) )
            	    // InternalCal.g:4824:5: (lv_tags_2_0= ruleAstTag )
            	    {
            	    // InternalCal.g:4824:5: (lv_tags_2_0= ruleAstTag )
            	    // InternalCal.g:4825:6: lv_tags_2_0= ruleAstTag
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstInequalityAccess().getTagsAstTagParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_tags_2_0=ruleAstTag();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstInequalityRule());
            	      						}
            	      						add(
            	      							current,
            	      							"tags",
            	      							lv_tags_2_0,
            	      							"streamblocks.eclipse.cal.Cal.AstTag");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt100 >= 1 ) break loop100;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(100, input);
                        throw eee;
                }
                cnt100++;
            } while (true);

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstInequalityAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstInequality"


    // $ANTLR start "entryRuleAstPriority"
    // InternalCal.g:4851:1: entryRuleAstPriority returns [EObject current=null] : iv_ruleAstPriority= ruleAstPriority EOF ;
    public final EObject entryRuleAstPriority() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPriority = null;


        try {
            // InternalCal.g:4851:52: (iv_ruleAstPriority= ruleAstPriority EOF )
            // InternalCal.g:4852:2: iv_ruleAstPriority= ruleAstPriority EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPriorityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPriority=ruleAstPriority();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPriority; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPriority"


    // $ANTLR start "ruleAstPriority"
    // InternalCal.g:4858:1: ruleAstPriority returns [EObject current=null] : ( () otherlv_1= 'priority' ( (lv_inequalities_2_0= ruleAstInequality ) )* otherlv_3= 'end' ) ;
    public final EObject ruleAstPriority() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_inequalities_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4864:2: ( ( () otherlv_1= 'priority' ( (lv_inequalities_2_0= ruleAstInequality ) )* otherlv_3= 'end' ) )
            // InternalCal.g:4865:2: ( () otherlv_1= 'priority' ( (lv_inequalities_2_0= ruleAstInequality ) )* otherlv_3= 'end' )
            {
            // InternalCal.g:4865:2: ( () otherlv_1= 'priority' ( (lv_inequalities_2_0= ruleAstInequality ) )* otherlv_3= 'end' )
            // InternalCal.g:4866:3: () otherlv_1= 'priority' ( (lv_inequalities_2_0= ruleAstInequality ) )* otherlv_3= 'end'
            {
            // InternalCal.g:4866:3: ()
            // InternalCal.g:4867:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstPriorityAccess().getAstPriorityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,56,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstPriorityAccess().getPriorityKeyword_1());
              		
            }
            // InternalCal.g:4877:3: ( (lv_inequalities_2_0= ruleAstInequality ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_ID) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalCal.g:4878:4: (lv_inequalities_2_0= ruleAstInequality )
            	    {
            	    // InternalCal.g:4878:4: (lv_inequalities_2_0= ruleAstInequality )
            	    // InternalCal.g:4879:5: lv_inequalities_2_0= ruleAstInequality
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstPriorityAccess().getInequalitiesAstInequalityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_inequalities_2_0=ruleAstInequality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstPriorityRule());
            	      					}
            	      					add(
            	      						current,
            	      						"inequalities",
            	      						lv_inequalities_2_0,
            	      						"streamblocks.eclipse.cal.Cal.AstInequality");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstPriorityAccess().getEndKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPriority"


    // $ANTLR start "entryRuleAstSchedule"
    // InternalCal.g:4904:1: entryRuleAstSchedule returns [EObject current=null] : iv_ruleAstSchedule= ruleAstSchedule EOF ;
    public final EObject entryRuleAstSchedule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstSchedule = null;


        try {
            // InternalCal.g:4904:52: (iv_ruleAstSchedule= ruleAstSchedule EOF )
            // InternalCal.g:4905:2: iv_ruleAstSchedule= ruleAstSchedule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstScheduleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstSchedule=ruleAstSchedule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstSchedule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstSchedule"


    // $ANTLR start "ruleAstSchedule"
    // InternalCal.g:4911:1: ruleAstSchedule returns [EObject current=null] : (otherlv_0= 'schedule' otherlv_1= 'fsm' ( (otherlv_2= RULE_ID ) ) otherlv_3= ':' ( (lv_transitions_4_0= ruleAstTransition ) )* (otherlv_5= 'end' | otherlv_6= 'endschedule' ) ) ;
    public final EObject ruleAstSchedule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_transitions_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4917:2: ( (otherlv_0= 'schedule' otherlv_1= 'fsm' ( (otherlv_2= RULE_ID ) ) otherlv_3= ':' ( (lv_transitions_4_0= ruleAstTransition ) )* (otherlv_5= 'end' | otherlv_6= 'endschedule' ) ) )
            // InternalCal.g:4918:2: (otherlv_0= 'schedule' otherlv_1= 'fsm' ( (otherlv_2= RULE_ID ) ) otherlv_3= ':' ( (lv_transitions_4_0= ruleAstTransition ) )* (otherlv_5= 'end' | otherlv_6= 'endschedule' ) )
            {
            // InternalCal.g:4918:2: (otherlv_0= 'schedule' otherlv_1= 'fsm' ( (otherlv_2= RULE_ID ) ) otherlv_3= ':' ( (lv_transitions_4_0= ruleAstTransition ) )* (otherlv_5= 'end' | otherlv_6= 'endschedule' ) )
            // InternalCal.g:4919:3: otherlv_0= 'schedule' otherlv_1= 'fsm' ( (otherlv_2= RULE_ID ) ) otherlv_3= ':' ( (lv_transitions_4_0= ruleAstTransition ) )* (otherlv_5= 'end' | otherlv_6= 'endschedule' )
            {
            otherlv_0=(Token)match(input,57,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstScheduleAccess().getScheduleKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,58,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstScheduleAccess().getFsmKeyword_1());
              		
            }
            // InternalCal.g:4927:3: ( (otherlv_2= RULE_ID ) )
            // InternalCal.g:4928:4: (otherlv_2= RULE_ID )
            {
            // InternalCal.g:4928:4: (otherlv_2= RULE_ID )
            // InternalCal.g:4929:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstScheduleRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getAstScheduleAccess().getInitialStateAstStateCrossReference_2_0());
              				
            }

            }


            }

            otherlv_3=(Token)match(input,18,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstScheduleAccess().getColonKeyword_3());
              		
            }
            // InternalCal.g:4944:3: ( (lv_transitions_4_0= ruleAstTransition ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_ID) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalCal.g:4945:4: (lv_transitions_4_0= ruleAstTransition )
            	    {
            	    // InternalCal.g:4945:4: (lv_transitions_4_0= ruleAstTransition )
            	    // InternalCal.g:4946:5: lv_transitions_4_0= ruleAstTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstScheduleAccess().getTransitionsAstTransitionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_75);
            	    lv_transitions_4_0=ruleAstTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstScheduleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"transitions",
            	      						lv_transitions_4_0,
            	      						"streamblocks.eclipse.cal.Cal.AstTransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            // InternalCal.g:4963:3: (otherlv_5= 'end' | otherlv_6= 'endschedule' )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==19) ) {
                alt103=1;
            }
            else if ( (LA103_0==59) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalCal.g:4964:4: otherlv_5= 'end'
                    {
                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstScheduleAccess().getEndKeyword_5_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:4969:4: otherlv_6= 'endschedule'
                    {
                    otherlv_6=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstScheduleAccess().getEndscheduleKeyword_5_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstSchedule"


    // $ANTLR start "entryRuleAstTransition"
    // InternalCal.g:4978:1: entryRuleAstTransition returns [EObject current=null] : iv_ruleAstTransition= ruleAstTransition EOF ;
    public final EObject entryRuleAstTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTransition = null;


        try {
            // InternalCal.g:4978:54: (iv_ruleAstTransition= ruleAstTransition EOF )
            // InternalCal.g:4979:2: iv_ruleAstTransition= ruleAstTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTransitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTransition=ruleAstTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTransition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTransition"


    // $ANTLR start "ruleAstTransition"
    // InternalCal.g:4985:1: ruleAstTransition returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( (lv_tags_2_0= ruleAstTag ) ) (otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) ) )* otherlv_5= ')' otherlv_6= '-->' ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' ) ;
    public final EObject ruleAstTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_tags_2_0 = null;

        EObject lv_tags_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:4991:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( (lv_tags_2_0= ruleAstTag ) ) (otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) ) )* otherlv_5= ')' otherlv_6= '-->' ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' ) )
            // InternalCal.g:4992:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( (lv_tags_2_0= ruleAstTag ) ) (otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) ) )* otherlv_5= ')' otherlv_6= '-->' ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' )
            {
            // InternalCal.g:4992:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( (lv_tags_2_0= ruleAstTag ) ) (otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) ) )* otherlv_5= ')' otherlv_6= '-->' ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' )
            // InternalCal.g:4993:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( (lv_tags_2_0= ruleAstTag ) ) (otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) ) )* otherlv_5= ')' otherlv_6= '-->' ( (otherlv_7= RULE_ID ) ) otherlv_8= ';'
            {
            // InternalCal.g:4993:3: ( (otherlv_0= RULE_ID ) )
            // InternalCal.g:4994:4: (otherlv_0= RULE_ID )
            {
            // InternalCal.g:4994:4: (otherlv_0= RULE_ID )
            // InternalCal.g:4995:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTransitionRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getAstTransitionAccess().getSourceAstStateCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstTransitionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCal.g:5010:3: ( (lv_tags_2_0= ruleAstTag ) )
            // InternalCal.g:5011:4: (lv_tags_2_0= ruleAstTag )
            {
            // InternalCal.g:5011:4: (lv_tags_2_0= ruleAstTag )
            // InternalCal.g:5012:5: lv_tags_2_0= ruleAstTag
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstTransitionAccess().getTagsAstTagParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_tags_2_0=ruleAstTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstTransitionRule());
              					}
              					add(
              						current,
              						"tags",
              						lv_tags_2_0,
              						"streamblocks.eclipse.cal.Cal.AstTag");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:5029:3: (otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==28) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalCal.g:5030:4: otherlv_3= ',' ( (lv_tags_4_0= ruleAstTag ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getAstTransitionAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:5034:4: ( (lv_tags_4_0= ruleAstTag ) )
            	    // InternalCal.g:5035:5: (lv_tags_4_0= ruleAstTag )
            	    {
            	    // InternalCal.g:5035:5: (lv_tags_4_0= ruleAstTag )
            	    // InternalCal.g:5036:6: lv_tags_4_0= ruleAstTag
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstTransitionAccess().getTagsAstTagParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_tags_4_0=ruleAstTag();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstTransitionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"tags",
            	      							lv_tags_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstTag");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            otherlv_5=(Token)match(input,29,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstTransitionAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstTransitionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_5());
              		
            }
            // InternalCal.g:5062:3: ( (otherlv_7= RULE_ID ) )
            // InternalCal.g:5063:4: (otherlv_7= RULE_ID )
            {
            // InternalCal.g:5063:4: (otherlv_7= RULE_ID )
            // InternalCal.g:5064:5: otherlv_7= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstTransitionRule());
              					}
              				
            }
            otherlv_7=(Token)match(input,RULE_ID,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_7, grammarAccess.getAstTransitionAccess().getTargetAstStateCrossReference_6_0());
              				
            }

            }


            }

            otherlv_8=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstTransitionAccess().getSemicolonKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTransition"


    // $ANTLR start "entryRuleAstScheduleRegExp"
    // InternalCal.g:5083:1: entryRuleAstScheduleRegExp returns [EObject current=null] : iv_ruleAstScheduleRegExp= ruleAstScheduleRegExp EOF ;
    public final EObject entryRuleAstScheduleRegExp() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstScheduleRegExp = null;


        try {
            // InternalCal.g:5083:58: (iv_ruleAstScheduleRegExp= ruleAstScheduleRegExp EOF )
            // InternalCal.g:5084:2: iv_ruleAstScheduleRegExp= ruleAstScheduleRegExp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstScheduleRegExpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstScheduleRegExp=ruleAstScheduleRegExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstScheduleRegExp; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstScheduleRegExp"


    // $ANTLR start "ruleAstScheduleRegExp"
    // InternalCal.g:5090:1: ruleAstScheduleRegExp returns [EObject current=null] : (otherlv_0= 'schedule' otherlv_1= 'regexp' ( (lv_exp_2_0= ruleRegExp ) ) otherlv_3= 'end' ) ;
    public final EObject ruleAstScheduleRegExp() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5096:2: ( (otherlv_0= 'schedule' otherlv_1= 'regexp' ( (lv_exp_2_0= ruleRegExp ) ) otherlv_3= 'end' ) )
            // InternalCal.g:5097:2: (otherlv_0= 'schedule' otherlv_1= 'regexp' ( (lv_exp_2_0= ruleRegExp ) ) otherlv_3= 'end' )
            {
            // InternalCal.g:5097:2: (otherlv_0= 'schedule' otherlv_1= 'regexp' ( (lv_exp_2_0= ruleRegExp ) ) otherlv_3= 'end' )
            // InternalCal.g:5098:3: otherlv_0= 'schedule' otherlv_1= 'regexp' ( (lv_exp_2_0= ruleRegExp ) ) otherlv_3= 'end'
            {
            otherlv_0=(Token)match(input,57,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstScheduleRegExpAccess().getScheduleKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstScheduleRegExpAccess().getRegexpKeyword_1());
              		
            }
            // InternalCal.g:5106:3: ( (lv_exp_2_0= ruleRegExp ) )
            // InternalCal.g:5107:4: (lv_exp_2_0= ruleRegExp )
            {
            // InternalCal.g:5107:4: (lv_exp_2_0= ruleRegExp )
            // InternalCal.g:5108:5: lv_exp_2_0= ruleRegExp
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstScheduleRegExpAccess().getExpRegExpParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_exp_2_0=ruleRegExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstScheduleRegExpRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"streamblocks.eclipse.cal.Cal.RegExp");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstScheduleRegExpAccess().getEndKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstScheduleRegExp"


    // $ANTLR start "entryRuleRegExp"
    // InternalCal.g:5133:1: entryRuleRegExp returns [EObject current=null] : iv_ruleRegExp= ruleRegExp EOF ;
    public final EObject entryRuleRegExp() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegExp = null;


        try {
            // InternalCal.g:5133:47: (iv_ruleRegExp= ruleRegExp EOF )
            // InternalCal.g:5134:2: iv_ruleRegExp= ruleRegExp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegExpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegExp=ruleRegExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegExp; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegExp"


    // $ANTLR start "ruleRegExp"
    // InternalCal.g:5140:1: ruleRegExp returns [EObject current=null] : (this_RegExpConcatenation_0= ruleRegExpConcatenation ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) ) )* ) ;
    public final EObject ruleRegExp() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_RegExpConcatenation_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5146:2: ( (this_RegExpConcatenation_0= ruleRegExpConcatenation ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) ) )* ) )
            // InternalCal.g:5147:2: (this_RegExpConcatenation_0= ruleRegExpConcatenation ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) ) )* )
            {
            // InternalCal.g:5147:2: (this_RegExpConcatenation_0= ruleRegExpConcatenation ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) ) )* )
            // InternalCal.g:5148:3: this_RegExpConcatenation_0= ruleRegExpConcatenation ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRegExpAccess().getRegExpConcatenationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_77);
            this_RegExpConcatenation_0=ruleRegExpConcatenation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RegExpConcatenation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:5156:3: ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==47) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalCal.g:5157:4: () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleRegExpConcatenation ) )
            	    {
            	    // InternalCal.g:5157:4: ()
            	    // InternalCal.g:5158:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getRegExpAccess().getRegExpBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:5164:4: ( (lv_operator_2_0= '|' ) )
            	    // InternalCal.g:5165:5: (lv_operator_2_0= '|' )
            	    {
            	    // InternalCal.g:5165:5: (lv_operator_2_0= '|' )
            	    // InternalCal.g:5166:6: lv_operator_2_0= '|'
            	    {
            	    lv_operator_2_0=(Token)match(input,47,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operator_2_0, grammarAccess.getRegExpAccess().getOperatorVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getRegExpRule());
            	      						}
            	      						setWithLastConsumed(current, "operator", lv_operator_2_0, "|");
            	      					
            	    }

            	    }


            	    }

            	    // InternalCal.g:5178:4: ( (lv_right_3_0= ruleRegExpConcatenation ) )
            	    // InternalCal.g:5179:5: (lv_right_3_0= ruleRegExpConcatenation )
            	    {
            	    // InternalCal.g:5179:5: (lv_right_3_0= ruleRegExpConcatenation )
            	    // InternalCal.g:5180:6: lv_right_3_0= ruleRegExpConcatenation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRegExpAccess().getRightRegExpConcatenationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_right_3_0=ruleRegExpConcatenation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRegExpRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.RegExpConcatenation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegExp"


    // $ANTLR start "entryRuleRegExpConcatenation"
    // InternalCal.g:5202:1: entryRuleRegExpConcatenation returns [EObject current=null] : iv_ruleRegExpConcatenation= ruleRegExpConcatenation EOF ;
    public final EObject entryRuleRegExpConcatenation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegExpConcatenation = null;


        try {
            // InternalCal.g:5202:60: (iv_ruleRegExpConcatenation= ruleRegExpConcatenation EOF )
            // InternalCal.g:5203:2: iv_ruleRegExpConcatenation= ruleRegExpConcatenation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegExpConcatenationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegExpConcatenation=ruleRegExpConcatenation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegExpConcatenation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegExpConcatenation"


    // $ANTLR start "ruleRegExpConcatenation"
    // InternalCal.g:5209:1: ruleRegExpConcatenation returns [EObject current=null] : (this_RegExpPostfix_0= ruleRegExpPostfix ( () ( (lv_right_2_0= ruleRegExpPostfix ) ) )* ) ;
    public final EObject ruleRegExpConcatenation() throws RecognitionException {
        EObject current = null;

        EObject this_RegExpPostfix_0 = null;

        EObject lv_right_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5215:2: ( (this_RegExpPostfix_0= ruleRegExpPostfix ( () ( (lv_right_2_0= ruleRegExpPostfix ) ) )* ) )
            // InternalCal.g:5216:2: (this_RegExpPostfix_0= ruleRegExpPostfix ( () ( (lv_right_2_0= ruleRegExpPostfix ) ) )* )
            {
            // InternalCal.g:5216:2: (this_RegExpPostfix_0= ruleRegExpPostfix ( () ( (lv_right_2_0= ruleRegExpPostfix ) ) )* )
            // InternalCal.g:5217:3: this_RegExpPostfix_0= ruleRegExpPostfix ( () ( (lv_right_2_0= ruleRegExpPostfix ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRegExpConcatenationAccess().getRegExpPostfixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_78);
            this_RegExpPostfix_0=ruleRegExpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RegExpPostfix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:5225:3: ( () ( (lv_right_2_0= ruleRegExpPostfix ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==RULE_ID||LA106_0==27) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalCal.g:5226:4: () ( (lv_right_2_0= ruleRegExpPostfix ) )
            	    {
            	    // InternalCal.g:5226:4: ()
            	    // InternalCal.g:5227:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getRegExpConcatenationAccess().getRegExpBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:5233:4: ( (lv_right_2_0= ruleRegExpPostfix ) )
            	    // InternalCal.g:5234:5: (lv_right_2_0= ruleRegExpPostfix )
            	    {
            	    // InternalCal.g:5234:5: (lv_right_2_0= ruleRegExpPostfix )
            	    // InternalCal.g:5235:6: lv_right_2_0= ruleRegExpPostfix
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRegExpConcatenationAccess().getRightRegExpPostfixParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_right_2_0=ruleRegExpPostfix();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRegExpConcatenationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_2_0,
            	      							"streamblocks.eclipse.cal.Cal.RegExpPostfix");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegExpConcatenation"


    // $ANTLR start "entryRuleRegExpPostfix"
    // InternalCal.g:5257:1: entryRuleRegExpPostfix returns [EObject current=null] : iv_ruleRegExpPostfix= ruleRegExpPostfix EOF ;
    public final EObject entryRuleRegExpPostfix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegExpPostfix = null;


        try {
            // InternalCal.g:5257:54: (iv_ruleRegExpPostfix= ruleRegExpPostfix EOF )
            // InternalCal.g:5258:2: iv_ruleRegExpPostfix= ruleRegExpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegExpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegExpPostfix=ruleRegExpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegExpPostfix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegExpPostfix"


    // $ANTLR start "ruleRegExpPostfix"
    // InternalCal.g:5264:1: ruleRegExpPostfix returns [EObject current=null] : (this_RegExpGrouping_0= ruleRegExpGrouping ( () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) ) )* ) ;
    public final EObject ruleRegExpPostfix() throws RecognitionException {
        EObject current = null;

        Token lv_unaryOperator_2_1=null;
        Token lv_unaryOperator_2_2=null;
        EObject this_RegExpGrouping_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5270:2: ( (this_RegExpGrouping_0= ruleRegExpGrouping ( () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) ) )* ) )
            // InternalCal.g:5271:2: (this_RegExpGrouping_0= ruleRegExpGrouping ( () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) ) )* )
            {
            // InternalCal.g:5271:2: (this_RegExpGrouping_0= ruleRegExpGrouping ( () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) ) )* )
            // InternalCal.g:5272:3: this_RegExpGrouping_0= ruleRegExpGrouping ( () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRegExpPostfixAccess().getRegExpGroupingParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_79);
            this_RegExpGrouping_0=ruleRegExpGrouping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RegExpGrouping_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:5280:3: ( () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) ) )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( ((LA108_0>=61 && LA108_0<=62)) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // InternalCal.g:5281:4: () ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) )
            	    {
            	    // InternalCal.g:5281:4: ()
            	    // InternalCal.g:5282:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getRegExpPostfixAccess().getRegExpUnaryChildAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:5288:4: ( ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) ) )
            	    // InternalCal.g:5289:5: ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) )
            	    {
            	    // InternalCal.g:5289:5: ( (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' ) )
            	    // InternalCal.g:5290:6: (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' )
            	    {
            	    // InternalCal.g:5290:6: (lv_unaryOperator_2_1= '*' | lv_unaryOperator_2_2= '?' )
            	    int alt107=2;
            	    int LA107_0 = input.LA(1);

            	    if ( (LA107_0==61) ) {
            	        alt107=1;
            	    }
            	    else if ( (LA107_0==62) ) {
            	        alt107=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 107, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt107) {
            	        case 1 :
            	            // InternalCal.g:5291:7: lv_unaryOperator_2_1= '*'
            	            {
            	            lv_unaryOperator_2_1=(Token)match(input,61,FOLLOW_79); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_unaryOperator_2_1, grammarAccess.getRegExpPostfixAccess().getUnaryOperatorAsteriskKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getRegExpPostfixRule());
            	              							}
            	              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:5302:7: lv_unaryOperator_2_2= '?'
            	            {
            	            lv_unaryOperator_2_2=(Token)match(input,62,FOLLOW_79); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_unaryOperator_2_2, grammarAccess.getRegExpPostfixAccess().getUnaryOperatorQuestionMarkKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getRegExpPostfixRule());
            	              							}
            	              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_2_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegExpPostfix"


    // $ANTLR start "entryRuleRegExpGrouping"
    // InternalCal.g:5320:1: entryRuleRegExpGrouping returns [EObject current=null] : iv_ruleRegExpGrouping= ruleRegExpGrouping EOF ;
    public final EObject entryRuleRegExpGrouping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegExpGrouping = null;


        try {
            // InternalCal.g:5320:55: (iv_ruleRegExpGrouping= ruleRegExpGrouping EOF )
            // InternalCal.g:5321:2: iv_ruleRegExpGrouping= ruleRegExpGrouping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegExpGroupingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegExpGrouping=ruleRegExpGrouping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegExpGrouping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegExpGrouping"


    // $ANTLR start "ruleRegExpGrouping"
    // InternalCal.g:5327:1: ruleRegExpGrouping returns [EObject current=null] : (this_RegExpTerminal_0= ruleRegExpTerminal | (otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')' ) ) ;
    public final EObject ruleRegExpGrouping() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_RegExpTerminal_0 = null;

        EObject this_RegExp_2 = null;



        	enterRule();

        try {
            // InternalCal.g:5333:2: ( (this_RegExpTerminal_0= ruleRegExpTerminal | (otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')' ) ) )
            // InternalCal.g:5334:2: (this_RegExpTerminal_0= ruleRegExpTerminal | (otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')' ) )
            {
            // InternalCal.g:5334:2: (this_RegExpTerminal_0= ruleRegExpTerminal | (otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')' ) )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==RULE_ID) ) {
                alt109=1;
            }
            else if ( (LA109_0==27) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalCal.g:5335:3: this_RegExpTerminal_0= ruleRegExpTerminal
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegExpGroupingAccess().getRegExpTerminalParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RegExpTerminal_0=ruleRegExpTerminal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RegExpTerminal_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:5344:3: (otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')' )
                    {
                    // InternalCal.g:5344:3: (otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')' )
                    // InternalCal.g:5345:4: otherlv_1= '(' this_RegExp_2= ruleRegExp otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRegExpGroupingAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getRegExpGroupingAccess().getRegExpParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    this_RegExp_2=ruleRegExp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RegExp_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRegExpGroupingAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegExpGrouping"


    // $ANTLR start "entryRuleRegExpTerminal"
    // InternalCal.g:5366:1: entryRuleRegExpTerminal returns [EObject current=null] : iv_ruleRegExpTerminal= ruleRegExpTerminal EOF ;
    public final EObject entryRuleRegExpTerminal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegExpTerminal = null;


        try {
            // InternalCal.g:5366:55: (iv_ruleRegExpTerminal= ruleRegExpTerminal EOF )
            // InternalCal.g:5367:2: iv_ruleRegExpTerminal= ruleRegExpTerminal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegExpTerminalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegExpTerminal=ruleRegExpTerminal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegExpTerminal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegExpTerminal"


    // $ANTLR start "ruleRegExpTerminal"
    // InternalCal.g:5373:1: ruleRegExpTerminal returns [EObject current=null] : ( () ( (lv_tag_1_0= ruleAstTag ) ) ) ;
    public final EObject ruleRegExpTerminal() throws RecognitionException {
        EObject current = null;

        EObject lv_tag_1_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5379:2: ( ( () ( (lv_tag_1_0= ruleAstTag ) ) ) )
            // InternalCal.g:5380:2: ( () ( (lv_tag_1_0= ruleAstTag ) ) )
            {
            // InternalCal.g:5380:2: ( () ( (lv_tag_1_0= ruleAstTag ) ) )
            // InternalCal.g:5381:3: () ( (lv_tag_1_0= ruleAstTag ) )
            {
            // InternalCal.g:5381:3: ()
            // InternalCal.g:5382:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRegExpTerminalAccess().getRegExpTagAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:5388:3: ( (lv_tag_1_0= ruleAstTag ) )
            // InternalCal.g:5389:4: (lv_tag_1_0= ruleAstTag )
            {
            // InternalCal.g:5389:4: (lv_tag_1_0= ruleAstTag )
            // InternalCal.g:5390:5: lv_tag_1_0= ruleAstTag
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRegExpTerminalAccess().getTagAstTagParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tag_1_0=ruleAstTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRegExpTerminalRule());
              					}
              					set(
              						current,
              						"tag",
              						lv_tag_1_0,
              						"streamblocks.eclipse.cal.Cal.AstTag");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegExpTerminal"


    // $ANTLR start "entryRuleAstAction"
    // InternalCal.g:5411:1: entryRuleAstAction returns [EObject current=null] : iv_ruleAstAction= ruleAstAction EOF ;
    public final EObject entryRuleAstAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstAction = null;


        try {
            // InternalCal.g:5411:50: (iv_ruleAstAction= ruleAstAction EOF )
            // InternalCal.g:5412:2: iv_ruleAstAction= ruleAstAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstAction=ruleAstAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstAction"


    // $ANTLR start "ruleAstAction"
    // InternalCal.g:5418:1: ruleAstAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'action' ( ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )* )? otherlv_8= '==>' ( ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )* )? (otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )* )? (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )* )? otherlv_22= 'end' ) ;
    public final EObject ruleAstAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_tag_2_0 = null;

        EObject lv_inputs_5_0 = null;

        EObject lv_inputs_7_0 = null;

        EObject lv_outputs_9_0 = null;

        EObject lv_outputs_11_0 = null;

        EObject lv_guards_13_0 = null;

        EObject lv_guards_15_0 = null;

        EObject lv_variables_17_0 = null;

        EObject lv_variables_19_0 = null;

        EObject lv_statements_21_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5424:2: ( ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'action' ( ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )* )? otherlv_8= '==>' ( ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )* )? (otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )* )? (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )* )? otherlv_22= 'end' ) )
            // InternalCal.g:5425:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'action' ( ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )* )? otherlv_8= '==>' ( ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )* )? (otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )* )? (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )* )? otherlv_22= 'end' )
            {
            // InternalCal.g:5425:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'action' ( ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )* )? otherlv_8= '==>' ( ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )* )? (otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )* )? (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )* )? otherlv_22= 'end' )
            // InternalCal.g:5426:3: () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'action' ( ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )* )? otherlv_8= '==>' ( ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )* )? (otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )* )? (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )* )? otherlv_22= 'end'
            {
            // InternalCal.g:5426:3: ()
            // InternalCal.g:5427:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstActionAccess().getAstActionAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:5433:3: ( (lv_annotations_1_0= ruleAstAnnotation ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==108) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalCal.g:5434:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:5434:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    // InternalCal.g:5435:5: lv_annotations_1_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstActionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_annotations_1_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            // InternalCal.g:5452:3: ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_ID) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalCal.g:5453:4: ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':'
                    {
                    // InternalCal.g:5453:4: ( (lv_tag_2_0= ruleAstTag ) )
                    // InternalCal.g:5454:5: (lv_tag_2_0= ruleAstTag )
                    {
                    // InternalCal.g:5454:5: (lv_tag_2_0= ruleAstTag )
                    // InternalCal.g:5455:6: lv_tag_2_0= ruleAstTag
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActionAccess().getTagAstTagParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_tag_2_0=ruleAstTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActionRule());
                      						}
                      						set(
                      							current,
                      							"tag",
                      							lv_tag_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstTag");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAstActionAccess().getColonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,63,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstActionAccess().getActionKeyword_3());
              		
            }
            // InternalCal.g:5481:3: ( ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )* )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==RULE_ID||LA113_0==36) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalCal.g:5482:4: ( (lv_inputs_5_0= ruleAstInputPattern ) ) (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )*
                    {
                    // InternalCal.g:5482:4: ( (lv_inputs_5_0= ruleAstInputPattern ) )
                    // InternalCal.g:5483:5: (lv_inputs_5_0= ruleAstInputPattern )
                    {
                    // InternalCal.g:5483:5: (lv_inputs_5_0= ruleAstInputPattern )
                    // InternalCal.g:5484:6: lv_inputs_5_0= ruleAstInputPattern
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActionAccess().getInputsAstInputPatternParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_inputs_5_0=ruleAstInputPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActionRule());
                      						}
                      						add(
                      							current,
                      							"inputs",
                      							lv_inputs_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstInputPattern");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5501:4: (otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) ) )*
                    loop112:
                    do {
                        int alt112=2;
                        int LA112_0 = input.LA(1);

                        if ( (LA112_0==28) ) {
                            alt112=1;
                        }


                        switch (alt112) {
                    	case 1 :
                    	    // InternalCal.g:5502:5: otherlv_6= ',' ( (lv_inputs_7_0= ruleAstInputPattern ) )
                    	    {
                    	    otherlv_6=(Token)match(input,28,FOLLOW_84); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAstActionAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5506:5: ( (lv_inputs_7_0= ruleAstInputPattern ) )
                    	    // InternalCal.g:5507:6: (lv_inputs_7_0= ruleAstInputPattern )
                    	    {
                    	    // InternalCal.g:5507:6: (lv_inputs_7_0= ruleAstInputPattern )
                    	    // InternalCal.g:5508:7: lv_inputs_7_0= ruleAstInputPattern
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActionAccess().getInputsAstInputPatternParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_inputs_7_0=ruleAstInputPattern();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"inputs",
                    	      								lv_inputs_7_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstInputPattern");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,30,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstActionAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_5());
              		
            }
            // InternalCal.g:5531:3: ( ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )* )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==RULE_ID||LA115_0==36) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalCal.g:5532:4: ( (lv_outputs_9_0= ruleAstOutputExpression ) ) (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )*
                    {
                    // InternalCal.g:5532:4: ( (lv_outputs_9_0= ruleAstOutputExpression ) )
                    // InternalCal.g:5533:5: (lv_outputs_9_0= ruleAstOutputExpression )
                    {
                    // InternalCal.g:5533:5: (lv_outputs_9_0= ruleAstOutputExpression )
                    // InternalCal.g:5534:6: lv_outputs_9_0= ruleAstOutputExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActionAccess().getOutputsAstOutputExpressionParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_outputs_9_0=ruleAstOutputExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActionRule());
                      						}
                      						add(
                      							current,
                      							"outputs",
                      							lv_outputs_9_0,
                      							"streamblocks.eclipse.cal.Cal.AstOutputExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5551:4: (otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) ) )*
                    loop114:
                    do {
                        int alt114=2;
                        int LA114_0 = input.LA(1);

                        if ( (LA114_0==28) ) {
                            alt114=1;
                        }


                        switch (alt114) {
                    	case 1 :
                    	    // InternalCal.g:5552:5: otherlv_10= ',' ( (lv_outputs_11_0= ruleAstOutputExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,28,FOLLOW_84); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getAstActionAccess().getCommaKeyword_6_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5556:5: ( (lv_outputs_11_0= ruleAstOutputExpression ) )
                    	    // InternalCal.g:5557:6: (lv_outputs_11_0= ruleAstOutputExpression )
                    	    {
                    	    // InternalCal.g:5557:6: (lv_outputs_11_0= ruleAstOutputExpression )
                    	    // InternalCal.g:5558:7: lv_outputs_11_0= ruleAstOutputExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActionAccess().getOutputsAstOutputExpressionParserRuleCall_6_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_86);
                    	    lv_outputs_11_0=ruleAstOutputExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"outputs",
                    	      								lv_outputs_11_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstOutputExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop114;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:5577:3: (otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==64) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalCal.g:5578:4: otherlv_12= 'guard' ( (lv_guards_13_0= ruleAstExpression ) ) (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )*
                    {
                    otherlv_12=(Token)match(input,64,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getAstActionAccess().getGuardKeyword_7_0());
                      			
                    }
                    // InternalCal.g:5582:4: ( (lv_guards_13_0= ruleAstExpression ) )
                    // InternalCal.g:5583:5: (lv_guards_13_0= ruleAstExpression )
                    {
                    // InternalCal.g:5583:5: (lv_guards_13_0= ruleAstExpression )
                    // InternalCal.g:5584:6: lv_guards_13_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActionAccess().getGuardsAstExpressionParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_guards_13_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActionRule());
                      						}
                      						add(
                      							current,
                      							"guards",
                      							lv_guards_13_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5601:4: (otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==28) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalCal.g:5602:5: otherlv_14= ',' ( (lv_guards_15_0= ruleAstExpression ) )
                    	    {
                    	    otherlv_14=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getAstActionAccess().getCommaKeyword_7_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5606:5: ( (lv_guards_15_0= ruleAstExpression ) )
                    	    // InternalCal.g:5607:6: (lv_guards_15_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:5607:6: (lv_guards_15_0= ruleAstExpression )
                    	    // InternalCal.g:5608:7: lv_guards_15_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActionAccess().getGuardsAstExpressionParserRuleCall_7_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_guards_15_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"guards",
                    	      								lv_guards_15_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:5627:3: (otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==31) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalCal.g:5628:4: otherlv_16= 'var' ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) ) (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_16=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getAstActionAccess().getVarKeyword_8_0());
                      			
                    }
                    // InternalCal.g:5632:4: ( (lv_variables_17_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:5633:5: (lv_variables_17_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:5633:5: (lv_variables_17_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:5634:6: lv_variables_17_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstActionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_variables_17_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstActionRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_17_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5651:4: (otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==28) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalCal.g:5652:5: otherlv_18= ',' ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_18=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_18, grammarAccess.getAstActionAccess().getCommaKeyword_8_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5656:5: ( (lv_variables_19_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:5657:6: (lv_variables_19_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:5657:6: (lv_variables_19_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:5658:7: lv_variables_19_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstActionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_variables_19_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_19_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop118;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:5677:3: (otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )* )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==43) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalCal.g:5678:4: otherlv_20= 'do' ( (lv_statements_21_0= ruleAstStatement ) )*
                    {
                    otherlv_20=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getAstActionAccess().getDoKeyword_9_0());
                      			
                    }
                    // InternalCal.g:5682:4: ( (lv_statements_21_0= ruleAstStatement ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==RULE_ID||LA120_0==33||LA120_0==42||LA120_0==52||LA120_0==68||LA120_0==70||LA120_0==108) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalCal.g:5683:5: (lv_statements_21_0= ruleAstStatement )
                    	    {
                    	    // InternalCal.g:5683:5: (lv_statements_21_0= ruleAstStatement )
                    	    // InternalCal.g:5684:6: lv_statements_21_0= ruleAstStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAstActionAccess().getStatementsAstStatementParserRuleCall_9_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_statements_21_0=ruleAstStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAstActionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_21_0,
                    	      							"streamblocks.eclipse.cal.Cal.AstStatement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_22=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getAstActionAccess().getEndKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstAction"


    // $ANTLR start "entryRuleAstInitialize"
    // InternalCal.g:5710:1: entryRuleAstInitialize returns [EObject current=null] : iv_ruleAstInitialize= ruleAstInitialize EOF ;
    public final EObject entryRuleAstInitialize() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstInitialize = null;


        try {
            // InternalCal.g:5710:54: (iv_ruleAstInitialize= ruleAstInitialize EOF )
            // InternalCal.g:5711:2: iv_ruleAstInitialize= ruleAstInitialize EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstInitializeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstInitialize=ruleAstInitialize();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstInitialize; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstInitialize"


    // $ANTLR start "ruleAstInitialize"
    // InternalCal.g:5717:1: ruleAstInitialize returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'initialize' otherlv_5= '==>' ( ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )* )? (otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )* )? (otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )* )? otherlv_19= 'end' ) ;
    public final EObject ruleAstInitialize() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_tag_2_0 = null;

        EObject lv_outputs_6_0 = null;

        EObject lv_outputs_8_0 = null;

        EObject lv_guards_10_0 = null;

        EObject lv_guards_12_0 = null;

        EObject lv_variables_14_0 = null;

        EObject lv_variables_16_0 = null;

        EObject lv_statements_18_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5723:2: ( ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'initialize' otherlv_5= '==>' ( ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )* )? (otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )* )? (otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )* )? otherlv_19= 'end' ) )
            // InternalCal.g:5724:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'initialize' otherlv_5= '==>' ( ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )* )? (otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )* )? (otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )* )? otherlv_19= 'end' )
            {
            // InternalCal.g:5724:2: ( () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'initialize' otherlv_5= '==>' ( ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )* )? (otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )* )? (otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )* )? otherlv_19= 'end' )
            // InternalCal.g:5725:3: () ( (lv_annotations_1_0= ruleAstAnnotation ) )* ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )? otherlv_4= 'initialize' otherlv_5= '==>' ( ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )* )? (otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )* )? (otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )* )? otherlv_19= 'end'
            {
            // InternalCal.g:5725:3: ()
            // InternalCal.g:5726:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstInitializeAccess().getAstInitializeAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:5732:3: ( (lv_annotations_1_0= ruleAstAnnotation ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==108) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalCal.g:5733:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:5733:4: (lv_annotations_1_0= ruleAstAnnotation )
            	    // InternalCal.g:5734:5: lv_annotations_1_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstInitializeAccess().getAnnotationsAstAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_annotations_1_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstInitializeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            // InternalCal.g:5751:3: ( ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':' )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==RULE_ID) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalCal.g:5752:4: ( (lv_tag_2_0= ruleAstTag ) ) otherlv_3= ':'
                    {
                    // InternalCal.g:5752:4: ( (lv_tag_2_0= ruleAstTag ) )
                    // InternalCal.g:5753:5: (lv_tag_2_0= ruleAstTag )
                    {
                    // InternalCal.g:5753:5: (lv_tag_2_0= ruleAstTag )
                    // InternalCal.g:5754:6: lv_tag_2_0= ruleAstTag
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstInitializeAccess().getTagAstTagParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_tag_2_0=ruleAstTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                      						}
                      						set(
                      							current,
                      							"tag",
                      							lv_tag_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstTag");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAstInitializeAccess().getColonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,65,FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstInitializeAccess().getInitializeKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,30,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstInitializeAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_4());
              		
            }
            // InternalCal.g:5784:3: ( ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )* )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==RULE_ID||LA125_0==36) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalCal.g:5785:4: ( (lv_outputs_6_0= ruleAstOutputExpression ) ) (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )*
                    {
                    // InternalCal.g:5785:4: ( (lv_outputs_6_0= ruleAstOutputExpression ) )
                    // InternalCal.g:5786:5: (lv_outputs_6_0= ruleAstOutputExpression )
                    {
                    // InternalCal.g:5786:5: (lv_outputs_6_0= ruleAstOutputExpression )
                    // InternalCal.g:5787:6: lv_outputs_6_0= ruleAstOutputExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstInitializeAccess().getOutputsAstOutputExpressionParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_outputs_6_0=ruleAstOutputExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                      						}
                      						add(
                      							current,
                      							"outputs",
                      							lv_outputs_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstOutputExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5804:4: (otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==28) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalCal.g:5805:5: otherlv_7= ',' ( (lv_outputs_8_0= ruleAstOutputExpression ) )
                    	    {
                    	    otherlv_7=(Token)match(input,28,FOLLOW_84); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getAstInitializeAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5809:5: ( (lv_outputs_8_0= ruleAstOutputExpression ) )
                    	    // InternalCal.g:5810:6: (lv_outputs_8_0= ruleAstOutputExpression )
                    	    {
                    	    // InternalCal.g:5810:6: (lv_outputs_8_0= ruleAstOutputExpression )
                    	    // InternalCal.g:5811:7: lv_outputs_8_0= ruleAstOutputExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstInitializeAccess().getOutputsAstOutputExpressionParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_86);
                    	    lv_outputs_8_0=ruleAstOutputExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"outputs",
                    	      								lv_outputs_8_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstOutputExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:5830:3: (otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )* )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==64) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalCal.g:5831:4: otherlv_9= 'guard' ( (lv_guards_10_0= ruleAstExpression ) ) (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )*
                    {
                    otherlv_9=(Token)match(input,64,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getAstInitializeAccess().getGuardKeyword_6_0());
                      			
                    }
                    // InternalCal.g:5835:4: ( (lv_guards_10_0= ruleAstExpression ) )
                    // InternalCal.g:5836:5: (lv_guards_10_0= ruleAstExpression )
                    {
                    // InternalCal.g:5836:5: (lv_guards_10_0= ruleAstExpression )
                    // InternalCal.g:5837:6: lv_guards_10_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstInitializeAccess().getGuardsAstExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_guards_10_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                      						}
                      						add(
                      							current,
                      							"guards",
                      							lv_guards_10_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5854:4: (otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) ) )*
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==28) ) {
                            alt126=1;
                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalCal.g:5855:5: otherlv_11= ',' ( (lv_guards_12_0= ruleAstExpression ) )
                    	    {
                    	    otherlv_11=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_11, grammarAccess.getAstInitializeAccess().getCommaKeyword_6_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5859:5: ( (lv_guards_12_0= ruleAstExpression ) )
                    	    // InternalCal.g:5860:6: (lv_guards_12_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:5860:6: (lv_guards_12_0= ruleAstExpression )
                    	    // InternalCal.g:5861:7: lv_guards_12_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstInitializeAccess().getGuardsAstExpressionParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_guards_12_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"guards",
                    	      								lv_guards_12_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop126;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:5880:3: (otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==31) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalCal.g:5881:4: otherlv_13= 'var' ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) ) (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_13=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getAstInitializeAccess().getVarKeyword_7_0());
                      			
                    }
                    // InternalCal.g:5885:4: ( (lv_variables_14_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:5886:5: (lv_variables_14_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:5886:5: (lv_variables_14_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:5887:6: lv_variables_14_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstInitializeAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_variables_14_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_14_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:5904:4: (otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==28) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalCal.g:5905:5: otherlv_15= ',' ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_15=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getAstInitializeAccess().getCommaKeyword_7_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:5909:5: ( (lv_variables_16_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:5910:6: (lv_variables_16_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:5910:6: (lv_variables_16_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:5911:7: lv_variables_16_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstInitializeAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_variables_16_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_16_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:5930:3: (otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )* )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==43) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalCal.g:5931:4: otherlv_17= 'do' ( (lv_statements_18_0= ruleAstStatement ) )*
                    {
                    otherlv_17=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getAstInitializeAccess().getDoKeyword_8_0());
                      			
                    }
                    // InternalCal.g:5935:4: ( (lv_statements_18_0= ruleAstStatement ) )*
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==RULE_ID||LA130_0==33||LA130_0==42||LA130_0==52||LA130_0==68||LA130_0==70||LA130_0==108) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalCal.g:5936:5: (lv_statements_18_0= ruleAstStatement )
                    	    {
                    	    // InternalCal.g:5936:5: (lv_statements_18_0= ruleAstStatement )
                    	    // InternalCal.g:5937:6: lv_statements_18_0= ruleAstStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAstInitializeAccess().getStatementsAstStatementParserRuleCall_8_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_statements_18_0=ruleAstStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAstInitializeRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_18_0,
                    	      							"streamblocks.eclipse.cal.Cal.AstStatement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_19=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getAstInitializeAccess().getEndKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstInitialize"


    // $ANTLR start "entryRuleAstInputPattern"
    // InternalCal.g:5963:1: entryRuleAstInputPattern returns [EObject current=null] : iv_ruleAstInputPattern= ruleAstInputPattern EOF ;
    public final EObject entryRuleAstInputPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstInputPattern = null;


        try {
            // InternalCal.g:5963:56: (iv_ruleAstInputPattern= ruleAstInputPattern EOF )
            // InternalCal.g:5964:2: iv_ruleAstInputPattern= ruleAstInputPattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstInputPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstInputPattern=ruleAstInputPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstInputPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstInputPattern"


    // $ANTLR start "ruleAstInputPattern"
    // InternalCal.g:5970:1: ruleAstInputPattern returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_tokens_3_0= ruleAstPattern ) ) (otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? ) ;
    public final EObject ruleAstInputPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_tokens_3_0 = null;

        EObject lv_tokens_5_0 = null;

        EObject lv_repeat_8_0 = null;



        	enterRule();

        try {
            // InternalCal.g:5976:2: ( ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_tokens_3_0= ruleAstPattern ) ) (otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? ) )
            // InternalCal.g:5977:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_tokens_3_0= ruleAstPattern ) ) (otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? )
            {
            // InternalCal.g:5977:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_tokens_3_0= ruleAstPattern ) ) (otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? )
            // InternalCal.g:5978:3: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_tokens_3_0= ruleAstPattern ) ) (otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )?
            {
            // InternalCal.g:5978:3: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_ID) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalCal.g:5979:4: ( (otherlv_0= RULE_ID ) ) otherlv_1= ':'
                    {
                    // InternalCal.g:5979:4: ( (otherlv_0= RULE_ID ) )
                    // InternalCal.g:5980:5: (otherlv_0= RULE_ID )
                    {
                    // InternalCal.g:5980:5: (otherlv_0= RULE_ID )
                    // InternalCal.g:5981:6: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAstInputPatternRule());
                      						}
                      					
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_0, grammarAccess.getAstInputPatternAccess().getPortAstPortCrossReference_0_0_0());
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstInputPatternAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,36,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstInputPatternAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalCal.g:6001:3: ( (lv_tokens_3_0= ruleAstPattern ) )
            // InternalCal.g:6002:4: (lv_tokens_3_0= ruleAstPattern )
            {
            // InternalCal.g:6002:4: (lv_tokens_3_0= ruleAstPattern )
            // InternalCal.g:6003:5: lv_tokens_3_0= ruleAstPattern
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstInputPatternAccess().getTokensAstPatternParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_tokens_3_0=ruleAstPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstInputPatternRule());
              					}
              					add(
              						current,
              						"tokens",
              						lv_tokens_3_0,
              						"streamblocks.eclipse.cal.Cal.AstPattern");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:6020:3: (otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==28) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalCal.g:6021:4: otherlv_4= ',' ( (lv_tokens_5_0= ruleAstPattern ) )
            	    {
            	    otherlv_4=(Token)match(input,28,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getAstInputPatternAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:6025:4: ( (lv_tokens_5_0= ruleAstPattern ) )
            	    // InternalCal.g:6026:5: (lv_tokens_5_0= ruleAstPattern )
            	    {
            	    // InternalCal.g:6026:5: (lv_tokens_5_0= ruleAstPattern )
            	    // InternalCal.g:6027:6: lv_tokens_5_0= ruleAstPattern
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstInputPatternAccess().getTokensAstPatternParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_tokens_5_0=ruleAstPattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstInputPatternRule());
            	      						}
            	      						add(
            	      							current,
            	      							"tokens",
            	      							lv_tokens_5_0,
            	      							"streamblocks.eclipse.cal.Cal.AstPattern");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            otherlv_6=(Token)match(input,37,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstInputPatternAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalCal.g:6049:3: (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==49) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalCal.g:6050:4: otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) )
                    {
                    otherlv_7=(Token)match(input,49,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAstInputPatternAccess().getRepeatKeyword_5_0());
                      			
                    }
                    // InternalCal.g:6054:4: ( (lv_repeat_8_0= ruleAstExpression ) )
                    // InternalCal.g:6055:5: (lv_repeat_8_0= ruleAstExpression )
                    {
                    // InternalCal.g:6055:5: (lv_repeat_8_0= ruleAstExpression )
                    // InternalCal.g:6056:6: lv_repeat_8_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstInputPatternAccess().getRepeatAstExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_repeat_8_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstInputPatternRule());
                      						}
                      						set(
                      							current,
                      							"repeat",
                      							lv_repeat_8_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstInputPattern"


    // $ANTLR start "entryRuleAstToken"
    // InternalCal.g:6078:1: entryRuleAstToken returns [EObject current=null] : iv_ruleAstToken= ruleAstToken EOF ;
    public final EObject entryRuleAstToken() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstToken = null;


        try {
            // InternalCal.g:6078:49: (iv_ruleAstToken= ruleAstToken EOF )
            // InternalCal.g:6079:2: iv_ruleAstToken= ruleAstToken EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTokenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstToken=ruleAstToken();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstToken; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstToken"


    // $ANTLR start "ruleAstToken"
    // InternalCal.g:6085:1: ruleAstToken returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleAstToken() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalCal.g:6091:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalCal.g:6092:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalCal.g:6092:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:6093:3: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:6093:3: (lv_name_0_0= RULE_ID )
            // InternalCal.g:6094:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getAstTokenAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAstTokenRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"streamblocks.eclipse.cal.Cal.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstToken"


    // $ANTLR start "entryRuleAstOutputExpression"
    // InternalCal.g:6113:1: entryRuleAstOutputExpression returns [EObject current=null] : iv_ruleAstOutputExpression= ruleAstOutputExpression EOF ;
    public final EObject entryRuleAstOutputExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstOutputExpression = null;


        try {
            // InternalCal.g:6113:60: (iv_ruleAstOutputExpression= ruleAstOutputExpression EOF )
            // InternalCal.g:6114:2: iv_ruleAstOutputExpression= ruleAstOutputExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstOutputExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstOutputExpression=ruleAstOutputExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstOutputExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstOutputExpression"


    // $ANTLR start "ruleAstOutputExpression"
    // InternalCal.g:6120:1: ruleAstOutputExpression returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_values_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? ) ;
    public final EObject ruleAstOutputExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_values_3_0 = null;

        EObject lv_values_5_0 = null;

        EObject lv_repeat_8_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6126:2: ( ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_values_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? ) )
            // InternalCal.g:6127:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_values_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? )
            {
            // InternalCal.g:6127:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_values_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )? )
            // InternalCal.g:6128:3: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )? otherlv_2= '[' ( (lv_values_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) ) )* otherlv_6= ']' (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )?
            {
            // InternalCal.g:6128:3: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_ID) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalCal.g:6129:4: ( (otherlv_0= RULE_ID ) ) otherlv_1= ':'
                    {
                    // InternalCal.g:6129:4: ( (otherlv_0= RULE_ID ) )
                    // InternalCal.g:6130:5: (otherlv_0= RULE_ID )
                    {
                    // InternalCal.g:6130:5: (otherlv_0= RULE_ID )
                    // InternalCal.g:6131:6: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAstOutputExpressionRule());
                      						}
                      					
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_0, grammarAccess.getAstOutputExpressionAccess().getPortAstPortCrossReference_0_0_0());
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstOutputExpressionAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstOutputExpressionAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalCal.g:6151:3: ( (lv_values_3_0= ruleAstExpression ) )
            // InternalCal.g:6152:4: (lv_values_3_0= ruleAstExpression )
            {
            // InternalCal.g:6152:4: (lv_values_3_0= ruleAstExpression )
            // InternalCal.g:6153:5: lv_values_3_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstOutputExpressionAccess().getValuesAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_values_3_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstOutputExpressionRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_3_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:6170:3: (otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==28) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalCal.g:6171:4: otherlv_4= ',' ( (lv_values_5_0= ruleAstExpression ) )
            	    {
            	    otherlv_4=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getAstOutputExpressionAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:6175:4: ( (lv_values_5_0= ruleAstExpression ) )
            	    // InternalCal.g:6176:5: (lv_values_5_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:6176:5: (lv_values_5_0= ruleAstExpression )
            	    // InternalCal.g:6177:6: lv_values_5_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstOutputExpressionAccess().getValuesAstExpressionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_values_5_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstOutputExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_5_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);

            otherlv_6=(Token)match(input,37,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstOutputExpressionAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalCal.g:6199:3: (otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==49) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalCal.g:6200:4: otherlv_7= 'repeat' ( (lv_repeat_8_0= ruleAstExpression ) )
                    {
                    otherlv_7=(Token)match(input,49,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAstOutputExpressionAccess().getRepeatKeyword_5_0());
                      			
                    }
                    // InternalCal.g:6204:4: ( (lv_repeat_8_0= ruleAstExpression ) )
                    // InternalCal.g:6205:5: (lv_repeat_8_0= ruleAstExpression )
                    {
                    // InternalCal.g:6205:5: (lv_repeat_8_0= ruleAstExpression )
                    // InternalCal.g:6206:6: lv_repeat_8_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstOutputExpressionAccess().getRepeatAstExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_repeat_8_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstOutputExpressionRule());
                      						}
                      						set(
                      							current,
                      							"repeat",
                      							lv_repeat_8_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstOutputExpression"


    // $ANTLR start "entryRuleAstStatementAssign"
    // InternalCal.g:6228:1: entryRuleAstStatementAssign returns [EObject current=null] : iv_ruleAstStatementAssign= ruleAstStatementAssign EOF ;
    public final EObject entryRuleAstStatementAssign() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementAssign = null;


        try {
            // InternalCal.g:6228:59: (iv_ruleAstStatementAssign= ruleAstStatementAssign EOF )
            // InternalCal.g:6229:2: iv_ruleAstStatementAssign= ruleAstStatementAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementAssign=ruleAstStatementAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementAssign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementAssign"


    // $ANTLR start "ruleAstStatementAssign"
    // InternalCal.g:6235:1: ruleAstStatementAssign returns [EObject current=null] : ( ( (lv_lvalue_0_0= ruleAstLValue ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleAstStatementAssign() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_lvalue_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6241:2: ( ( ( (lv_lvalue_0_0= ruleAstLValue ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' ) )
            // InternalCal.g:6242:2: ( ( (lv_lvalue_0_0= ruleAstLValue ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' )
            {
            // InternalCal.g:6242:2: ( ( (lv_lvalue_0_0= ruleAstLValue ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';' )
            // InternalCal.g:6243:3: ( (lv_lvalue_0_0= ruleAstLValue ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleAstExpression ) ) otherlv_3= ';'
            {
            // InternalCal.g:6243:3: ( (lv_lvalue_0_0= ruleAstLValue ) )
            // InternalCal.g:6244:4: (lv_lvalue_0_0= ruleAstLValue )
            {
            // InternalCal.g:6244:4: (lv_lvalue_0_0= ruleAstLValue )
            // InternalCal.g:6245:5: lv_lvalue_0_0= ruleAstLValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementAssignAccess().getLvalueAstLValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_96);
            lv_lvalue_0_0=ruleAstLValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementAssignRule());
              					}
              					set(
              						current,
              						"lvalue",
              						lv_lvalue_0_0,
              						"streamblocks.eclipse.cal.Cal.AstLValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,66,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstStatementAssignAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalCal.g:6266:3: ( (lv_value_2_0= ruleAstExpression ) )
            // InternalCal.g:6267:4: (lv_value_2_0= ruleAstExpression )
            {
            // InternalCal.g:6267:4: (lv_value_2_0= ruleAstExpression )
            // InternalCal.g:6268:5: lv_value_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementAssignAccess().getValueAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_value_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementAssignRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAstStatementAssignAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementAssign"


    // $ANTLR start "entryRuleAstStatementCall"
    // InternalCal.g:6293:1: entryRuleAstStatementCall returns [EObject current=null] : iv_ruleAstStatementCall= ruleAstStatementCall EOF ;
    public final EObject entryRuleAstStatementCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementCall = null;


        try {
            // InternalCal.g:6293:57: (iv_ruleAstStatementCall= ruleAstStatementCall EOF )
            // InternalCal.g:6294:2: iv_ruleAstStatementCall= ruleAstStatementCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementCall=ruleAstStatementCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementCall"


    // $ANTLR start "ruleAstStatementCall"
    // InternalCal.g:6300:1: ruleAstStatementCall returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )* )? otherlv_6= ')' otherlv_7= ';' ) ;
    public final EObject ruleAstStatementCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6306:2: ( ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )* )? otherlv_6= ')' otherlv_7= ';' ) )
            // InternalCal.g:6307:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )* )? otherlv_6= ')' otherlv_7= ';' )
            {
            // InternalCal.g:6307:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )* )? otherlv_6= ')' otherlv_7= ';' )
            // InternalCal.g:6308:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )* )? otherlv_6= ')' otherlv_7= ';'
            {
            // InternalCal.g:6308:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==108) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // InternalCal.g:6309:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:6309:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    // InternalCal.g:6310:5: lv_annotations_0_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementCallAccess().getAnnotationsAstAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_annotations_0_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementCallRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            // InternalCal.g:6327:3: ( (otherlv_1= RULE_ID ) )
            // InternalCal.g:6328:4: (otherlv_1= RULE_ID )
            {
            // InternalCal.g:6328:4: (otherlv_1= RULE_ID )
            // InternalCal.g:6329:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstStatementCallRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getAstStatementCallAccess().getProcedureAstProcedureCrossReference_1_0());
              				
            }

            }


            }

            otherlv_2=(Token)match(input,27,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStatementCallAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCal.g:6344:3: ( ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )* )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( ((LA140_0>=RULE_ID && LA140_0<=RULE_STRING)||LA140_0==27||LA140_0==33||LA140_0==36||LA140_0==40||LA140_0==70||LA140_0==87||(LA140_0>=92 && LA140_0<=95)||LA140_0==99||LA140_0==101||LA140_0==103||LA140_0==105||LA140_0==108) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalCal.g:6345:4: ( (lv_parameters_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )*
                    {
                    // InternalCal.g:6345:4: ( (lv_parameters_3_0= ruleAstExpression ) )
                    // InternalCal.g:6346:5: (lv_parameters_3_0= ruleAstExpression )
                    {
                    // InternalCal.g:6346:5: (lv_parameters_3_0= ruleAstExpression )
                    // InternalCal.g:6347:6: lv_parameters_3_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementCallAccess().getParametersAstExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_3_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementCallRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_3_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:6364:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) ) )*
                    loop139:
                    do {
                        int alt139=2;
                        int LA139_0 = input.LA(1);

                        if ( (LA139_0==28) ) {
                            alt139=1;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // InternalCal.g:6365:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleAstExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAstStatementCallAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:6369:5: ( (lv_parameters_5_0= ruleAstExpression ) )
                    	    // InternalCal.g:6370:6: (lv_parameters_5_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:6370:6: (lv_parameters_5_0= ruleAstExpression )
                    	    // InternalCal.g:6371:7: lv_parameters_5_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStatementCallAccess().getParametersAstExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_5_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStatementCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_5_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop139;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,29,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstStatementCallAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstStatementCallAccess().getSemicolonKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementCall"


    // $ANTLR start "entryRuleAstStatementForeach"
    // InternalCal.g:6402:1: entryRuleAstStatementForeach returns [EObject current=null] : iv_ruleAstStatementForeach= ruleAstStatementForeach EOF ;
    public final EObject entryRuleAstStatementForeach() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementForeach = null;


        try {
            // InternalCal.g:6402:60: (iv_ruleAstStatementForeach= ruleAstStatementForeach EOF )
            // InternalCal.g:6403:2: iv_ruleAstStatementForeach= ruleAstStatementForeach EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementForeachRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementForeach=ruleAstStatementForeach();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementForeach; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementForeach"


    // $ANTLR start "ruleAstStatementForeach"
    // InternalCal.g:6409:1: ruleAstStatementForeach returns [EObject current=null] : (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* (otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_8= 'do' ( (lv_statements_9_0= ruleAstStatement ) )* otherlv_10= 'end' ) ;
    public final EObject ruleAstStatementForeach() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_generators_1_0 = null;

        EObject lv_generators_3_0 = null;

        EObject lv_variables_5_0 = null;

        EObject lv_variables_7_0 = null;

        EObject lv_statements_9_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6415:2: ( (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* (otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_8= 'do' ( (lv_statements_9_0= ruleAstStatement ) )* otherlv_10= 'end' ) )
            // InternalCal.g:6416:2: (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* (otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_8= 'do' ( (lv_statements_9_0= ruleAstStatement ) )* otherlv_10= 'end' )
            {
            // InternalCal.g:6416:2: (otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* (otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_8= 'do' ( (lv_statements_9_0= ruleAstStatement ) )* otherlv_10= 'end' )
            // InternalCal.g:6417:3: otherlv_0= 'foreach' ( (lv_generators_1_0= ruleAstForeachGenerator ) ) (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )* (otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_8= 'do' ( (lv_statements_9_0= ruleAstStatement ) )* otherlv_10= 'end'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStatementForeachAccess().getForeachKeyword_0());
              		
            }
            // InternalCal.g:6421:3: ( (lv_generators_1_0= ruleAstForeachGenerator ) )
            // InternalCal.g:6422:4: (lv_generators_1_0= ruleAstForeachGenerator )
            {
            // InternalCal.g:6422:4: (lv_generators_1_0= ruleAstForeachGenerator )
            // InternalCal.g:6423:5: lv_generators_1_0= ruleAstForeachGenerator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_99);
            lv_generators_1_0=ruleAstForeachGenerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementForeachRule());
              					}
              					add(
              						current,
              						"generators",
              						lv_generators_1_0,
              						"streamblocks.eclipse.cal.Cal.AstForeachGenerator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:6440:3: (otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) ) )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==28) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // InternalCal.g:6441:4: otherlv_2= ',' ( (lv_generators_3_0= ruleAstForeachGenerator ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstStatementForeachAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:6445:4: ( (lv_generators_3_0= ruleAstForeachGenerator ) )
            	    // InternalCal.g:6446:5: (lv_generators_3_0= ruleAstForeachGenerator )
            	    {
            	    // InternalCal.g:6446:5: (lv_generators_3_0= ruleAstForeachGenerator )
            	    // InternalCal.g:6447:6: lv_generators_3_0= ruleAstForeachGenerator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_generators_3_0=ruleAstForeachGenerator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstStatementForeachRule());
            	      						}
            	      						add(
            	      							current,
            	      							"generators",
            	      							lv_generators_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstForeachGenerator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);

            // InternalCal.g:6465:3: (otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==31) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalCal.g:6466:4: otherlv_4= 'var' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_4=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstStatementForeachAccess().getVarKeyword_3_0());
                      			
                    }
                    // InternalCal.g:6470:4: ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:6471:5: (lv_variables_5_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:6471:5: (lv_variables_5_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:6472:6: lv_variables_5_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_variables_5_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementForeachRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:6489:4: (otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==28) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalCal.g:6490:5: otherlv_6= ',' ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_6=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAstStatementForeachAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:6494:5: ( (lv_variables_7_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:6495:6: (lv_variables_7_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:6495:6: (lv_variables_7_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:6496:7: lv_variables_7_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_variables_7_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStatementForeachRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_7_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstStatementForeachAccess().getDoKeyword_4());
              		
            }
            // InternalCal.g:6519:3: ( (lv_statements_9_0= ruleAstStatement ) )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==RULE_ID||LA144_0==33||LA144_0==42||LA144_0==52||LA144_0==68||LA144_0==70||LA144_0==108) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalCal.g:6520:4: (lv_statements_9_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:6520:4: (lv_statements_9_0= ruleAstStatement )
            	    // InternalCal.g:6521:5: lv_statements_9_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementForeachAccess().getStatementsAstStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_statements_9_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementForeachRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_9_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);

            otherlv_10=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getAstStatementForeachAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementForeach"


    // $ANTLR start "entryRuleAstForeachGenerator"
    // InternalCal.g:6546:1: entryRuleAstForeachGenerator returns [EObject current=null] : iv_ruleAstForeachGenerator= ruleAstForeachGenerator EOF ;
    public final EObject entryRuleAstForeachGenerator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstForeachGenerator = null;


        try {
            // InternalCal.g:6546:60: (iv_ruleAstForeachGenerator= ruleAstForeachGenerator EOF )
            // InternalCal.g:6547:2: iv_ruleAstForeachGenerator= ruleAstForeachGenerator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstForeachGeneratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstForeachGenerator=ruleAstForeachGenerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstForeachGenerator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstForeachGenerator"


    // $ANTLR start "ruleAstForeachGenerator"
    // InternalCal.g:6553:1: ruleAstForeachGenerator returns [EObject current=null] : ( ( (lv_variable_0_0= ruleAstVariableDeclaration ) ) otherlv_1= 'in' ( (lv_expression_2_0= ruleAstExpression ) ) ) ;
    public final EObject ruleAstForeachGenerator() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_variable_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6559:2: ( ( ( (lv_variable_0_0= ruleAstVariableDeclaration ) ) otherlv_1= 'in' ( (lv_expression_2_0= ruleAstExpression ) ) ) )
            // InternalCal.g:6560:2: ( ( (lv_variable_0_0= ruleAstVariableDeclaration ) ) otherlv_1= 'in' ( (lv_expression_2_0= ruleAstExpression ) ) )
            {
            // InternalCal.g:6560:2: ( ( (lv_variable_0_0= ruleAstVariableDeclaration ) ) otherlv_1= 'in' ( (lv_expression_2_0= ruleAstExpression ) ) )
            // InternalCal.g:6561:3: ( (lv_variable_0_0= ruleAstVariableDeclaration ) ) otherlv_1= 'in' ( (lv_expression_2_0= ruleAstExpression ) )
            {
            // InternalCal.g:6561:3: ( (lv_variable_0_0= ruleAstVariableDeclaration ) )
            // InternalCal.g:6562:4: (lv_variable_0_0= ruleAstVariableDeclaration )
            {
            // InternalCal.g:6562:4: (lv_variable_0_0= ruleAstVariableDeclaration )
            // InternalCal.g:6563:5: lv_variable_0_0= ruleAstVariableDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstForeachGeneratorAccess().getVariableAstVariableDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_100);
            lv_variable_0_0=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstForeachGeneratorRule());
              					}
              					set(
              						current,
              						"variable",
              						lv_variable_0_0,
              						"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,67,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstForeachGeneratorAccess().getInKeyword_1());
              		
            }
            // InternalCal.g:6584:3: ( (lv_expression_2_0= ruleAstExpression ) )
            // InternalCal.g:6585:4: (lv_expression_2_0= ruleAstExpression )
            {
            // InternalCal.g:6585:4: (lv_expression_2_0= ruleAstExpression )
            // InternalCal.g:6586:5: lv_expression_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstForeachGeneratorAccess().getExpressionAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstForeachGeneratorRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstForeachGenerator"


    // $ANTLR start "entryRuleAstStatementBlock"
    // InternalCal.g:6607:1: entryRuleAstStatementBlock returns [EObject current=null] : iv_ruleAstStatementBlock= ruleAstStatementBlock EOF ;
    public final EObject entryRuleAstStatementBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementBlock = null;


        try {
            // InternalCal.g:6607:58: (iv_ruleAstStatementBlock= ruleAstStatementBlock EOF )
            // InternalCal.g:6608:2: iv_ruleAstStatementBlock= ruleAstStatementBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementBlock=ruleAstStatementBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementBlock"


    // $ANTLR start "ruleAstStatementBlock"
    // InternalCal.g:6614:1: ruleAstStatementBlock returns [EObject current=null] : ( () otherlv_1= 'begin' (otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do' )? ( (lv_statements_7_0= ruleAstStatement ) )* otherlv_8= 'end' ) ;
    public final EObject ruleAstStatementBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_variables_3_0 = null;

        EObject lv_variables_5_0 = null;

        EObject lv_statements_7_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6620:2: ( ( () otherlv_1= 'begin' (otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do' )? ( (lv_statements_7_0= ruleAstStatement ) )* otherlv_8= 'end' ) )
            // InternalCal.g:6621:2: ( () otherlv_1= 'begin' (otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do' )? ( (lv_statements_7_0= ruleAstStatement ) )* otherlv_8= 'end' )
            {
            // InternalCal.g:6621:2: ( () otherlv_1= 'begin' (otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do' )? ( (lv_statements_7_0= ruleAstStatement ) )* otherlv_8= 'end' )
            // InternalCal.g:6622:3: () otherlv_1= 'begin' (otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do' )? ( (lv_statements_7_0= ruleAstStatement ) )* otherlv_8= 'end'
            {
            // InternalCal.g:6622:3: ()
            // InternalCal.g:6623:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstStatementBlockAccess().getAstStatementBlockAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,52,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstStatementBlockAccess().getBeginKeyword_1());
              		
            }
            // InternalCal.g:6633:3: (otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do' )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==31) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalCal.g:6634:4: otherlv_2= 'var' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )* otherlv_6= 'do'
                    {
                    otherlv_2=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAstStatementBlockAccess().getVarKeyword_2_0());
                      			
                    }
                    // InternalCal.g:6638:4: ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:6639:5: (lv_variables_3_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:6639:5: (lv_variables_3_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:6640:6: lv_variables_3_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementBlockAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_variables_3_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementBlockRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_3_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:6657:4: (otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==28) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalCal.g:6658:5: otherlv_4= ',' ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAstStatementBlockAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:6662:5: ( (lv_variables_5_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:6663:6: (lv_variables_5_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:6663:6: (lv_variables_5_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:6664:7: lv_variables_5_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStatementBlockAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_variables_5_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStatementBlockRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_5_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstStatementBlockAccess().getDoKeyword_2_3());
                      			
                    }

                    }
                    break;

            }

            // InternalCal.g:6687:3: ( (lv_statements_7_0= ruleAstStatement ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==RULE_ID||LA147_0==33||LA147_0==42||LA147_0==52||LA147_0==68||LA147_0==70||LA147_0==108) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalCal.g:6688:4: (lv_statements_7_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:6688:4: (lv_statements_7_0= ruleAstStatement )
            	    // InternalCal.g:6689:5: lv_statements_7_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementBlockAccess().getStatementsAstStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_statements_7_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementBlockRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_7_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            otherlv_8=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstStatementBlockAccess().getEndKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementBlock"


    // $ANTLR start "entryRuleAstStatementIf"
    // InternalCal.g:6714:1: entryRuleAstStatementIf returns [EObject current=null] : iv_ruleAstStatementIf= ruleAstStatementIf EOF ;
    public final EObject entryRuleAstStatementIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementIf = null;


        try {
            // InternalCal.g:6714:55: (iv_ruleAstStatementIf= ruleAstStatementIf EOF )
            // InternalCal.g:6715:2: iv_ruleAstStatementIf= ruleAstStatementIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementIf=ruleAstStatementIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementIf"


    // $ANTLR start "ruleAstStatementIf"
    // InternalCal.g:6721:1: ruleAstStatementIf returns [EObject current=null] : (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ( (lv_elsifs_4_0= ruleAstStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )* )? otherlv_7= 'end' ) ;
    public final EObject ruleAstStatementIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_3_0 = null;

        EObject lv_elsifs_4_0 = null;

        EObject lv_else_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6727:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ( (lv_elsifs_4_0= ruleAstStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )* )? otherlv_7= 'end' ) )
            // InternalCal.g:6728:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ( (lv_elsifs_4_0= ruleAstStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )* )? otherlv_7= 'end' )
            {
            // InternalCal.g:6728:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ( (lv_elsifs_4_0= ruleAstStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )* )? otherlv_7= 'end' )
            // InternalCal.g:6729:3: otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ( (lv_elsifs_4_0= ruleAstStatementElsif ) )* (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )* )? otherlv_7= 'end'
            {
            otherlv_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStatementIfAccess().getIfKeyword_0());
              		
            }
            // InternalCal.g:6733:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:6734:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:6734:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:6735:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementIfAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementIfRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStatementIfAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:6756:3: ( (lv_then_3_0= ruleAstStatement ) )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==RULE_ID||LA148_0==33||LA148_0==42||LA148_0==52||LA148_0==68||LA148_0==70||LA148_0==108) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalCal.g:6757:4: (lv_then_3_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:6757:4: (lv_then_3_0= ruleAstStatement )
            	    // InternalCal.g:6758:5: lv_then_3_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementIfAccess().getThenAstStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_then_3_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementIfRule());
            	      					}
            	      					add(
            	      						current,
            	      						"then",
            	      						lv_then_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);

            // InternalCal.g:6775:3: ( (lv_elsifs_4_0= ruleAstStatementElsif ) )*
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==44) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    // InternalCal.g:6776:4: (lv_elsifs_4_0= ruleAstStatementElsif )
            	    {
            	    // InternalCal.g:6776:4: (lv_elsifs_4_0= ruleAstStatementElsif )
            	    // InternalCal.g:6777:5: lv_elsifs_4_0= ruleAstStatementElsif
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementIfAccess().getElsifsAstStatementElsifParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_elsifs_4_0=ruleAstStatementElsif();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementIfRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elsifs",
            	      						lv_elsifs_4_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatementElsif");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);

            // InternalCal.g:6794:3: (otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )* )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==35) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalCal.g:6795:4: otherlv_5= 'else' ( (lv_else_6_0= ruleAstStatement ) )*
                    {
                    otherlv_5=(Token)match(input,35,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstStatementIfAccess().getElseKeyword_5_0());
                      			
                    }
                    // InternalCal.g:6799:4: ( (lv_else_6_0= ruleAstStatement ) )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==RULE_ID||LA150_0==33||LA150_0==42||LA150_0==52||LA150_0==68||LA150_0==70||LA150_0==108) ) {
                            alt150=1;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // InternalCal.g:6800:5: (lv_else_6_0= ruleAstStatement )
                    	    {
                    	    // InternalCal.g:6800:5: (lv_else_6_0= ruleAstStatement )
                    	    // InternalCal.g:6801:6: lv_else_6_0= ruleAstStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAstStatementIfAccess().getElseAstStatementParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_else_6_0=ruleAstStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAstStatementIfRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"else",
                    	      							lv_else_6_0,
                    	      							"streamblocks.eclipse.cal.Cal.AstStatement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstStatementIfAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementIf"


    // $ANTLR start "entryRuleAstStatementElsif"
    // InternalCal.g:6827:1: entryRuleAstStatementElsif returns [EObject current=null] : iv_ruleAstStatementElsif= ruleAstStatementElsif EOF ;
    public final EObject entryRuleAstStatementElsif() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementElsif = null;


        try {
            // InternalCal.g:6827:58: (iv_ruleAstStatementElsif= ruleAstStatementElsif EOF )
            // InternalCal.g:6828:2: iv_ruleAstStatementElsif= ruleAstStatementElsif EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementElsifRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementElsif=ruleAstStatementElsif();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementElsif; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementElsif"


    // $ANTLR start "ruleAstStatementElsif"
    // InternalCal.g:6834:1: ruleAstStatementElsif returns [EObject current=null] : (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ) ;
    public final EObject ruleAstStatementElsif() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6840:2: ( (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* ) )
            // InternalCal.g:6841:2: (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* )
            {
            // InternalCal.g:6841:2: (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )* )
            // InternalCal.g:6842:3: otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstStatement ) )*
            {
            otherlv_0=(Token)match(input,44,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStatementElsifAccess().getElsifKeyword_0());
              		
            }
            // InternalCal.g:6846:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:6847:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:6847:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:6848:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementElsifAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementElsifRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStatementElsifAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:6869:3: ( (lv_then_3_0= ruleAstStatement ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==RULE_ID||LA152_0==33||LA152_0==42||LA152_0==52||LA152_0==68||LA152_0==70||LA152_0==108) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalCal.g:6870:4: (lv_then_3_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:6870:4: (lv_then_3_0= ruleAstStatement )
            	    // InternalCal.g:6871:5: lv_then_3_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementElsifAccess().getThenAstStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_then_3_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementElsifRule());
            	      					}
            	      					add(
            	      						current,
            	      						"then",
            	      						lv_then_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementElsif"


    // $ANTLR start "entryRuleAstStatementWhile"
    // InternalCal.g:6892:1: entryRuleAstStatementWhile returns [EObject current=null] : iv_ruleAstStatementWhile= ruleAstStatementWhile EOF ;
    public final EObject entryRuleAstStatementWhile() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementWhile = null;


        try {
            // InternalCal.g:6892:58: (iv_ruleAstStatementWhile= ruleAstStatementWhile EOF )
            // InternalCal.g:6893:2: iv_ruleAstStatementWhile= ruleAstStatementWhile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementWhileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementWhile=ruleAstStatementWhile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementWhile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementWhile"


    // $ANTLR start "ruleAstStatementWhile"
    // InternalCal.g:6899:1: ruleAstStatementWhile returns [EObject current=null] : (otherlv_0= 'while' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'do' ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' ) ;
    public final EObject ruleAstStatementWhile() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_condition_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6905:2: ( (otherlv_0= 'while' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'do' ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' ) )
            // InternalCal.g:6906:2: (otherlv_0= 'while' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'do' ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' )
            {
            // InternalCal.g:6906:2: (otherlv_0= 'while' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'do' ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end' )
            // InternalCal.g:6907:3: otherlv_0= 'while' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'do' ( (lv_statements_3_0= ruleAstStatement ) )* otherlv_4= 'end'
            {
            otherlv_0=(Token)match(input,68,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStatementWhileAccess().getWhileKeyword_0());
              		
            }
            // InternalCal.g:6911:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:6912:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:6912:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:6913:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementWhileAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementWhileRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStatementWhileAccess().getDoKeyword_2());
              		
            }
            // InternalCal.g:6934:3: ( (lv_statements_3_0= ruleAstStatement ) )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==RULE_ID||LA153_0==33||LA153_0==42||LA153_0==52||LA153_0==68||LA153_0==70||LA153_0==108) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalCal.g:6935:4: (lv_statements_3_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:6935:4: (lv_statements_3_0= ruleAstStatement )
            	    // InternalCal.g:6936:5: lv_statements_3_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementWhileAccess().getStatementsAstStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_statements_3_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementWhileRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstStatementWhileAccess().getEndKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementWhile"


    // $ANTLR start "entryRuleAstStatementRead"
    // InternalCal.g:6961:1: entryRuleAstStatementRead returns [EObject current=null] : iv_ruleAstStatementRead= ruleAstStatementRead EOF ;
    public final EObject entryRuleAstStatementRead() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementRead = null;


        try {
            // InternalCal.g:6961:57: (iv_ruleAstStatementRead= ruleAstStatementRead EOF )
            // InternalCal.g:6962:2: iv_ruleAstStatementRead= ruleAstStatementRead EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementReadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementRead=ruleAstStatementRead();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementRead; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementRead"


    // $ANTLR start "ruleAstStatementRead"
    // InternalCal.g:6968:1: ruleAstStatementRead returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '-->' ( (lv_lvalues_2_0= ruleAstLValue ) ) (otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' ) ;
    public final EObject ruleAstStatementRead() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_lvalues_2_0 = null;

        EObject lv_lvalues_4_0 = null;

        EObject lv_repeat_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:6974:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '-->' ( (lv_lvalues_2_0= ruleAstLValue ) ) (otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' ) )
            // InternalCal.g:6975:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '-->' ( (lv_lvalues_2_0= ruleAstLValue ) ) (otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' )
            {
            // InternalCal.g:6975:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '-->' ( (lv_lvalues_2_0= ruleAstLValue ) ) (otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' )
            // InternalCal.g:6976:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '-->' ( (lv_lvalues_2_0= ruleAstLValue ) ) (otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';'
            {
            // InternalCal.g:6976:3: ( (otherlv_0= RULE_ID ) )
            // InternalCal.g:6977:4: (otherlv_0= RULE_ID )
            {
            // InternalCal.g:6977:4: (otherlv_0= RULE_ID )
            // InternalCal.g:6978:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstStatementReadRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getAstStatementReadAccess().getPortAstPortCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstStatementReadAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1());
              		
            }
            // InternalCal.g:6993:3: ( (lv_lvalues_2_0= ruleAstLValue ) )
            // InternalCal.g:6994:4: (lv_lvalues_2_0= ruleAstLValue )
            {
            // InternalCal.g:6994:4: (lv_lvalues_2_0= ruleAstLValue )
            // InternalCal.g:6995:5: lv_lvalues_2_0= ruleAstLValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementReadAccess().getLvaluesAstLValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_lvalues_2_0=ruleAstLValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementReadRule());
              					}
              					add(
              						current,
              						"lvalues",
              						lv_lvalues_2_0,
              						"streamblocks.eclipse.cal.Cal.AstLValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:7012:3: (otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) ) )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==28) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalCal.g:7013:4: otherlv_3= ',' ( (lv_lvalues_4_0= ruleAstLValue ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getAstStatementReadAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:7017:4: ( (lv_lvalues_4_0= ruleAstLValue ) )
            	    // InternalCal.g:7018:5: (lv_lvalues_4_0= ruleAstLValue )
            	    {
            	    // InternalCal.g:7018:5: (lv_lvalues_4_0= ruleAstLValue )
            	    // InternalCal.g:7019:6: lv_lvalues_4_0= ruleAstLValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstStatementReadAccess().getLvaluesAstLValueParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_lvalues_4_0=ruleAstLValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstStatementReadRule());
            	      						}
            	      						add(
            	      							current,
            	      							"lvalues",
            	      							lv_lvalues_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstLValue");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            // InternalCal.g:7037:3: (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==49) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalCal.g:7038:4: otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) )
                    {
                    otherlv_5=(Token)match(input,49,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstStatementReadAccess().getRepeatKeyword_4_0());
                      			
                    }
                    // InternalCal.g:7042:4: ( (lv_repeat_6_0= ruleAstExpression ) )
                    // InternalCal.g:7043:5: (lv_repeat_6_0= ruleAstExpression )
                    {
                    // InternalCal.g:7043:5: (lv_repeat_6_0= ruleAstExpression )
                    // InternalCal.g:7044:6: lv_repeat_6_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementReadAccess().getRepeatAstExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_repeat_6_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementReadRule());
                      						}
                      						set(
                      							current,
                      							"repeat",
                      							lv_repeat_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstStatementReadAccess().getSemicolonKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementRead"


    // $ANTLR start "entryRuleAstStatementWrite"
    // InternalCal.g:7070:1: entryRuleAstStatementWrite returns [EObject current=null] : iv_ruleAstStatementWrite= ruleAstStatementWrite EOF ;
    public final EObject entryRuleAstStatementWrite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementWrite = null;


        try {
            // InternalCal.g:7070:58: (iv_ruleAstStatementWrite= ruleAstStatementWrite EOF )
            // InternalCal.g:7071:2: iv_ruleAstStatementWrite= ruleAstStatementWrite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementWriteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementWrite=ruleAstStatementWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementWrite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementWrite"


    // $ANTLR start "ruleAstStatementWrite"
    // InternalCal.g:7077:1: ruleAstStatementWrite returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( ( '<--' )=>otherlv_1= '<--' ) ( (lv_values_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' ) ;
    public final EObject ruleAstStatementWrite() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_values_2_0 = null;

        EObject lv_values_4_0 = null;

        EObject lv_repeat_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7083:2: ( ( ( (otherlv_0= RULE_ID ) ) ( ( '<--' )=>otherlv_1= '<--' ) ( (lv_values_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' ) )
            // InternalCal.g:7084:2: ( ( (otherlv_0= RULE_ID ) ) ( ( '<--' )=>otherlv_1= '<--' ) ( (lv_values_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' )
            {
            // InternalCal.g:7084:2: ( ( (otherlv_0= RULE_ID ) ) ( ( '<--' )=>otherlv_1= '<--' ) ( (lv_values_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';' )
            // InternalCal.g:7085:3: ( (otherlv_0= RULE_ID ) ) ( ( '<--' )=>otherlv_1= '<--' ) ( (lv_values_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) ) )* (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )? otherlv_7= ';'
            {
            // InternalCal.g:7085:3: ( (otherlv_0= RULE_ID ) )
            // InternalCal.g:7086:4: (otherlv_0= RULE_ID )
            {
            // InternalCal.g:7086:4: (otherlv_0= RULE_ID )
            // InternalCal.g:7087:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstStatementWriteRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getAstStatementWriteAccess().getPortAstPortCrossReference_0_0());
              				
            }

            }


            }

            // InternalCal.g:7098:3: ( ( '<--' )=>otherlv_1= '<--' )
            // InternalCal.g:7099:4: ( '<--' )=>otherlv_1= '<--'
            {
            otherlv_1=(Token)match(input,69,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getAstStatementWriteAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1());
              			
            }

            }

            // InternalCal.g:7105:3: ( (lv_values_2_0= ruleAstExpression ) )
            // InternalCal.g:7106:4: (lv_values_2_0= ruleAstExpression )
            {
            // InternalCal.g:7106:4: (lv_values_2_0= ruleAstExpression )
            // InternalCal.g:7107:5: lv_values_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementWriteAccess().getValuesAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_values_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementWriteRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:7124:3: (otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==28) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalCal.g:7125:4: otherlv_3= ',' ( (lv_values_4_0= ruleAstExpression ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getAstStatementWriteAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:7129:4: ( (lv_values_4_0= ruleAstExpression ) )
            	    // InternalCal.g:7130:5: (lv_values_4_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:7130:5: (lv_values_4_0= ruleAstExpression )
            	    // InternalCal.g:7131:6: lv_values_4_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstStatementWriteAccess().getValuesAstExpressionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_values_4_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstStatementWriteRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);

            // InternalCal.g:7149:3: (otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==49) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalCal.g:7150:4: otherlv_5= 'repeat' ( (lv_repeat_6_0= ruleAstExpression ) )
                    {
                    otherlv_5=(Token)match(input,49,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstStatementWriteAccess().getRepeatKeyword_4_0());
                      			
                    }
                    // InternalCal.g:7154:4: ( (lv_repeat_6_0= ruleAstExpression ) )
                    // InternalCal.g:7155:5: (lv_repeat_6_0= ruleAstExpression )
                    {
                    // InternalCal.g:7155:5: (lv_repeat_6_0= ruleAstExpression )
                    // InternalCal.g:7156:6: lv_repeat_6_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementWriteAccess().getRepeatAstExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_repeat_6_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementWriteRule());
                      						}
                      						set(
                      							current,
                      							"repeat",
                      							lv_repeat_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstStatementWriteAccess().getSemicolonKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementWrite"


    // $ANTLR start "entryRuleAstLValue"
    // InternalCal.g:7182:1: entryRuleAstLValue returns [EObject current=null] : iv_ruleAstLValue= ruleAstLValue EOF ;
    public final EObject entryRuleAstLValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstLValue = null;


        try {
            // InternalCal.g:7182:50: (iv_ruleAstLValue= ruleAstLValue EOF )
            // InternalCal.g:7183:2: iv_ruleAstLValue= ruleAstLValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstLValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstLValue=ruleAstLValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstLValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstLValue"


    // $ANTLR start "ruleAstLValue"
    // InternalCal.g:7189:1: ruleAstLValue returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* ( (lv_member_4_0= ruleAstMemberAccess ) )* ) ;
    public final EObject ruleAstLValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_indexes_2_0 = null;

        EObject lv_member_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7195:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* ( (lv_member_4_0= ruleAstMemberAccess ) )* ) )
            // InternalCal.g:7196:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* ( (lv_member_4_0= ruleAstMemberAccess ) )* )
            {
            // InternalCal.g:7196:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* ( (lv_member_4_0= ruleAstMemberAccess ) )* )
            // InternalCal.g:7197:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )* ( (lv_member_4_0= ruleAstMemberAccess ) )*
            {
            // InternalCal.g:7197:3: ( (otherlv_0= RULE_ID ) )
            // InternalCal.g:7198:4: (otherlv_0= RULE_ID )
            {
            // InternalCal.g:7198:4: (otherlv_0= RULE_ID )
            // InternalCal.g:7199:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstLValueRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getAstLValueAccess().getTargetAstVariableCrossReference_0_0());
              				
            }

            }


            }

            // InternalCal.g:7210:3: (otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']' )*
            loop158:
            do {
                int alt158=2;
                int LA158_0 = input.LA(1);

                if ( (LA158_0==36) ) {
                    alt158=1;
                }


                switch (alt158) {
            	case 1 :
            	    // InternalCal.g:7211:4: otherlv_1= '[' ( (lv_indexes_2_0= ruleAstExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getAstLValueAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalCal.g:7215:4: ( (lv_indexes_2_0= ruleAstExpression ) )
            	    // InternalCal.g:7216:5: (lv_indexes_2_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:7216:5: (lv_indexes_2_0= ruleAstExpression )
            	    // InternalCal.g:7217:6: lv_indexes_2_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstLValueAccess().getIndexesAstExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_indexes_2_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstLValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indexes",
            	      							lv_indexes_2_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,37,FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getAstLValueAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop158;
                }
            } while (true);

            // InternalCal.g:7239:3: ( (lv_member_4_0= ruleAstMemberAccess ) )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==24) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    // InternalCal.g:7240:4: (lv_member_4_0= ruleAstMemberAccess )
            	    {
            	    // InternalCal.g:7240:4: (lv_member_4_0= ruleAstMemberAccess )
            	    // InternalCal.g:7241:5: lv_member_4_0= ruleAstMemberAccess
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstLValueAccess().getMemberAstMemberAccessParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_member_4_0=ruleAstMemberAccess();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstLValueRule());
            	      					}
            	      					add(
            	      						current,
            	      						"member",
            	      						lv_member_4_0,
            	      						"streamblocks.eclipse.cal.Cal.AstMemberAccess");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstLValue"


    // $ANTLR start "entryRuleAstStatementCase"
    // InternalCal.g:7262:1: entryRuleAstStatementCase returns [EObject current=null] : iv_ruleAstStatementCase= ruleAstStatementCase EOF ;
    public final EObject entryRuleAstStatementCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementCase = null;


        try {
            // InternalCal.g:7262:57: (iv_ruleAstStatementCase= ruleAstStatementCase EOF )
            // InternalCal.g:7263:2: iv_ruleAstStatementCase= ruleAstStatementCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementCase=ruleAstStatementCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementCase"


    // $ANTLR start "ruleAstStatementCase"
    // InternalCal.g:7269:1: ruleAstStatementCase returns [EObject current=null] : (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstStatementAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) ) )? otherlv_6= 'end' ) ;
    public final EObject ruleAstStatementCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_1_0 = null;

        EObject lv_cases_3_0 = null;

        EObject lv_default_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7275:2: ( (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstStatementAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) ) )? otherlv_6= 'end' ) )
            // InternalCal.g:7276:2: (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstStatementAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) ) )? otherlv_6= 'end' )
            {
            // InternalCal.g:7276:2: (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstStatementAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) ) )? otherlv_6= 'end' )
            // InternalCal.g:7277:3: otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstStatementAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) ) )? otherlv_6= 'end'
            {
            otherlv_0=(Token)match(input,70,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstStatementCaseAccess().getCaseKeyword_0());
              		
            }
            // InternalCal.g:7281:3: ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) )
            // InternalCal.g:7282:4: (lv_expression_1_0= ruleAstExpressionSymbolReference )
            {
            // InternalCal.g:7282:4: (lv_expression_1_0= ruleAstExpressionSymbolReference )
            // InternalCal.g:7283:5: lv_expression_1_0= ruleAstExpressionSymbolReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementCaseAccess().getExpressionAstExpressionSymbolReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_108);
            lv_expression_1_0=ruleAstExpressionSymbolReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementCaseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpressionSymbolReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,71,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstStatementCaseAccess().getOfKeyword_2());
              		
            }
            // InternalCal.g:7304:3: ( (lv_cases_3_0= ruleAstStatementAlternative ) )+
            int cnt160=0;
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( ((LA160_0>=RULE_ID && LA160_0<=RULE_STRING)||LA160_0==36||LA160_0==107||LA160_0==109) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalCal.g:7305:4: (lv_cases_3_0= ruleAstStatementAlternative )
            	    {
            	    // InternalCal.g:7305:4: (lv_cases_3_0= ruleAstStatementAlternative )
            	    // InternalCal.g:7306:5: lv_cases_3_0= ruleAstStatementAlternative
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementCaseAccess().getCasesAstStatementAlternativeParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_cases_3_0=ruleAstStatementAlternative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementCaseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatementAlternative");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt160 >= 1 ) break loop160;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(160, input);
                        throw eee;
                }
                cnt160++;
            } while (true);

            // InternalCal.g:7323:3: (otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==35) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalCal.g:7324:4: otherlv_4= 'else' ( (lv_default_5_0= ruleAstStatement ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstStatementCaseAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalCal.g:7328:4: ( (lv_default_5_0= ruleAstStatement ) )
                    // InternalCal.g:7329:5: (lv_default_5_0= ruleAstStatement )
                    {
                    // InternalCal.g:7329:5: (lv_default_5_0= ruleAstStatement )
                    // InternalCal.g:7330:6: lv_default_5_0= ruleAstStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementCaseAccess().getDefaultAstStatementParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_default_5_0=ruleAstStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementCaseRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstStatementCaseAccess().getEndKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementCase"


    // $ANTLR start "entryRuleAstStatementAlternative"
    // InternalCal.g:7356:1: entryRuleAstStatementAlternative returns [EObject current=null] : iv_ruleAstStatementAlternative= ruleAstStatementAlternative EOF ;
    public final EObject entryRuleAstStatementAlternative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatementAlternative = null;


        try {
            // InternalCal.g:7356:64: (iv_ruleAstStatementAlternative= ruleAstStatementAlternative EOF )
            // InternalCal.g:7357:2: iv_ruleAstStatementAlternative= ruleAstStatementAlternative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementAlternativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatementAlternative=ruleAstStatementAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatementAlternative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatementAlternative"


    // $ANTLR start "ruleAstStatementAlternative"
    // InternalCal.g:7363:1: ruleAstStatementAlternative returns [EObject current=null] : ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= 'do' ( (lv_statements_6_0= ruleAstStatement ) )* otherlv_7= 'end' ) ;
    public final EObject ruleAstStatementAlternative() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_guards_2_0 = null;

        EObject lv_guards_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7369:2: ( ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= 'do' ( (lv_statements_6_0= ruleAstStatement ) )* otherlv_7= 'end' ) )
            // InternalCal.g:7370:2: ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= 'do' ( (lv_statements_6_0= ruleAstStatement ) )* otherlv_7= 'end' )
            {
            // InternalCal.g:7370:2: ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= 'do' ( (lv_statements_6_0= ruleAstStatement ) )* otherlv_7= 'end' )
            // InternalCal.g:7371:3: ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= 'do' ( (lv_statements_6_0= ruleAstStatement ) )* otherlv_7= 'end'
            {
            // InternalCal.g:7371:3: ( (lv_pattern_0_0= ruleAstPattern ) )
            // InternalCal.g:7372:4: (lv_pattern_0_0= ruleAstPattern )
            {
            // InternalCal.g:7372:4: (lv_pattern_0_0= ruleAstPattern )
            // InternalCal.g:7373:5: lv_pattern_0_0= ruleAstPattern
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstStatementAlternativeAccess().getPatternAstPatternParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_pattern_0_0=ruleAstPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstStatementAlternativeRule());
              					}
              					set(
              						current,
              						"pattern",
              						lv_pattern_0_0,
              						"streamblocks.eclipse.cal.Cal.AstPattern");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:7390:3: (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==64) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalCal.g:7391:4: otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )*
                    {
                    otherlv_1=(Token)match(input,64,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstStatementAlternativeAccess().getGuardKeyword_1_0());
                      			
                    }
                    // InternalCal.g:7395:4: ( (lv_guards_2_0= ruleAstExpression ) )
                    // InternalCal.g:7396:5: (lv_guards_2_0= ruleAstExpression )
                    {
                    // InternalCal.g:7396:5: (lv_guards_2_0= ruleAstExpression )
                    // InternalCal.g:7397:6: lv_guards_2_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstStatementAlternativeAccess().getGuardsAstExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_guards_2_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstStatementAlternativeRule());
                      						}
                      						add(
                      							current,
                      							"guards",
                      							lv_guards_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:7414:4: (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )*
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==28) ) {
                            alt162=1;
                        }


                        switch (alt162) {
                    	case 1 :
                    	    // InternalCal.g:7415:5: otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getAstStatementAlternativeAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:7419:5: ( (lv_guards_4_0= ruleAstExpression ) )
                    	    // InternalCal.g:7420:6: (lv_guards_4_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:7420:6: (lv_guards_4_0= ruleAstExpression )
                    	    // InternalCal.g:7421:7: lv_guards_4_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstStatementAlternativeAccess().getGuardsAstExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_guards_4_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstStatementAlternativeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"guards",
                    	      								lv_guards_4_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop162;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,43,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstStatementAlternativeAccess().getDoKeyword_2());
              		
            }
            // InternalCal.g:7444:3: ( (lv_statements_6_0= ruleAstStatement ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==RULE_ID||LA164_0==33||LA164_0==42||LA164_0==52||LA164_0==68||LA164_0==70||LA164_0==108) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalCal.g:7445:4: (lv_statements_6_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:7445:4: (lv_statements_6_0= ruleAstStatement )
            	    // InternalCal.g:7446:5: lv_statements_6_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstStatementAlternativeAccess().getStatementsAstStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_statements_6_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstStatementAlternativeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_6_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstStatementAlternativeAccess().getEndKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatementAlternative"


    // $ANTLR start "entryRuleAstStatement"
    // InternalCal.g:7471:1: entryRuleAstStatement returns [EObject current=null] : iv_ruleAstStatement= ruleAstStatement EOF ;
    public final EObject entryRuleAstStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstStatement = null;


        try {
            // InternalCal.g:7471:53: (iv_ruleAstStatement= ruleAstStatement EOF )
            // InternalCal.g:7472:2: iv_ruleAstStatement= ruleAstStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstStatement=ruleAstStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstStatement"


    // $ANTLR start "ruleAstStatement"
    // InternalCal.g:7478:1: ruleAstStatement returns [EObject current=null] : (this_AstStatementAssign_0= ruleAstStatementAssign | this_AstStatementCall_1= ruleAstStatementCall | this_AstStatementForeach_2= ruleAstStatementForeach | this_AstStatementIf_3= ruleAstStatementIf | this_AstStatementRead_4= ruleAstStatementRead | this_AstStatementWrite_5= ruleAstStatementWrite | this_AstStatementWhile_6= ruleAstStatementWhile | this_AstStatementBlock_7= ruleAstStatementBlock | this_AstStatementCase_8= ruleAstStatementCase ) ;
    public final EObject ruleAstStatement() throws RecognitionException {
        EObject current = null;

        EObject this_AstStatementAssign_0 = null;

        EObject this_AstStatementCall_1 = null;

        EObject this_AstStatementForeach_2 = null;

        EObject this_AstStatementIf_3 = null;

        EObject this_AstStatementRead_4 = null;

        EObject this_AstStatementWrite_5 = null;

        EObject this_AstStatementWhile_6 = null;

        EObject this_AstStatementBlock_7 = null;

        EObject this_AstStatementCase_8 = null;



        	enterRule();

        try {
            // InternalCal.g:7484:2: ( (this_AstStatementAssign_0= ruleAstStatementAssign | this_AstStatementCall_1= ruleAstStatementCall | this_AstStatementForeach_2= ruleAstStatementForeach | this_AstStatementIf_3= ruleAstStatementIf | this_AstStatementRead_4= ruleAstStatementRead | this_AstStatementWrite_5= ruleAstStatementWrite | this_AstStatementWhile_6= ruleAstStatementWhile | this_AstStatementBlock_7= ruleAstStatementBlock | this_AstStatementCase_8= ruleAstStatementCase ) )
            // InternalCal.g:7485:2: (this_AstStatementAssign_0= ruleAstStatementAssign | this_AstStatementCall_1= ruleAstStatementCall | this_AstStatementForeach_2= ruleAstStatementForeach | this_AstStatementIf_3= ruleAstStatementIf | this_AstStatementRead_4= ruleAstStatementRead | this_AstStatementWrite_5= ruleAstStatementWrite | this_AstStatementWhile_6= ruleAstStatementWhile | this_AstStatementBlock_7= ruleAstStatementBlock | this_AstStatementCase_8= ruleAstStatementCase )
            {
            // InternalCal.g:7485:2: (this_AstStatementAssign_0= ruleAstStatementAssign | this_AstStatementCall_1= ruleAstStatementCall | this_AstStatementForeach_2= ruleAstStatementForeach | this_AstStatementIf_3= ruleAstStatementIf | this_AstStatementRead_4= ruleAstStatementRead | this_AstStatementWrite_5= ruleAstStatementWrite | this_AstStatementWhile_6= ruleAstStatementWhile | this_AstStatementBlock_7= ruleAstStatementBlock | this_AstStatementCase_8= ruleAstStatementCase )
            int alt165=9;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // InternalCal.g:7486:3: this_AstStatementAssign_0= ruleAstStatementAssign
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementAssignParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementAssign_0=ruleAstStatementAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementAssign_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:7495:3: this_AstStatementCall_1= ruleAstStatementCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementCallParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementCall_1=ruleAstStatementCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementCall_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:7504:3: this_AstStatementForeach_2= ruleAstStatementForeach
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementForeachParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementForeach_2=ruleAstStatementForeach();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementForeach_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCal.g:7513:3: this_AstStatementIf_3= ruleAstStatementIf
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementIfParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementIf_3=ruleAstStatementIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementIf_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCal.g:7522:3: this_AstStatementRead_4= ruleAstStatementRead
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementReadParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementRead_4=ruleAstStatementRead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementRead_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCal.g:7531:3: this_AstStatementWrite_5= ruleAstStatementWrite
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementWriteParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementWrite_5=ruleAstStatementWrite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementWrite_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCal.g:7540:3: this_AstStatementWhile_6= ruleAstStatementWhile
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementWhileParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementWhile_6=ruleAstStatementWhile();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementWhile_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalCal.g:7549:3: this_AstStatementBlock_7= ruleAstStatementBlock
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementBlockParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementBlock_7=ruleAstStatementBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementBlock_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalCal.g:7558:3: this_AstStatementCase_8= ruleAstStatementCase
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstStatementAccess().getAstStatementCaseParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstStatementCase_8=ruleAstStatementCase();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstStatementCase_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstStatement"


    // $ANTLR start "entryRuleAstExpression"
    // InternalCal.g:7570:1: entryRuleAstExpression returns [EObject current=null] : iv_ruleAstExpression= ruleAstExpression EOF ;
    public final EObject entryRuleAstExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpression = null;


        try {
            // InternalCal.g:7570:54: (iv_ruleAstExpression= ruleAstExpression EOF )
            // InternalCal.g:7571:2: iv_ruleAstExpression= ruleAstExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpression=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpression"


    // $ANTLR start "ruleAstExpression"
    // InternalCal.g:7577:1: ruleAstExpression returns [EObject current=null] : (this_AstExpressionAnd_0= ruleAstExpressionAnd ( () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) ) )* ) ;
    public final EObject ruleAstExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        Token lv_operator_2_3=null;
        EObject this_AstExpressionAnd_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7583:2: ( (this_AstExpressionAnd_0= ruleAstExpressionAnd ( () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) ) )* ) )
            // InternalCal.g:7584:2: (this_AstExpressionAnd_0= ruleAstExpressionAnd ( () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) ) )* )
            {
            // InternalCal.g:7584:2: (this_AstExpressionAnd_0= ruleAstExpressionAnd ( () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) ) )* )
            // InternalCal.g:7585:3: this_AstExpressionAnd_0= ruleAstExpressionAnd ( () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionAccess().getAstExpressionAndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_AstExpressionAnd_0=ruleAstExpressionAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionAnd_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:7593:3: ( () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) ) )*
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( ((LA167_0>=72 && LA167_0<=74)) ) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalCal.g:7594:4: () ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) ) ( (lv_right_3_0= ruleAstExpressionAnd ) )
            	    {
            	    // InternalCal.g:7594:4: ()
            	    // InternalCal.g:7595:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:7601:4: ( ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) ) )
            	    // InternalCal.g:7602:5: ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) )
            	    {
            	    // InternalCal.g:7602:5: ( (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' ) )
            	    // InternalCal.g:7603:6: (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' )
            	    {
            	    // InternalCal.g:7603:6: (lv_operator_2_1= '||' | lv_operator_2_2= 'or' | lv_operator_2_3= '..' )
            	    int alt166=3;
            	    switch ( input.LA(1) ) {
            	    case 72:
            	        {
            	        alt166=1;
            	        }
            	        break;
            	    case 73:
            	        {
            	        alt166=2;
            	        }
            	        break;
            	    case 74:
            	        {
            	        alt166=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 166, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt166) {
            	        case 1 :
            	            // InternalCal.g:7604:7: lv_operator_2_1= '||'
            	            {
            	            lv_operator_2_1=(Token)match(input,72,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:7615:7: lv_operator_2_2= 'or'
            	            {
            	            lv_operator_2_2=(Token)match(input,73,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionAccess().getOperatorOrKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalCal.g:7626:7: lv_operator_2_3= '..'
            	            {
            	            lv_operator_2_3=(Token)match(input,74,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_3, grammarAccess.getAstExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0_2());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_3, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:7639:4: ( (lv_right_3_0= ruleAstExpressionAnd ) )
            	    // InternalCal.g:7640:5: (lv_right_3_0= ruleAstExpressionAnd )
            	    {
            	    // InternalCal.g:7640:5: (lv_right_3_0= ruleAstExpressionAnd )
            	    // InternalCal.g:7641:6: lv_right_3_0= ruleAstExpressionAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionAccess().getRightAstExpressionAndParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_right_3_0=ruleAstExpressionAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpression"


    // $ANTLR start "entryRuleAstExpressionAnd"
    // InternalCal.g:7663:1: entryRuleAstExpressionAnd returns [EObject current=null] : iv_ruleAstExpressionAnd= ruleAstExpressionAnd EOF ;
    public final EObject entryRuleAstExpressionAnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionAnd = null;


        try {
            // InternalCal.g:7663:57: (iv_ruleAstExpressionAnd= ruleAstExpressionAnd EOF )
            // InternalCal.g:7664:2: iv_ruleAstExpressionAnd= ruleAstExpressionAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionAnd=ruleAstExpressionAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionAnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionAnd"


    // $ANTLR start "ruleAstExpressionAnd"
    // InternalCal.g:7670:1: ruleAstExpressionAnd returns [EObject current=null] : (this_AstExpressionBitor_0= ruleAstExpressionBitor ( () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) ) )* ) ;
    public final EObject ruleAstExpressionAnd() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_AstExpressionBitor_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7676:2: ( (this_AstExpressionBitor_0= ruleAstExpressionBitor ( () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) ) )* ) )
            // InternalCal.g:7677:2: (this_AstExpressionBitor_0= ruleAstExpressionBitor ( () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) ) )* )
            {
            // InternalCal.g:7677:2: (this_AstExpressionBitor_0= ruleAstExpressionBitor ( () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) ) )* )
            // InternalCal.g:7678:3: this_AstExpressionBitor_0= ruleAstExpressionBitor ( () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionAndAccess().getAstExpressionBitorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_113);
            this_AstExpressionBitor_0=ruleAstExpressionBitor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionBitor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:7686:3: ( () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( ((LA169_0>=75 && LA169_0<=76)) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalCal.g:7687:4: () ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) ) ( (lv_right_3_0= ruleAstExpressionBitor ) )
            	    {
            	    // InternalCal.g:7687:4: ()
            	    // InternalCal.g:7688:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionAndAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:7694:4: ( ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) ) )
            	    // InternalCal.g:7695:5: ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) )
            	    {
            	    // InternalCal.g:7695:5: ( (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' ) )
            	    // InternalCal.g:7696:6: (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' )
            	    {
            	    // InternalCal.g:7696:6: (lv_operator_2_1= '&&' | lv_operator_2_2= 'and' )
            	    int alt168=2;
            	    int LA168_0 = input.LA(1);

            	    if ( (LA168_0==75) ) {
            	        alt168=1;
            	    }
            	    else if ( (LA168_0==76) ) {
            	        alt168=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 168, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt168) {
            	        case 1 :
            	            // InternalCal.g:7697:7: lv_operator_2_1= '&&'
            	            {
            	            lv_operator_2_1=(Token)match(input,75,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionAndRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:7708:7: lv_operator_2_2= 'and'
            	            {
            	            lv_operator_2_2=(Token)match(input,76,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionAndAccess().getOperatorAndKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionAndRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:7721:4: ( (lv_right_3_0= ruleAstExpressionBitor ) )
            	    // InternalCal.g:7722:5: (lv_right_3_0= ruleAstExpressionBitor )
            	    {
            	    // InternalCal.g:7722:5: (lv_right_3_0= ruleAstExpressionBitor )
            	    // InternalCal.g:7723:6: lv_right_3_0= ruleAstExpressionBitor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionAndAccess().getRightAstExpressionBitorParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_right_3_0=ruleAstExpressionBitor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionAndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionBitor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionAnd"


    // $ANTLR start "entryRuleAstExpressionBitor"
    // InternalCal.g:7745:1: entryRuleAstExpressionBitor returns [EObject current=null] : iv_ruleAstExpressionBitor= ruleAstExpressionBitor EOF ;
    public final EObject entryRuleAstExpressionBitor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionBitor = null;


        try {
            // InternalCal.g:7745:59: (iv_ruleAstExpressionBitor= ruleAstExpressionBitor EOF )
            // InternalCal.g:7746:2: iv_ruleAstExpressionBitor= ruleAstExpressionBitor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionBitorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionBitor=ruleAstExpressionBitor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionBitor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionBitor"


    // $ANTLR start "ruleAstExpressionBitor"
    // InternalCal.g:7752:1: ruleAstExpressionBitor returns [EObject current=null] : (this_AstExpressionBitxor_0= ruleAstExpressionBitxor ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) ) )* ) ;
    public final EObject ruleAstExpressionBitor() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AstExpressionBitxor_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7758:2: ( (this_AstExpressionBitxor_0= ruleAstExpressionBitxor ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) ) )* ) )
            // InternalCal.g:7759:2: (this_AstExpressionBitxor_0= ruleAstExpressionBitxor ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) ) )* )
            {
            // InternalCal.g:7759:2: (this_AstExpressionBitxor_0= ruleAstExpressionBitxor ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) ) )* )
            // InternalCal.g:7760:3: this_AstExpressionBitxor_0= ruleAstExpressionBitxor ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionBitorAccess().getAstExpressionBitxorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_77);
            this_AstExpressionBitxor_0=ruleAstExpressionBitxor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionBitxor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:7768:3: ( () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) ) )*
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==47) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // InternalCal.g:7769:4: () ( (lv_operator_2_0= '|' ) ) ( (lv_right_3_0= ruleAstExpressionBitxor ) )
            	    {
            	    // InternalCal.g:7769:4: ()
            	    // InternalCal.g:7770:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionBitorAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:7776:4: ( (lv_operator_2_0= '|' ) )
            	    // InternalCal.g:7777:5: (lv_operator_2_0= '|' )
            	    {
            	    // InternalCal.g:7777:5: (lv_operator_2_0= '|' )
            	    // InternalCal.g:7778:6: lv_operator_2_0= '|'
            	    {
            	    lv_operator_2_0=(Token)match(input,47,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operator_2_0, grammarAccess.getAstExpressionBitorAccess().getOperatorVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAstExpressionBitorRule());
            	      						}
            	      						setWithLastConsumed(current, "operator", lv_operator_2_0, "|");
            	      					
            	    }

            	    }


            	    }

            	    // InternalCal.g:7790:4: ( (lv_right_3_0= ruleAstExpressionBitxor ) )
            	    // InternalCal.g:7791:5: (lv_right_3_0= ruleAstExpressionBitxor )
            	    {
            	    // InternalCal.g:7791:5: (lv_right_3_0= ruleAstExpressionBitxor )
            	    // InternalCal.g:7792:6: lv_right_3_0= ruleAstExpressionBitxor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionBitorAccess().getRightAstExpressionBitxorParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_right_3_0=ruleAstExpressionBitxor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionBitorRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionBitxor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionBitor"


    // $ANTLR start "entryRuleAstExpressionBitxor"
    // InternalCal.g:7814:1: entryRuleAstExpressionBitxor returns [EObject current=null] : iv_ruleAstExpressionBitxor= ruleAstExpressionBitxor EOF ;
    public final EObject entryRuleAstExpressionBitxor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionBitxor = null;


        try {
            // InternalCal.g:7814:60: (iv_ruleAstExpressionBitxor= ruleAstExpressionBitxor EOF )
            // InternalCal.g:7815:2: iv_ruleAstExpressionBitxor= ruleAstExpressionBitxor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionBitxorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionBitxor=ruleAstExpressionBitxor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionBitxor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionBitxor"


    // $ANTLR start "ruleAstExpressionBitxor"
    // InternalCal.g:7821:1: ruleAstExpressionBitxor returns [EObject current=null] : (this_AstExpressionBitand_0= ruleAstExpressionBitand ( () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) ) )* ) ;
    public final EObject ruleAstExpressionBitxor() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AstExpressionBitand_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7827:2: ( (this_AstExpressionBitand_0= ruleAstExpressionBitand ( () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) ) )* ) )
            // InternalCal.g:7828:2: (this_AstExpressionBitand_0= ruleAstExpressionBitand ( () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) ) )* )
            {
            // InternalCal.g:7828:2: (this_AstExpressionBitand_0= ruleAstExpressionBitand ( () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) ) )* )
            // InternalCal.g:7829:3: this_AstExpressionBitand_0= ruleAstExpressionBitand ( () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionBitxorAccess().getAstExpressionBitandParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_114);
            this_AstExpressionBitand_0=ruleAstExpressionBitand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionBitand_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:7837:3: ( () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) ) )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==77) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalCal.g:7838:4: () ( (lv_operator_2_0= '^' ) ) ( (lv_right_3_0= ruleAstExpressionBitand ) )
            	    {
            	    // InternalCal.g:7838:4: ()
            	    // InternalCal.g:7839:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionBitxorAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:7845:4: ( (lv_operator_2_0= '^' ) )
            	    // InternalCal.g:7846:5: (lv_operator_2_0= '^' )
            	    {
            	    // InternalCal.g:7846:5: (lv_operator_2_0= '^' )
            	    // InternalCal.g:7847:6: lv_operator_2_0= '^'
            	    {
            	    lv_operator_2_0=(Token)match(input,77,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operator_2_0, grammarAccess.getAstExpressionBitxorAccess().getOperatorCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAstExpressionBitxorRule());
            	      						}
            	      						setWithLastConsumed(current, "operator", lv_operator_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalCal.g:7859:4: ( (lv_right_3_0= ruleAstExpressionBitand ) )
            	    // InternalCal.g:7860:5: (lv_right_3_0= ruleAstExpressionBitand )
            	    {
            	    // InternalCal.g:7860:5: (lv_right_3_0= ruleAstExpressionBitand )
            	    // InternalCal.g:7861:6: lv_right_3_0= ruleAstExpressionBitand
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionBitxorAccess().getRightAstExpressionBitandParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_right_3_0=ruleAstExpressionBitand();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionBitxorRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionBitand");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionBitxor"


    // $ANTLR start "entryRuleAstExpressionBitand"
    // InternalCal.g:7883:1: entryRuleAstExpressionBitand returns [EObject current=null] : iv_ruleAstExpressionBitand= ruleAstExpressionBitand EOF ;
    public final EObject entryRuleAstExpressionBitand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionBitand = null;


        try {
            // InternalCal.g:7883:60: (iv_ruleAstExpressionBitand= ruleAstExpressionBitand EOF )
            // InternalCal.g:7884:2: iv_ruleAstExpressionBitand= ruleAstExpressionBitand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionBitandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionBitand=ruleAstExpressionBitand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionBitand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionBitand"


    // $ANTLR start "ruleAstExpressionBitand"
    // InternalCal.g:7890:1: ruleAstExpressionBitand returns [EObject current=null] : (this_AstExpressionEq_0= ruleAstExpressionEq ( () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) ) )* ) ;
    public final EObject ruleAstExpressionBitand() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AstExpressionEq_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7896:2: ( (this_AstExpressionEq_0= ruleAstExpressionEq ( () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) ) )* ) )
            // InternalCal.g:7897:2: (this_AstExpressionEq_0= ruleAstExpressionEq ( () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) ) )* )
            {
            // InternalCal.g:7897:2: (this_AstExpressionEq_0= ruleAstExpressionEq ( () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) ) )* )
            // InternalCal.g:7898:3: this_AstExpressionEq_0= ruleAstExpressionEq ( () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionBitandAccess().getAstExpressionEqParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_115);
            this_AstExpressionEq_0=ruleAstExpressionEq();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionEq_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:7906:3: ( () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) ) )*
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==78) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalCal.g:7907:4: () ( (lv_operator_2_0= '&' ) ) ( (lv_right_3_0= ruleAstExpressionEq ) )
            	    {
            	    // InternalCal.g:7907:4: ()
            	    // InternalCal.g:7908:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionBitandAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:7914:4: ( (lv_operator_2_0= '&' ) )
            	    // InternalCal.g:7915:5: (lv_operator_2_0= '&' )
            	    {
            	    // InternalCal.g:7915:5: (lv_operator_2_0= '&' )
            	    // InternalCal.g:7916:6: lv_operator_2_0= '&'
            	    {
            	    lv_operator_2_0=(Token)match(input,78,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operator_2_0, grammarAccess.getAstExpressionBitandAccess().getOperatorAmpersandKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAstExpressionBitandRule());
            	      						}
            	      						setWithLastConsumed(current, "operator", lv_operator_2_0, "&");
            	      					
            	    }

            	    }


            	    }

            	    // InternalCal.g:7928:4: ( (lv_right_3_0= ruleAstExpressionEq ) )
            	    // InternalCal.g:7929:5: (lv_right_3_0= ruleAstExpressionEq )
            	    {
            	    // InternalCal.g:7929:5: (lv_right_3_0= ruleAstExpressionEq )
            	    // InternalCal.g:7930:6: lv_right_3_0= ruleAstExpressionEq
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionBitandAccess().getRightAstExpressionEqParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_right_3_0=ruleAstExpressionEq();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionBitandRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionEq");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop172;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionBitand"


    // $ANTLR start "entryRuleAstExpressionEq"
    // InternalCal.g:7952:1: entryRuleAstExpressionEq returns [EObject current=null] : iv_ruleAstExpressionEq= ruleAstExpressionEq EOF ;
    public final EObject entryRuleAstExpressionEq() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionEq = null;


        try {
            // InternalCal.g:7952:56: (iv_ruleAstExpressionEq= ruleAstExpressionEq EOF )
            // InternalCal.g:7953:2: iv_ruleAstExpressionEq= ruleAstExpressionEq EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionEqRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionEq=ruleAstExpressionEq();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionEq; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionEq"


    // $ANTLR start "ruleAstExpressionEq"
    // InternalCal.g:7959:1: ruleAstExpressionEq returns [EObject current=null] : (this_AstExpressionRelational_0= ruleAstExpressionRelational ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) ) )* ) ;
    public final EObject ruleAstExpressionEq() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_AstExpressionRelational_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:7965:2: ( (this_AstExpressionRelational_0= ruleAstExpressionRelational ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) ) )* ) )
            // InternalCal.g:7966:2: (this_AstExpressionRelational_0= ruleAstExpressionRelational ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) ) )* )
            {
            // InternalCal.g:7966:2: (this_AstExpressionRelational_0= ruleAstExpressionRelational ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) ) )* )
            // InternalCal.g:7967:3: this_AstExpressionRelational_0= ruleAstExpressionRelational ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionEqAccess().getAstExpressionRelationalParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_116);
            this_AstExpressionRelational_0=ruleAstExpressionRelational();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionRelational_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:7975:3: ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==23||LA174_0==79) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalCal.g:7976:4: () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) ) ( (lv_right_3_0= ruleAstExpressionRelational ) )
            	    {
            	    // InternalCal.g:7976:4: ()
            	    // InternalCal.g:7977:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionEqAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:7983:4: ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) ) )
            	    // InternalCal.g:7984:5: ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) )
            	    {
            	    // InternalCal.g:7984:5: ( (lv_operator_2_1= '=' | lv_operator_2_2= '!=' ) )
            	    // InternalCal.g:7985:6: (lv_operator_2_1= '=' | lv_operator_2_2= '!=' )
            	    {
            	    // InternalCal.g:7985:6: (lv_operator_2_1= '=' | lv_operator_2_2= '!=' )
            	    int alt173=2;
            	    int LA173_0 = input.LA(1);

            	    if ( (LA173_0==23) ) {
            	        alt173=1;
            	    }
            	    else if ( (LA173_0==79) ) {
            	        alt173=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 173, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt173) {
            	        case 1 :
            	            // InternalCal.g:7986:7: lv_operator_2_1= '='
            	            {
            	            lv_operator_2_1=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionEqAccess().getOperatorEqualsSignKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionEqRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:7997:7: lv_operator_2_2= '!='
            	            {
            	            lv_operator_2_2=(Token)match(input,79,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionEqAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionEqRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:8010:4: ( (lv_right_3_0= ruleAstExpressionRelational ) )
            	    // InternalCal.g:8011:5: (lv_right_3_0= ruleAstExpressionRelational )
            	    {
            	    // InternalCal.g:8011:5: (lv_right_3_0= ruleAstExpressionRelational )
            	    // InternalCal.g:8012:6: lv_right_3_0= ruleAstExpressionRelational
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionEqAccess().getRightAstExpressionRelationalParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_right_3_0=ruleAstExpressionRelational();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionEqRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionRelational");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionEq"


    // $ANTLR start "entryRuleAstExpressionRelational"
    // InternalCal.g:8034:1: entryRuleAstExpressionRelational returns [EObject current=null] : iv_ruleAstExpressionRelational= ruleAstExpressionRelational EOF ;
    public final EObject entryRuleAstExpressionRelational() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionRelational = null;


        try {
            // InternalCal.g:8034:64: (iv_ruleAstExpressionRelational= ruleAstExpressionRelational EOF )
            // InternalCal.g:8035:2: iv_ruleAstExpressionRelational= ruleAstExpressionRelational EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionRelationalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionRelational=ruleAstExpressionRelational();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionRelational; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionRelational"


    // $ANTLR start "ruleAstExpressionRelational"
    // InternalCal.g:8041:1: ruleAstExpressionRelational returns [EObject current=null] : (this_AstExpressionShift_0= ruleAstExpressionShift ( () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) ) )* ) ;
    public final EObject ruleAstExpressionRelational() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        Token lv_operator_2_3=null;
        Token lv_operator_2_4=null;
        EObject this_AstExpressionShift_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8047:2: ( (this_AstExpressionShift_0= ruleAstExpressionShift ( () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) ) )* ) )
            // InternalCal.g:8048:2: (this_AstExpressionShift_0= ruleAstExpressionShift ( () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) ) )* )
            {
            // InternalCal.g:8048:2: (this_AstExpressionShift_0= ruleAstExpressionShift ( () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) ) )* )
            // InternalCal.g:8049:3: this_AstExpressionShift_0= ruleAstExpressionShift ( () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionRelationalAccess().getAstExpressionShiftParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_117);
            this_AstExpressionShift_0=ruleAstExpressionShift();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionShift_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:8057:3: ( () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) ) )*
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==55||(LA176_0>=80 && LA176_0<=82)) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // InternalCal.g:8058:4: () ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) ) ( (lv_right_3_0= ruleAstExpressionShift ) )
            	    {
            	    // InternalCal.g:8058:4: ()
            	    // InternalCal.g:8059:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionRelationalAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:8065:4: ( ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) ) )
            	    // InternalCal.g:8066:5: ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) )
            	    {
            	    // InternalCal.g:8066:5: ( (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' ) )
            	    // InternalCal.g:8067:6: (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' )
            	    {
            	    // InternalCal.g:8067:6: (lv_operator_2_1= '<' | lv_operator_2_2= '<=' | lv_operator_2_3= '>' | lv_operator_2_4= '>=' )
            	    int alt175=4;
            	    switch ( input.LA(1) ) {
            	    case 80:
            	        {
            	        alt175=1;
            	        }
            	        break;
            	    case 81:
            	        {
            	        alt175=2;
            	        }
            	        break;
            	    case 55:
            	        {
            	        alt175=3;
            	        }
            	        break;
            	    case 82:
            	        {
            	        alt175=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 175, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt175) {
            	        case 1 :
            	            // InternalCal.g:8068:7: lv_operator_2_1= '<'
            	            {
            	            lv_operator_2_1=(Token)match(input,80,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionRelationalAccess().getOperatorLessThanSignKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRelationalRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:8079:7: lv_operator_2_2= '<='
            	            {
            	            lv_operator_2_2=(Token)match(input,81,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionRelationalAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRelationalRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalCal.g:8090:7: lv_operator_2_3= '>'
            	            {
            	            lv_operator_2_3=(Token)match(input,55,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_3, grammarAccess.getAstExpressionRelationalAccess().getOperatorGreaterThanSignKeyword_1_1_0_2());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRelationalRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_3, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalCal.g:8101:7: lv_operator_2_4= '>='
            	            {
            	            lv_operator_2_4=(Token)match(input,82,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_4, grammarAccess.getAstExpressionRelationalAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionRelationalRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_4, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:8114:4: ( (lv_right_3_0= ruleAstExpressionShift ) )
            	    // InternalCal.g:8115:5: (lv_right_3_0= ruleAstExpressionShift )
            	    {
            	    // InternalCal.g:8115:5: (lv_right_3_0= ruleAstExpressionShift )
            	    // InternalCal.g:8116:6: lv_right_3_0= ruleAstExpressionShift
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionRelationalAccess().getRightAstExpressionShiftParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_right_3_0=ruleAstExpressionShift();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionRelationalRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionShift");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionRelational"


    // $ANTLR start "entryRuleAstExpressionShift"
    // InternalCal.g:8138:1: entryRuleAstExpressionShift returns [EObject current=null] : iv_ruleAstExpressionShift= ruleAstExpressionShift EOF ;
    public final EObject entryRuleAstExpressionShift() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionShift = null;


        try {
            // InternalCal.g:8138:59: (iv_ruleAstExpressionShift= ruleAstExpressionShift EOF )
            // InternalCal.g:8139:2: iv_ruleAstExpressionShift= ruleAstExpressionShift EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionShiftRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionShift=ruleAstExpressionShift();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionShift; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionShift"


    // $ANTLR start "ruleAstExpressionShift"
    // InternalCal.g:8145:1: ruleAstExpressionShift returns [EObject current=null] : (this_AstExpressionAdditive_0= ruleAstExpressionAdditive ( () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) ) )* ) ;
    public final EObject ruleAstExpressionShift() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        Token lv_operator_2_3=null;
        EObject this_AstExpressionAdditive_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8151:2: ( (this_AstExpressionAdditive_0= ruleAstExpressionAdditive ( () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) ) )* ) )
            // InternalCal.g:8152:2: (this_AstExpressionAdditive_0= ruleAstExpressionAdditive ( () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) ) )* )
            {
            // InternalCal.g:8152:2: (this_AstExpressionAdditive_0= ruleAstExpressionAdditive ( () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) ) )* )
            // InternalCal.g:8153:3: this_AstExpressionAdditive_0= ruleAstExpressionAdditive ( () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionShiftAccess().getAstExpressionAdditiveParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_118);
            this_AstExpressionAdditive_0=ruleAstExpressionAdditive();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionAdditive_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:8161:3: ( () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( ((LA178_0>=83 && LA178_0<=85)) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalCal.g:8162:4: () ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) ) ( (lv_right_3_0= ruleAstExpressionAdditive ) )
            	    {
            	    // InternalCal.g:8162:4: ()
            	    // InternalCal.g:8163:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionShiftAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:8169:4: ( ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) ) )
            	    // InternalCal.g:8170:5: ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) )
            	    {
            	    // InternalCal.g:8170:5: ( (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' ) )
            	    // InternalCal.g:8171:6: (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' )
            	    {
            	    // InternalCal.g:8171:6: (lv_operator_2_1= '<<' | lv_operator_2_2= '>>' | lv_operator_2_3= '>>>' )
            	    int alt177=3;
            	    switch ( input.LA(1) ) {
            	    case 83:
            	        {
            	        alt177=1;
            	        }
            	        break;
            	    case 84:
            	        {
            	        alt177=2;
            	        }
            	        break;
            	    case 85:
            	        {
            	        alt177=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 177, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt177) {
            	        case 1 :
            	            // InternalCal.g:8172:7: lv_operator_2_1= '<<'
            	            {
            	            lv_operator_2_1=(Token)match(input,83,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionShiftAccess().getOperatorLessThanSignLessThanSignKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionShiftRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:8183:7: lv_operator_2_2= '>>'
            	            {
            	            lv_operator_2_2=(Token)match(input,84,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionShiftAccess().getOperatorGreaterThanSignGreaterThanSignKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionShiftRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalCal.g:8194:7: lv_operator_2_3= '>>>'
            	            {
            	            lv_operator_2_3=(Token)match(input,85,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_3, grammarAccess.getAstExpressionShiftAccess().getOperatorGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_0_2());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionShiftRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_3, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:8207:4: ( (lv_right_3_0= ruleAstExpressionAdditive ) )
            	    // InternalCal.g:8208:5: (lv_right_3_0= ruleAstExpressionAdditive )
            	    {
            	    // InternalCal.g:8208:5: (lv_right_3_0= ruleAstExpressionAdditive )
            	    // InternalCal.g:8209:6: lv_right_3_0= ruleAstExpressionAdditive
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionShiftAccess().getRightAstExpressionAdditiveParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_right_3_0=ruleAstExpressionAdditive();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionShiftRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionAdditive");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionShift"


    // $ANTLR start "entryRuleAstExpressionAdditive"
    // InternalCal.g:8231:1: entryRuleAstExpressionAdditive returns [EObject current=null] : iv_ruleAstExpressionAdditive= ruleAstExpressionAdditive EOF ;
    public final EObject entryRuleAstExpressionAdditive() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionAdditive = null;


        try {
            // InternalCal.g:8231:62: (iv_ruleAstExpressionAdditive= ruleAstExpressionAdditive EOF )
            // InternalCal.g:8232:2: iv_ruleAstExpressionAdditive= ruleAstExpressionAdditive EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionAdditiveRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionAdditive=ruleAstExpressionAdditive();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionAdditive; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionAdditive"


    // $ANTLR start "ruleAstExpressionAdditive"
    // InternalCal.g:8238:1: ruleAstExpressionAdditive returns [EObject current=null] : (this_AstExpressionMultiplicative_0= ruleAstExpressionMultiplicative ( () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) ) )* ) ;
    public final EObject ruleAstExpressionAdditive() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_AstExpressionMultiplicative_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8244:2: ( (this_AstExpressionMultiplicative_0= ruleAstExpressionMultiplicative ( () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) ) )* ) )
            // InternalCal.g:8245:2: (this_AstExpressionMultiplicative_0= ruleAstExpressionMultiplicative ( () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) ) )* )
            {
            // InternalCal.g:8245:2: (this_AstExpressionMultiplicative_0= ruleAstExpressionMultiplicative ( () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) ) )* )
            // InternalCal.g:8246:3: this_AstExpressionMultiplicative_0= ruleAstExpressionMultiplicative ( () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionAdditiveAccess().getAstExpressionMultiplicativeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_119);
            this_AstExpressionMultiplicative_0=ruleAstExpressionMultiplicative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionMultiplicative_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:8254:3: ( () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( ((LA180_0>=86 && LA180_0<=87)) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalCal.g:8255:4: () ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) ) ( (lv_right_3_0= ruleAstExpressionMultiplicative ) )
            	    {
            	    // InternalCal.g:8255:4: ()
            	    // InternalCal.g:8256:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionAdditiveAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:8262:4: ( ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) ) )
            	    // InternalCal.g:8263:5: ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) )
            	    {
            	    // InternalCal.g:8263:5: ( (lv_operator_2_1= '+' | lv_operator_2_2= '-' ) )
            	    // InternalCal.g:8264:6: (lv_operator_2_1= '+' | lv_operator_2_2= '-' )
            	    {
            	    // InternalCal.g:8264:6: (lv_operator_2_1= '+' | lv_operator_2_2= '-' )
            	    int alt179=2;
            	    int LA179_0 = input.LA(1);

            	    if ( (LA179_0==86) ) {
            	        alt179=1;
            	    }
            	    else if ( (LA179_0==87) ) {
            	        alt179=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 179, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt179) {
            	        case 1 :
            	            // InternalCal.g:8265:7: lv_operator_2_1= '+'
            	            {
            	            lv_operator_2_1=(Token)match(input,86,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionAdditiveAccess().getOperatorPlusSignKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionAdditiveRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:8276:7: lv_operator_2_2= '-'
            	            {
            	            lv_operator_2_2=(Token)match(input,87,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionAdditiveAccess().getOperatorHyphenMinusKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionAdditiveRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:8289:4: ( (lv_right_3_0= ruleAstExpressionMultiplicative ) )
            	    // InternalCal.g:8290:5: (lv_right_3_0= ruleAstExpressionMultiplicative )
            	    {
            	    // InternalCal.g:8290:5: (lv_right_3_0= ruleAstExpressionMultiplicative )
            	    // InternalCal.g:8291:6: lv_right_3_0= ruleAstExpressionMultiplicative
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionAdditiveAccess().getRightAstExpressionMultiplicativeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_right_3_0=ruleAstExpressionMultiplicative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionAdditiveRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionMultiplicative");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionAdditive"


    // $ANTLR start "entryRuleAstExpressionMultiplicative"
    // InternalCal.g:8313:1: entryRuleAstExpressionMultiplicative returns [EObject current=null] : iv_ruleAstExpressionMultiplicative= ruleAstExpressionMultiplicative EOF ;
    public final EObject entryRuleAstExpressionMultiplicative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionMultiplicative = null;


        try {
            // InternalCal.g:8313:68: (iv_ruleAstExpressionMultiplicative= ruleAstExpressionMultiplicative EOF )
            // InternalCal.g:8314:2: iv_ruleAstExpressionMultiplicative= ruleAstExpressionMultiplicative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionMultiplicativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionMultiplicative=ruleAstExpressionMultiplicative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionMultiplicative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionMultiplicative"


    // $ANTLR start "ruleAstExpressionMultiplicative"
    // InternalCal.g:8320:1: ruleAstExpressionMultiplicative returns [EObject current=null] : (this_AstExpressionExp_0= ruleAstExpressionExp ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) ) )* ) ;
    public final EObject ruleAstExpressionMultiplicative() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        Token lv_operator_2_3=null;
        Token lv_operator_2_4=null;
        EObject this_AstExpressionExp_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8326:2: ( (this_AstExpressionExp_0= ruleAstExpressionExp ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) ) )* ) )
            // InternalCal.g:8327:2: (this_AstExpressionExp_0= ruleAstExpressionExp ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) ) )* )
            {
            // InternalCal.g:8327:2: (this_AstExpressionExp_0= ruleAstExpressionExp ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) ) )* )
            // InternalCal.g:8328:3: this_AstExpressionExp_0= ruleAstExpressionExp ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionMultiplicativeAccess().getAstExpressionExpParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_120);
            this_AstExpressionExp_0=ruleAstExpressionExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionExp_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:8336:3: ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) ) )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==61||(LA182_0>=88 && LA182_0<=90)) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // InternalCal.g:8337:4: () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) ) ( (lv_right_3_0= ruleAstExpressionExp ) )
            	    {
            	    // InternalCal.g:8337:4: ()
            	    // InternalCal.g:8338:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionMultiplicativeAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:8344:4: ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) ) )
            	    // InternalCal.g:8345:5: ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) )
            	    {
            	    // InternalCal.g:8345:5: ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' ) )
            	    // InternalCal.g:8346:6: (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' )
            	    {
            	    // InternalCal.g:8346:6: (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'div' | lv_operator_2_4= 'mod' )
            	    int alt181=4;
            	    switch ( input.LA(1) ) {
            	    case 61:
            	        {
            	        alt181=1;
            	        }
            	        break;
            	    case 88:
            	        {
            	        alt181=2;
            	        }
            	        break;
            	    case 89:
            	        {
            	        alt181=3;
            	        }
            	        break;
            	    case 90:
            	        {
            	        alt181=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 181, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt181) {
            	        case 1 :
            	            // InternalCal.g:8347:7: lv_operator_2_1= '*'
            	            {
            	            lv_operator_2_1=(Token)match(input,61,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_1, grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAsteriskKeyword_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionMultiplicativeRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:8358:7: lv_operator_2_2= '/'
            	            {
            	            lv_operator_2_2=(Token)match(input,88,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_2, grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorSolidusKeyword_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionMultiplicativeRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalCal.g:8369:7: lv_operator_2_3= 'div'
            	            {
            	            lv_operator_2_3=(Token)match(input,89,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_3, grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorDivKeyword_1_1_0_2());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionMultiplicativeRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_3, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalCal.g:8380:7: lv_operator_2_4= 'mod'
            	            {
            	            lv_operator_2_4=(Token)match(input,90,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operator_2_4, grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorModKeyword_1_1_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getAstExpressionMultiplicativeRule());
            	              							}
            	              							setWithLastConsumed(current, "operator", lv_operator_2_4, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCal.g:8393:4: ( (lv_right_3_0= ruleAstExpressionExp ) )
            	    // InternalCal.g:8394:5: (lv_right_3_0= ruleAstExpressionExp )
            	    {
            	    // InternalCal.g:8394:5: (lv_right_3_0= ruleAstExpressionExp )
            	    // InternalCal.g:8395:6: lv_right_3_0= ruleAstExpressionExp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionMultiplicativeAccess().getRightAstExpressionExpParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_right_3_0=ruleAstExpressionExp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionMultiplicativeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionExp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionMultiplicative"


    // $ANTLR start "entryRuleAstExpressionExp"
    // InternalCal.g:8417:1: entryRuleAstExpressionExp returns [EObject current=null] : iv_ruleAstExpressionExp= ruleAstExpressionExp EOF ;
    public final EObject entryRuleAstExpressionExp() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionExp = null;


        try {
            // InternalCal.g:8417:57: (iv_ruleAstExpressionExp= ruleAstExpressionExp EOF )
            // InternalCal.g:8418:2: iv_ruleAstExpressionExp= ruleAstExpressionExp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionExpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionExp=ruleAstExpressionExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionExp; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionExp"


    // $ANTLR start "ruleAstExpressionExp"
    // InternalCal.g:8424:1: ruleAstExpressionExp returns [EObject current=null] : (this_AstExpressionUnary_0= ruleAstExpressionUnary ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) ) )* ) ;
    public final EObject ruleAstExpressionExp() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AstExpressionUnary_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8430:2: ( (this_AstExpressionUnary_0= ruleAstExpressionUnary ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) ) )* ) )
            // InternalCal.g:8431:2: (this_AstExpressionUnary_0= ruleAstExpressionUnary ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) ) )* )
            {
            // InternalCal.g:8431:2: (this_AstExpressionUnary_0= ruleAstExpressionUnary ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) ) )* )
            // InternalCal.g:8432:3: this_AstExpressionUnary_0= ruleAstExpressionUnary ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionExpAccess().getAstExpressionUnaryParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_121);
            this_AstExpressionUnary_0=ruleAstExpressionUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionUnary_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:8440:3: ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) ) )*
            loop183:
            do {
                int alt183=2;
                int LA183_0 = input.LA(1);

                if ( (LA183_0==91) ) {
                    alt183=1;
                }


                switch (alt183) {
            	case 1 :
            	    // InternalCal.g:8441:4: () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleAstExpressionUnary ) )
            	    {
            	    // InternalCal.g:8441:4: ()
            	    // InternalCal.g:8442:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAstExpressionExpAccess().getAstExpressionBinaryLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalCal.g:8448:4: ( (lv_operator_2_0= '**' ) )
            	    // InternalCal.g:8449:5: (lv_operator_2_0= '**' )
            	    {
            	    // InternalCal.g:8449:5: (lv_operator_2_0= '**' )
            	    // InternalCal.g:8450:6: lv_operator_2_0= '**'
            	    {
            	    lv_operator_2_0=(Token)match(input,91,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operator_2_0, grammarAccess.getAstExpressionExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAstExpressionExpRule());
            	      						}
            	      						setWithLastConsumed(current, "operator", lv_operator_2_0, "**");
            	      					
            	    }

            	    }


            	    }

            	    // InternalCal.g:8462:4: ( (lv_right_3_0= ruleAstExpressionUnary ) )
            	    // InternalCal.g:8463:5: (lv_right_3_0= ruleAstExpressionUnary )
            	    {
            	    // InternalCal.g:8463:5: (lv_right_3_0= ruleAstExpressionUnary )
            	    // InternalCal.g:8464:6: lv_right_3_0= ruleAstExpressionUnary
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionExpAccess().getRightAstExpressionUnaryParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_right_3_0=ruleAstExpressionUnary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionExpRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpressionUnary");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionExp"


    // $ANTLR start "entryRuleAstExpressionUnary"
    // InternalCal.g:8486:1: entryRuleAstExpressionUnary returns [EObject current=null] : iv_ruleAstExpressionUnary= ruleAstExpressionUnary EOF ;
    public final EObject entryRuleAstExpressionUnary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionUnary = null;


        try {
            // InternalCal.g:8486:59: (iv_ruleAstExpressionUnary= ruleAstExpressionUnary EOF )
            // InternalCal.g:8487:2: iv_ruleAstExpressionUnary= ruleAstExpressionUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionUnary=ruleAstExpressionUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionUnary"


    // $ANTLR start "ruleAstExpressionUnary"
    // InternalCal.g:8493:1: ruleAstExpressionUnary returns [EObject current=null] : ( ( () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) ) ) | this_AstExpressionAssertion_3= ruleAstExpressionAssertion ) ;
    public final EObject ruleAstExpressionUnary() throws RecognitionException {
        EObject current = null;

        Token lv_unaryOperator_1_1=null;
        Token lv_unaryOperator_1_2=null;
        Token lv_unaryOperator_1_3=null;
        Token lv_unaryOperator_1_4=null;
        Token lv_unaryOperator_1_5=null;
        EObject lv_expression_2_0 = null;

        EObject this_AstExpressionAssertion_3 = null;



        	enterRule();

        try {
            // InternalCal.g:8499:2: ( ( ( () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) ) ) | this_AstExpressionAssertion_3= ruleAstExpressionAssertion ) )
            // InternalCal.g:8500:2: ( ( () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) ) ) | this_AstExpressionAssertion_3= ruleAstExpressionAssertion )
            {
            // InternalCal.g:8500:2: ( ( () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) ) ) | this_AstExpressionAssertion_3= ruleAstExpressionAssertion )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==87||(LA185_0>=92 && LA185_0<=95)) ) {
                alt185=1;
            }
            else if ( ((LA185_0>=RULE_ID && LA185_0<=RULE_STRING)||LA185_0==27||LA185_0==33||LA185_0==36||LA185_0==40||LA185_0==70||LA185_0==99||LA185_0==101||LA185_0==103||LA185_0==105||LA185_0==108) ) {
                alt185=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }
            switch (alt185) {
                case 1 :
                    // InternalCal.g:8501:3: ( () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) ) )
                    {
                    // InternalCal.g:8501:3: ( () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) ) )
                    // InternalCal.g:8502:4: () ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) ) ( (lv_expression_2_0= ruleAstExpressionPostfix ) )
                    {
                    // InternalCal.g:8502:4: ()
                    // InternalCal.g:8503:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAstExpressionUnaryAccess().getAstExpressionUnaryAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalCal.g:8509:4: ( ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) ) )
                    // InternalCal.g:8510:5: ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) )
                    {
                    // InternalCal.g:8510:5: ( (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' ) )
                    // InternalCal.g:8511:6: (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' )
                    {
                    // InternalCal.g:8511:6: (lv_unaryOperator_1_1= '~' | lv_unaryOperator_1_2= '-' | lv_unaryOperator_1_3= 'not' | lv_unaryOperator_1_4= '#' | lv_unaryOperator_1_5= 'old' )
                    int alt184=5;
                    switch ( input.LA(1) ) {
                    case 92:
                        {
                        alt184=1;
                        }
                        break;
                    case 87:
                        {
                        alt184=2;
                        }
                        break;
                    case 93:
                        {
                        alt184=3;
                        }
                        break;
                    case 94:
                        {
                        alt184=4;
                        }
                        break;
                    case 95:
                        {
                        alt184=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 184, 0, input);

                        throw nvae;
                    }

                    switch (alt184) {
                        case 1 :
                            // InternalCal.g:8512:7: lv_unaryOperator_1_1= '~'
                            {
                            lv_unaryOperator_1_1=(Token)match(input,92,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_unaryOperator_1_1, grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorTildeKeyword_0_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstExpressionUnaryRule());
                              							}
                              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_1_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalCal.g:8523:7: lv_unaryOperator_1_2= '-'
                            {
                            lv_unaryOperator_1_2=(Token)match(input,87,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_unaryOperator_1_2, grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorHyphenMinusKeyword_0_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstExpressionUnaryRule());
                              							}
                              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_1_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalCal.g:8534:7: lv_unaryOperator_1_3= 'not'
                            {
                            lv_unaryOperator_1_3=(Token)match(input,93,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_unaryOperator_1_3, grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorNotKeyword_0_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstExpressionUnaryRule());
                              							}
                              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_1_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalCal.g:8545:7: lv_unaryOperator_1_4= '#'
                            {
                            lv_unaryOperator_1_4=(Token)match(input,94,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_unaryOperator_1_4, grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorNumberSignKeyword_0_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstExpressionUnaryRule());
                              							}
                              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_1_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalCal.g:8556:7: lv_unaryOperator_1_5= 'old'
                            {
                            lv_unaryOperator_1_5=(Token)match(input,95,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_unaryOperator_1_5, grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorOldKeyword_0_1_0_4());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstExpressionUnaryRule());
                              							}
                              							setWithLastConsumed(current, "unaryOperator", lv_unaryOperator_1_5, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalCal.g:8569:4: ( (lv_expression_2_0= ruleAstExpressionPostfix ) )
                    // InternalCal.g:8570:5: (lv_expression_2_0= ruleAstExpressionPostfix )
                    {
                    // InternalCal.g:8570:5: (lv_expression_2_0= ruleAstExpressionPostfix )
                    // InternalCal.g:8571:6: lv_expression_2_0= ruleAstExpressionPostfix
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionUnaryAccess().getExpressionAstExpressionPostfixParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleAstExpressionPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionUnaryRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpressionPostfix");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:8590:3: this_AstExpressionAssertion_3= ruleAstExpressionAssertion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionUnaryAccess().getAstExpressionAssertionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionAssertion_3=ruleAstExpressionAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionAssertion_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionUnary"


    // $ANTLR start "entryRuleAstExpressionAssertion"
    // InternalCal.g:8602:1: entryRuleAstExpressionAssertion returns [EObject current=null] : iv_ruleAstExpressionAssertion= ruleAstExpressionAssertion EOF ;
    public final EObject entryRuleAstExpressionAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionAssertion = null;


        try {
            // InternalCal.g:8602:63: (iv_ruleAstExpressionAssertion= ruleAstExpressionAssertion EOF )
            // InternalCal.g:8603:2: iv_ruleAstExpressionAssertion= ruleAstExpressionAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionAssertion=ruleAstExpressionAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionAssertion"


    // $ANTLR start "ruleAstExpressionAssertion"
    // InternalCal.g:8609:1: ruleAstExpressionAssertion returns [EObject current=null] : (this_AstExpressionPostfix_0= ruleAstExpressionPostfix ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) ) )* ) ;
    public final EObject ruleAstExpressionAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_AstExpressionPostfix_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8615:2: ( (this_AstExpressionPostfix_0= ruleAstExpressionPostfix ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) ) )* ) )
            // InternalCal.g:8616:2: (this_AstExpressionPostfix_0= ruleAstExpressionPostfix ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) ) )* )
            {
            // InternalCal.g:8616:2: (this_AstExpressionPostfix_0= ruleAstExpressionPostfix ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) ) )* )
            // InternalCal.g:8617:3: this_AstExpressionPostfix_0= ruleAstExpressionPostfix ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstExpressionAssertionAccess().getAstExpressionPostfixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_122);
            this_AstExpressionPostfix_0=ruleAstExpressionPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstExpressionPostfix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:8625:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) ) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==96) && (synpred2_InternalCal())) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalCal.g:8626:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleAstType ) )
            	    {
            	    // InternalCal.g:8626:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalCal.g:8627:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalCal.g:8633:5: ( () otherlv_2= 'as' )
            	    // InternalCal.g:8634:6: () otherlv_2= 'as'
            	    {
            	    // InternalCal.g:8634:6: ()
            	    // InternalCal.g:8635:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getAstExpressionAssertionAccess().getAstExpressionAssertionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,96,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getAstExpressionAssertionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalCal.g:8647:4: ( (lv_type_3_0= ruleAstType ) )
            	    // InternalCal.g:8648:5: (lv_type_3_0= ruleAstType )
            	    {
            	    // InternalCal.g:8648:5: (lv_type_3_0= ruleAstType )
            	    // InternalCal.g:8649:6: lv_type_3_0= ruleAstType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionAssertionAccess().getTypeAstTypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_type_3_0=ruleAstType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionAssertionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionAssertion"


    // $ANTLR start "entryRuleAstExpressionPostfix"
    // InternalCal.g:8671:1: entryRuleAstExpressionPostfix returns [EObject current=null] : iv_ruleAstExpressionPostfix= ruleAstExpressionPostfix EOF ;
    public final EObject entryRuleAstExpressionPostfix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionPostfix = null;


        try {
            // InternalCal.g:8671:61: (iv_ruleAstExpressionPostfix= ruleAstExpressionPostfix EOF )
            // InternalCal.g:8672:2: iv_ruleAstExpressionPostfix= ruleAstExpressionPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionPostfix=ruleAstExpressionPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionPostfix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionPostfix"


    // $ANTLR start "ruleAstExpressionPostfix"
    // InternalCal.g:8678:1: ruleAstExpressionPostfix returns [EObject current=null] : (this_AstExpressionList_0= ruleAstExpressionList | this_AstExpressionSymbolReference_1= ruleAstExpressionSymbolReference | this_AstExpressionIf_2= ruleAstExpressionIf | this_AstExpressionLambda_3= ruleAstExpressionLambda | this_AstExpressionProc_4= ruleAstExpressionProc | this_AstExpressionLet_5= ruleAstExpressionLet | this_AstExpressionMap_6= ruleAstExpressionMap | this_AstExpressionSet_7= ruleAstExpressionSet | this_AstExpressionCase_8= ruleAstExpressionCase | this_AstExpressionLiteral_9= ruleAstExpressionLiteral | (otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')' ) ) ;
    public final EObject ruleAstExpressionPostfix() throws RecognitionException {
        EObject current = null;

        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject this_AstExpressionList_0 = null;

        EObject this_AstExpressionSymbolReference_1 = null;

        EObject this_AstExpressionIf_2 = null;

        EObject this_AstExpressionLambda_3 = null;

        EObject this_AstExpressionProc_4 = null;

        EObject this_AstExpressionLet_5 = null;

        EObject this_AstExpressionMap_6 = null;

        EObject this_AstExpressionSet_7 = null;

        EObject this_AstExpressionCase_8 = null;

        EObject this_AstExpressionLiteral_9 = null;

        EObject this_AstExpression_11 = null;



        	enterRule();

        try {
            // InternalCal.g:8684:2: ( (this_AstExpressionList_0= ruleAstExpressionList | this_AstExpressionSymbolReference_1= ruleAstExpressionSymbolReference | this_AstExpressionIf_2= ruleAstExpressionIf | this_AstExpressionLambda_3= ruleAstExpressionLambda | this_AstExpressionProc_4= ruleAstExpressionProc | this_AstExpressionLet_5= ruleAstExpressionLet | this_AstExpressionMap_6= ruleAstExpressionMap | this_AstExpressionSet_7= ruleAstExpressionSet | this_AstExpressionCase_8= ruleAstExpressionCase | this_AstExpressionLiteral_9= ruleAstExpressionLiteral | (otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')' ) ) )
            // InternalCal.g:8685:2: (this_AstExpressionList_0= ruleAstExpressionList | this_AstExpressionSymbolReference_1= ruleAstExpressionSymbolReference | this_AstExpressionIf_2= ruleAstExpressionIf | this_AstExpressionLambda_3= ruleAstExpressionLambda | this_AstExpressionProc_4= ruleAstExpressionProc | this_AstExpressionLet_5= ruleAstExpressionLet | this_AstExpressionMap_6= ruleAstExpressionMap | this_AstExpressionSet_7= ruleAstExpressionSet | this_AstExpressionCase_8= ruleAstExpressionCase | this_AstExpressionLiteral_9= ruleAstExpressionLiteral | (otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')' ) )
            {
            // InternalCal.g:8685:2: (this_AstExpressionList_0= ruleAstExpressionList | this_AstExpressionSymbolReference_1= ruleAstExpressionSymbolReference | this_AstExpressionIf_2= ruleAstExpressionIf | this_AstExpressionLambda_3= ruleAstExpressionLambda | this_AstExpressionProc_4= ruleAstExpressionProc | this_AstExpressionLet_5= ruleAstExpressionLet | this_AstExpressionMap_6= ruleAstExpressionMap | this_AstExpressionSet_7= ruleAstExpressionSet | this_AstExpressionCase_8= ruleAstExpressionCase | this_AstExpressionLiteral_9= ruleAstExpressionLiteral | (otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')' ) )
            int alt187=11;
            switch ( input.LA(1) ) {
            case 36:
                {
                alt187=1;
                }
                break;
            case RULE_ID:
            case 108:
                {
                alt187=2;
                }
                break;
            case 33:
                {
                alt187=3;
                }
                break;
            case 103:
                {
                alt187=4;
                }
                break;
            case 105:
                {
                alt187=5;
                }
                break;
            case 101:
                {
                alt187=6;
                }
                break;
            case 99:
                {
                alt187=7;
                }
                break;
            case 40:
                {
                alt187=8;
                }
                break;
            case 70:
                {
                alt187=9;
                }
                break;
            case RULE_BOOL:
            case RULE_REAL:
            case RULE_DECIMAL:
            case RULE_OCTAL:
            case RULE_HEX:
            case RULE_STRING:
                {
                alt187=10;
                }
                break;
            case 27:
                {
                alt187=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }

            switch (alt187) {
                case 1 :
                    // InternalCal.g:8686:3: this_AstExpressionList_0= ruleAstExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionListParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionList_0=ruleAstExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionList_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:8695:3: this_AstExpressionSymbolReference_1= ruleAstExpressionSymbolReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionSymbolReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionSymbolReference_1=ruleAstExpressionSymbolReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionSymbolReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:8704:3: this_AstExpressionIf_2= ruleAstExpressionIf
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionIfParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionIf_2=ruleAstExpressionIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionIf_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCal.g:8713:3: this_AstExpressionLambda_3= ruleAstExpressionLambda
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionLambdaParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionLambda_3=ruleAstExpressionLambda();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionLambda_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCal.g:8722:3: this_AstExpressionProc_4= ruleAstExpressionProc
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionProcParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionProc_4=ruleAstExpressionProc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionProc_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCal.g:8731:3: this_AstExpressionLet_5= ruleAstExpressionLet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionLetParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionLet_5=ruleAstExpressionLet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionLet_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCal.g:8740:3: this_AstExpressionMap_6= ruleAstExpressionMap
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionMapParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionMap_6=ruleAstExpressionMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionMap_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalCal.g:8749:3: this_AstExpressionSet_7= ruleAstExpressionSet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionSetParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionSet_7=ruleAstExpressionSet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionSet_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalCal.g:8758:3: this_AstExpressionCase_8= ruleAstExpressionCase
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionCaseParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionCase_8=ruleAstExpressionCase();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionCase_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalCal.g:8767:3: this_AstExpressionLiteral_9= ruleAstExpressionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionLiteralParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionLiteral_9=ruleAstExpressionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionLiteral_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalCal.g:8776:3: (otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')' )
                    {
                    // InternalCal.g:8776:3: (otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')' )
                    // InternalCal.g:8777:4: otherlv_10= '(' this_AstExpression_11= ruleAstExpression otherlv_12= ')'
                    {
                    otherlv_10=(Token)match(input,27,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getAstExpressionPostfixAccess().getLeftParenthesisKeyword_10_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionParserRuleCall_10_1());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    this_AstExpression_11=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_AstExpression_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_12=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getAstExpressionPostfixAccess().getRightParenthesisKeyword_10_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionPostfix"


    // $ANTLR start "entryRuleAstExpressionSymbolReference"
    // InternalCal.g:8798:1: entryRuleAstExpressionSymbolReference returns [EObject current=null] : iv_ruleAstExpressionSymbolReference= ruleAstExpressionSymbolReference EOF ;
    public final EObject entryRuleAstExpressionSymbolReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionSymbolReference = null;


        try {
            // InternalCal.g:8798:69: (iv_ruleAstExpressionSymbolReference= ruleAstExpressionSymbolReference EOF )
            // InternalCal.g:8799:2: iv_ruleAstExpressionSymbolReference= ruleAstExpressionSymbolReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionSymbolReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionSymbolReference=ruleAstExpressionSymbolReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionSymbolReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionSymbolReference"


    // $ANTLR start "ruleAstExpressionSymbolReference"
    // InternalCal.g:8805:1: ruleAstExpressionSymbolReference returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) (otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ( (lv_member_5_0= ruleAstMemberAccess ) )* (otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) ) )? ( ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')' )? ) ;
    public final EObject ruleAstExpressionSymbolReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_ctor_7_0=null;
        Token lv_call_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indexes_3_0 = null;

        EObject lv_member_5_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_parameters_11_0 = null;



        	enterRule();

        try {
            // InternalCal.g:8811:2: ( ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) (otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ( (lv_member_5_0= ruleAstMemberAccess ) )* (otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) ) )? ( ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')' )? ) )
            // InternalCal.g:8812:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) (otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ( (lv_member_5_0= ruleAstMemberAccess ) )* (otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) ) )? ( ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')' )? )
            {
            // InternalCal.g:8812:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) (otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ( (lv_member_5_0= ruleAstMemberAccess ) )* (otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) ) )? ( ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')' )? )
            // InternalCal.g:8813:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (otherlv_1= RULE_ID ) ) (otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ( (lv_member_5_0= ruleAstMemberAccess ) )* (otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) ) )? ( ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')' )?
            {
            // InternalCal.g:8813:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==108) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // InternalCal.g:8814:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:8814:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    // InternalCal.g:8815:5: lv_annotations_0_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExpressionSymbolReferenceAccess().getAnnotationsAstAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_annotations_0_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExpressionSymbolReferenceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);

            // InternalCal.g:8832:3: ( (otherlv_1= RULE_ID ) )
            // InternalCal.g:8833:4: (otherlv_1= RULE_ID )
            {
            // InternalCal.g:8833:4: (otherlv_1= RULE_ID )
            // InternalCal.g:8834:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstExpressionSymbolReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getAstExpressionSymbolReferenceAccess().getSymbolAstVariableCrossReference_1_0());
              				
            }

            }


            }

            // InternalCal.g:8845:3: (otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']' )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==36) ) {
                    alt189=1;
                }


                switch (alt189) {
            	case 1 :
            	    // InternalCal.g:8846:4: otherlv_2= '[' ( (lv_indexes_3_0= ruleAstExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstExpressionSymbolReferenceAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:8850:4: ( (lv_indexes_3_0= ruleAstExpression ) )
            	    // InternalCal.g:8851:5: (lv_indexes_3_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:8851:5: (lv_indexes_3_0= ruleAstExpression )
            	    // InternalCal.g:8852:6: lv_indexes_3_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionSymbolReferenceAccess().getIndexesAstExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_indexes_3_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionSymbolReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indexes",
            	      							lv_indexes_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,37,FOLLOW_123); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getAstExpressionSymbolReferenceAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);

            // InternalCal.g:8874:3: ( (lv_member_5_0= ruleAstMemberAccess ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==24) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // InternalCal.g:8875:4: (lv_member_5_0= ruleAstMemberAccess )
            	    {
            	    // InternalCal.g:8875:4: (lv_member_5_0= ruleAstMemberAccess )
            	    // InternalCal.g:8876:5: lv_member_5_0= ruleAstMemberAccess
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExpressionSymbolReferenceAccess().getMemberAstMemberAccessParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_member_5_0=ruleAstMemberAccess();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExpressionSymbolReferenceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"member",
            	      						lv_member_5_0,
            	      						"streamblocks.eclipse.cal.Cal.AstMemberAccess");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);

            // InternalCal.g:8893:3: (otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==97) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalCal.g:8894:4: otherlv_6= '::' ( (lv_ctor_7_0= RULE_ID ) )
                    {
                    otherlv_6=(Token)match(input,97,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstExpressionSymbolReferenceAccess().getColonColonKeyword_4_0());
                      			
                    }
                    // InternalCal.g:8898:4: ( (lv_ctor_7_0= RULE_ID ) )
                    // InternalCal.g:8899:5: (lv_ctor_7_0= RULE_ID )
                    {
                    // InternalCal.g:8899:5: (lv_ctor_7_0= RULE_ID )
                    // InternalCal.g:8900:6: lv_ctor_7_0= RULE_ID
                    {
                    lv_ctor_7_0=(Token)match(input,RULE_ID,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ctor_7_0, grammarAccess.getAstExpressionSymbolReferenceAccess().getCtorIDTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAstExpressionSymbolReferenceRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"ctor",
                      							lv_ctor_7_0,
                      							"streamblocks.eclipse.cal.Cal.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalCal.g:8917:3: ( ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')' )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==27) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalCal.g:8918:4: ( (lv_call_8_0= '(' ) ) ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )? otherlv_12= ')'
                    {
                    // InternalCal.g:8918:4: ( (lv_call_8_0= '(' ) )
                    // InternalCal.g:8919:5: (lv_call_8_0= '(' )
                    {
                    // InternalCal.g:8919:5: (lv_call_8_0= '(' )
                    // InternalCal.g:8920:6: lv_call_8_0= '('
                    {
                    lv_call_8_0=(Token)match(input,27,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_call_8_0, grammarAccess.getAstExpressionSymbolReferenceAccess().getCallLeftParenthesisKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAstExpressionSymbolReferenceRule());
                      						}
                      						setWithLastConsumed(current, "call", true, "(");
                      					
                    }

                    }


                    }

                    // InternalCal.g:8932:4: ( ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )* )?
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( ((LA193_0>=RULE_ID && LA193_0<=RULE_STRING)||LA193_0==27||LA193_0==33||LA193_0==36||LA193_0==40||LA193_0==70||LA193_0==87||(LA193_0>=92 && LA193_0<=95)||LA193_0==99||LA193_0==101||LA193_0==103||LA193_0==105||LA193_0==108) ) {
                        alt193=1;
                    }
                    switch (alt193) {
                        case 1 :
                            // InternalCal.g:8933:5: ( (lv_parameters_9_0= ruleAstExpression ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )*
                            {
                            // InternalCal.g:8933:5: ( (lv_parameters_9_0= ruleAstExpression ) )
                            // InternalCal.g:8934:6: (lv_parameters_9_0= ruleAstExpression )
                            {
                            // InternalCal.g:8934:6: (lv_parameters_9_0= ruleAstExpression )
                            // InternalCal.g:8935:7: lv_parameters_9_0= ruleAstExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAstExpressionSymbolReferenceAccess().getParametersAstExpressionParserRuleCall_5_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_18);
                            lv_parameters_9_0=ruleAstExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAstExpressionSymbolReferenceRule());
                              							}
                              							add(
                              								current,
                              								"parameters",
                              								lv_parameters_9_0,
                              								"streamblocks.eclipse.cal.Cal.AstExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalCal.g:8952:5: (otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) ) )*
                            loop192:
                            do {
                                int alt192=2;
                                int LA192_0 = input.LA(1);

                                if ( (LA192_0==28) ) {
                                    alt192=1;
                                }


                                switch (alt192) {
                            	case 1 :
                            	    // InternalCal.g:8953:6: otherlv_10= ',' ( (lv_parameters_11_0= ruleAstExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_10, grammarAccess.getAstExpressionSymbolReferenceAccess().getCommaKeyword_5_1_1_0());
                            	      					
                            	    }
                            	    // InternalCal.g:8957:6: ( (lv_parameters_11_0= ruleAstExpression ) )
                            	    // InternalCal.g:8958:7: (lv_parameters_11_0= ruleAstExpression )
                            	    {
                            	    // InternalCal.g:8958:7: (lv_parameters_11_0= ruleAstExpression )
                            	    // InternalCal.g:8959:8: lv_parameters_11_0= ruleAstExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getAstExpressionSymbolReferenceAccess().getParametersAstExpressionParserRuleCall_5_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_18);
                            	    lv_parameters_11_0=ruleAstExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getAstExpressionSymbolReferenceRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"parameters",
                            	      									lv_parameters_11_0,
                            	      									"streamblocks.eclipse.cal.Cal.AstExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop192;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getAstExpressionSymbolReferenceAccess().getRightParenthesisKeyword_5_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionSymbolReference"


    // $ANTLR start "entryRuleAstExpressionIf"
    // InternalCal.g:8987:1: entryRuleAstExpressionIf returns [EObject current=null] : iv_ruleAstExpressionIf= ruleAstExpressionIf EOF ;
    public final EObject entryRuleAstExpressionIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionIf = null;


        try {
            // InternalCal.g:8987:56: (iv_ruleAstExpressionIf= ruleAstExpressionIf EOF )
            // InternalCal.g:8988:2: iv_ruleAstExpressionIf= ruleAstExpressionIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionIf=ruleAstExpressionIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionIf"


    // $ANTLR start "ruleAstExpressionIf"
    // InternalCal.g:8994:1: ruleAstExpressionIf returns [EObject current=null] : (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ( (lv_elsifs_4_0= ruleAstExpressionElsif ) )* otherlv_5= 'else' ( (lv_else_6_0= ruleAstExpression ) ) otherlv_7= 'end' ) ;
    public final EObject ruleAstExpressionIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_3_0 = null;

        EObject lv_elsifs_4_0 = null;

        EObject lv_else_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9000:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ( (lv_elsifs_4_0= ruleAstExpressionElsif ) )* otherlv_5= 'else' ( (lv_else_6_0= ruleAstExpression ) ) otherlv_7= 'end' ) )
            // InternalCal.g:9001:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ( (lv_elsifs_4_0= ruleAstExpressionElsif ) )* otherlv_5= 'else' ( (lv_else_6_0= ruleAstExpression ) ) otherlv_7= 'end' )
            {
            // InternalCal.g:9001:2: (otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ( (lv_elsifs_4_0= ruleAstExpressionElsif ) )* otherlv_5= 'else' ( (lv_else_6_0= ruleAstExpression ) ) otherlv_7= 'end' )
            // InternalCal.g:9002:3: otherlv_0= 'if' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ( (lv_elsifs_4_0= ruleAstExpressionElsif ) )* otherlv_5= 'else' ( (lv_else_6_0= ruleAstExpression ) ) otherlv_7= 'end'
            {
            otherlv_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionIfAccess().getIfKeyword_0());
              		
            }
            // InternalCal.g:9006:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:9007:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:9007:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:9008:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionIfAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionIfRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExpressionIfAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:9029:3: ( (lv_then_3_0= ruleAstExpression ) )
            // InternalCal.g:9030:4: (lv_then_3_0= ruleAstExpression )
            {
            // InternalCal.g:9030:4: (lv_then_3_0= ruleAstExpression )
            // InternalCal.g:9031:5: lv_then_3_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionIfAccess().getThenAstExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_125);
            lv_then_3_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionIfRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_3_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:9048:3: ( (lv_elsifs_4_0= ruleAstExpressionElsif ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==44) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalCal.g:9049:4: (lv_elsifs_4_0= ruleAstExpressionElsif )
            	    {
            	    // InternalCal.g:9049:4: (lv_elsifs_4_0= ruleAstExpressionElsif )
            	    // InternalCal.g:9050:5: lv_elsifs_4_0= ruleAstExpressionElsif
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExpressionIfAccess().getElsifsAstExpressionElsifParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_elsifs_4_0=ruleAstExpressionElsif();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExpressionIfRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elsifs",
            	      						lv_elsifs_4_0,
            	      						"streamblocks.eclipse.cal.Cal.AstExpressionElsif");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            otherlv_5=(Token)match(input,35,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstExpressionIfAccess().getElseKeyword_5());
              		
            }
            // InternalCal.g:9071:3: ( (lv_else_6_0= ruleAstExpression ) )
            // InternalCal.g:9072:4: (lv_else_6_0= ruleAstExpression )
            {
            // InternalCal.g:9072:4: (lv_else_6_0= ruleAstExpression )
            // InternalCal.g:9073:5: lv_else_6_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionIfAccess().getElseAstExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_else_6_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionIfRule());
              					}
              					set(
              						current,
              						"else",
              						lv_else_6_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstExpressionIfAccess().getEndKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionIf"


    // $ANTLR start "entryRuleAstExpressionElsif"
    // InternalCal.g:9098:1: entryRuleAstExpressionElsif returns [EObject current=null] : iv_ruleAstExpressionElsif= ruleAstExpressionElsif EOF ;
    public final EObject entryRuleAstExpressionElsif() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionElsif = null;


        try {
            // InternalCal.g:9098:59: (iv_ruleAstExpressionElsif= ruleAstExpressionElsif EOF )
            // InternalCal.g:9099:2: iv_ruleAstExpressionElsif= ruleAstExpressionElsif EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionElsifRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionElsif=ruleAstExpressionElsif();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionElsif; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionElsif"


    // $ANTLR start "ruleAstExpressionElsif"
    // InternalCal.g:9105:1: ruleAstExpressionElsif returns [EObject current=null] : (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ) ;
    public final EObject ruleAstExpressionElsif() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9111:2: ( (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) ) )
            // InternalCal.g:9112:2: (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) )
            {
            // InternalCal.g:9112:2: (otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) ) )
            // InternalCal.g:9113:3: otherlv_0= 'elsif' ( (lv_condition_1_0= ruleAstExpression ) ) otherlv_2= 'then' ( (lv_then_3_0= ruleAstExpression ) )
            {
            otherlv_0=(Token)match(input,44,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionElsifAccess().getElsifKeyword_0());
              		
            }
            // InternalCal.g:9117:3: ( (lv_condition_1_0= ruleAstExpression ) )
            // InternalCal.g:9118:4: (lv_condition_1_0= ruleAstExpression )
            {
            // InternalCal.g:9118:4: (lv_condition_1_0= ruleAstExpression )
            // InternalCal.g:9119:5: lv_condition_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionElsifAccess().getConditionAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_condition_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionElsifRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExpressionElsifAccess().getThenKeyword_2());
              		
            }
            // InternalCal.g:9140:3: ( (lv_then_3_0= ruleAstExpression ) )
            // InternalCal.g:9141:4: (lv_then_3_0= ruleAstExpression )
            {
            // InternalCal.g:9141:4: (lv_then_3_0= ruleAstExpression )
            // InternalCal.g:9142:5: lv_then_3_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionElsifAccess().getThenAstExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_then_3_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionElsifRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_3_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionElsif"


    // $ANTLR start "entryRuleAstExpressionList"
    // InternalCal.g:9163:1: entryRuleAstExpressionList returns [EObject current=null] : iv_ruleAstExpressionList= ruleAstExpressionList EOF ;
    public final EObject entryRuleAstExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionList = null;


        try {
            // InternalCal.g:9163:58: (iv_ruleAstExpressionList= ruleAstExpressionList EOF )
            // InternalCal.g:9164:2: iv_ruleAstExpressionList= ruleAstExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionList=ruleAstExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionList"


    // $ANTLR start "ruleAstExpressionList"
    // InternalCal.g:9170:1: ruleAstExpressionList returns [EObject current=null] : (otherlv_0= '[' ( (lv_expressions_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) ) )* (otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )* )? otherlv_8= ']' ) ;
    public final EObject ruleAstExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_expressions_1_0 = null;

        EObject lv_expressions_3_0 = null;

        EObject lv_generators_5_0 = null;

        EObject lv_generators_7_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9176:2: ( (otherlv_0= '[' ( (lv_expressions_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) ) )* (otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )* )? otherlv_8= ']' ) )
            // InternalCal.g:9177:2: (otherlv_0= '[' ( (lv_expressions_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) ) )* (otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )* )? otherlv_8= ']' )
            {
            // InternalCal.g:9177:2: (otherlv_0= '[' ( (lv_expressions_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) ) )* (otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )* )? otherlv_8= ']' )
            // InternalCal.g:9178:3: otherlv_0= '[' ( (lv_expressions_1_0= ruleAstExpression ) ) (otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) ) )* (otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )* )? otherlv_8= ']'
            {
            otherlv_0=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionListAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalCal.g:9182:3: ( (lv_expressions_1_0= ruleAstExpression ) )
            // InternalCal.g:9183:4: (lv_expressions_1_0= ruleAstExpression )
            {
            // InternalCal.g:9183:4: (lv_expressions_1_0= ruleAstExpression )
            // InternalCal.g:9184:5: lv_expressions_1_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionListAccess().getExpressionsAstExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_expressions_1_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionListRule());
              					}
              					add(
              						current,
              						"expressions",
              						lv_expressions_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:9201:3: (otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==28) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // InternalCal.g:9202:4: otherlv_2= ',' ( (lv_expressions_3_0= ruleAstExpression ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstExpressionListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:9206:4: ( (lv_expressions_3_0= ruleAstExpression ) )
            	    // InternalCal.g:9207:5: (lv_expressions_3_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:9207:5: (lv_expressions_3_0= ruleAstExpression )
            	    // InternalCal.g:9208:6: lv_expressions_3_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstExpressionListAccess().getExpressionsAstExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_expressions_3_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);

            // InternalCal.g:9226:3: (otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )* )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==18) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalCal.g:9227:4: otherlv_4= ':' ( (lv_generators_5_0= ruleAstGenerator ) ) (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )*
                    {
                    otherlv_4=(Token)match(input,18,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstExpressionListAccess().getColonKeyword_3_0());
                      			
                    }
                    // InternalCal.g:9231:4: ( (lv_generators_5_0= ruleAstGenerator ) )
                    // InternalCal.g:9232:5: (lv_generators_5_0= ruleAstGenerator )
                    {
                    // InternalCal.g:9232:5: (lv_generators_5_0= ruleAstGenerator )
                    // InternalCal.g:9233:6: lv_generators_5_0= ruleAstGenerator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionListAccess().getGeneratorsAstGeneratorParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_generators_5_0=ruleAstGenerator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionListRule());
                      						}
                      						add(
                      							current,
                      							"generators",
                      							lv_generators_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstGenerator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:9250:4: (otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) ) )*
                    loop197:
                    do {
                        int alt197=2;
                        int LA197_0 = input.LA(1);

                        if ( (LA197_0==28) ) {
                            alt197=1;
                        }


                        switch (alt197) {
                    	case 1 :
                    	    // InternalCal.g:9251:5: otherlv_6= ',' ( (lv_generators_7_0= ruleAstGenerator ) )
                    	    {
                    	    otherlv_6=(Token)match(input,28,FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getAstExpressionListAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:9255:5: ( (lv_generators_7_0= ruleAstGenerator ) )
                    	    // InternalCal.g:9256:6: (lv_generators_7_0= ruleAstGenerator )
                    	    {
                    	    // InternalCal.g:9256:6: (lv_generators_7_0= ruleAstGenerator )
                    	    // InternalCal.g:9257:7: lv_generators_7_0= ruleAstGenerator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionListAccess().getGeneratorsAstGeneratorParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_94);
                    	    lv_generators_7_0=ruleAstGenerator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"generators",
                    	      								lv_generators_7_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstGenerator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop197;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstExpressionListAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionList"


    // $ANTLR start "entryRuleAstGenerator"
    // InternalCal.g:9284:1: entryRuleAstGenerator returns [EObject current=null] : iv_ruleAstGenerator= ruleAstGenerator EOF ;
    public final EObject entryRuleAstGenerator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstGenerator = null;


        try {
            // InternalCal.g:9284:53: (iv_ruleAstGenerator= ruleAstGenerator EOF )
            // InternalCal.g:9285:2: iv_ruleAstGenerator= ruleAstGenerator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstGeneratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstGenerator=ruleAstGenerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstGenerator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstGenerator"


    // $ANTLR start "ruleAstGenerator"
    // InternalCal.g:9291:1: ruleAstGenerator returns [EObject current=null] : (otherlv_0= 'for' ( (lv_variable_1_0= ruleAstVariableDeclaration ) ) otherlv_2= 'in' ( (lv_expression_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) ) )* ) ;
    public final EObject ruleAstGenerator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_variable_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_filter_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9297:2: ( (otherlv_0= 'for' ( (lv_variable_1_0= ruleAstVariableDeclaration ) ) otherlv_2= 'in' ( (lv_expression_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) ) )* ) )
            // InternalCal.g:9298:2: (otherlv_0= 'for' ( (lv_variable_1_0= ruleAstVariableDeclaration ) ) otherlv_2= 'in' ( (lv_expression_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) ) )* )
            {
            // InternalCal.g:9298:2: (otherlv_0= 'for' ( (lv_variable_1_0= ruleAstVariableDeclaration ) ) otherlv_2= 'in' ( (lv_expression_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) ) )* )
            // InternalCal.g:9299:3: otherlv_0= 'for' ( (lv_variable_1_0= ruleAstVariableDeclaration ) ) otherlv_2= 'in' ( (lv_expression_3_0= ruleAstExpression ) ) (otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) ) )*
            {
            otherlv_0=(Token)match(input,98,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstGeneratorAccess().getForKeyword_0());
              		
            }
            // InternalCal.g:9303:3: ( (lv_variable_1_0= ruleAstVariableDeclaration ) )
            // InternalCal.g:9304:4: (lv_variable_1_0= ruleAstVariableDeclaration )
            {
            // InternalCal.g:9304:4: (lv_variable_1_0= ruleAstVariableDeclaration )
            // InternalCal.g:9305:5: lv_variable_1_0= ruleAstVariableDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstGeneratorAccess().getVariableAstVariableDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_100);
            lv_variable_1_0=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstGeneratorRule());
              					}
              					set(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,67,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstGeneratorAccess().getInKeyword_2());
              		
            }
            // InternalCal.g:9326:3: ( (lv_expression_3_0= ruleAstExpression ) )
            // InternalCal.g:9327:4: (lv_expression_3_0= ruleAstExpression )
            {
            // InternalCal.g:9327:4: (lv_expression_3_0= ruleAstExpression )
            // InternalCal.g:9328:5: lv_expression_3_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstGeneratorAccess().getExpressionAstExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_126);
            lv_expression_3_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstGeneratorRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:9345:3: (otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==28) ) {
                    int LA199_2 = input.LA(2);

                    if ( ((LA199_2>=RULE_ID && LA199_2<=RULE_STRING)||LA199_2==27||LA199_2==33||LA199_2==36||LA199_2==40||LA199_2==70||LA199_2==87||(LA199_2>=92 && LA199_2<=95)||LA199_2==99||LA199_2==101||LA199_2==103||LA199_2==105||LA199_2==108) ) {
                        alt199=1;
                    }


                }


                switch (alt199) {
            	case 1 :
            	    // InternalCal.g:9346:4: otherlv_4= ',' ( (lv_filter_5_0= ruleAstExpression ) )
            	    {
            	    otherlv_4=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getAstGeneratorAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalCal.g:9350:4: ( (lv_filter_5_0= ruleAstExpression ) )
            	    // InternalCal.g:9351:5: (lv_filter_5_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:9351:5: (lv_filter_5_0= ruleAstExpression )
            	    // InternalCal.g:9352:6: lv_filter_5_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstGeneratorAccess().getFilterAstExpressionParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_filter_5_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstGeneratorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"filter",
            	      							lv_filter_5_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstGenerator"


    // $ANTLR start "entryRuleAstExpressionSet"
    // InternalCal.g:9374:1: entryRuleAstExpressionSet returns [EObject current=null] : iv_ruleAstExpressionSet= ruleAstExpressionSet EOF ;
    public final EObject entryRuleAstExpressionSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionSet = null;


        try {
            // InternalCal.g:9374:57: (iv_ruleAstExpressionSet= ruleAstExpressionSet EOF )
            // InternalCal.g:9375:2: iv_ruleAstExpressionSet= ruleAstExpressionSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionSetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionSet=ruleAstExpressionSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionSet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionSet"


    // $ANTLR start "ruleAstExpressionSet"
    // InternalCal.g:9381:1: ruleAstExpressionSet returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) ) )? (otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) ) )? otherlv_7= '}' ) ;
    public final EObject ruleAstExpressionSet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_exprs_2_0 = null;

        EObject lv_exprs_4_0 = null;

        EObject lv_generator_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9387:2: ( ( () otherlv_1= '{' ( ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) ) )? (otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) ) )? otherlv_7= '}' ) )
            // InternalCal.g:9388:2: ( () otherlv_1= '{' ( ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) ) )? (otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) ) )? otherlv_7= '}' )
            {
            // InternalCal.g:9388:2: ( () otherlv_1= '{' ( ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) ) )? (otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) ) )? otherlv_7= '}' )
            // InternalCal.g:9389:3: () otherlv_1= '{' ( ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) ) )? (otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) ) )? otherlv_7= '}'
            {
            // InternalCal.g:9389:3: ()
            // InternalCal.g:9390:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstExpressionSetAccess().getAstExpressionSetAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,40,FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstExpressionSetAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCal.g:9400:3: ( ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) ) )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( ((LA200_0>=RULE_ID && LA200_0<=RULE_STRING)||LA200_0==27||LA200_0==33||LA200_0==36||LA200_0==40||LA200_0==70||LA200_0==87||(LA200_0>=92 && LA200_0<=95)||LA200_0==99||LA200_0==101||LA200_0==103||LA200_0==105||LA200_0==108) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // InternalCal.g:9401:4: ( (lv_exprs_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) )
                    {
                    // InternalCal.g:9401:4: ( (lv_exprs_2_0= ruleAstExpression ) )
                    // InternalCal.g:9402:5: (lv_exprs_2_0= ruleAstExpression )
                    {
                    // InternalCal.g:9402:5: (lv_exprs_2_0= ruleAstExpression )
                    // InternalCal.g:9403:6: lv_exprs_2_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionSetAccess().getExprsAstExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_128);
                    lv_exprs_2_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionSetRule());
                      						}
                      						add(
                      							current,
                      							"exprs",
                      							lv_exprs_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:9420:4: (otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) ) )
                    // InternalCal.g:9421:5: otherlv_3= ',' ( (lv_exprs_4_0= ruleAstExpression ) )
                    {
                    otherlv_3=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getAstExpressionSetAccess().getCommaKeyword_2_1_0());
                      				
                    }
                    // InternalCal.g:9425:5: ( (lv_exprs_4_0= ruleAstExpression ) )
                    // InternalCal.g:9426:6: (lv_exprs_4_0= ruleAstExpression )
                    {
                    // InternalCal.g:9426:6: (lv_exprs_4_0= ruleAstExpression )
                    // InternalCal.g:9427:7: lv_exprs_4_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAstExpressionSetAccess().getExprsAstExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_129);
                    lv_exprs_4_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAstExpressionSetRule());
                      							}
                      							add(
                      								current,
                      								"exprs",
                      								lv_exprs_4_0,
                      								"streamblocks.eclipse.cal.Cal.AstExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalCal.g:9446:3: (otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==18) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalCal.g:9447:4: otherlv_5= ':' ( (lv_generator_6_0= ruleAstGenerator ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAstExpressionSetAccess().getColonKeyword_3_0());
                      			
                    }
                    // InternalCal.g:9451:4: ( (lv_generator_6_0= ruleAstGenerator ) )
                    // InternalCal.g:9452:5: (lv_generator_6_0= ruleAstGenerator )
                    {
                    // InternalCal.g:9452:5: (lv_generator_6_0= ruleAstGenerator )
                    // InternalCal.g:9453:6: lv_generator_6_0= ruleAstGenerator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionSetAccess().getGeneratorAstGeneratorParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_130);
                    lv_generator_6_0=ruleAstGenerator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionSetRule());
                      						}
                      						set(
                      							current,
                      							"generator",
                      							lv_generator_6_0,
                      							"streamblocks.eclipse.cal.Cal.AstGenerator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstExpressionSetAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionSet"


    // $ANTLR start "entryRuleAstExpressionMap"
    // InternalCal.g:9479:1: entryRuleAstExpressionMap returns [EObject current=null] : iv_ruleAstExpressionMap= ruleAstExpressionMap EOF ;
    public final EObject entryRuleAstExpressionMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionMap = null;


        try {
            // InternalCal.g:9479:57: (iv_ruleAstExpressionMap= ruleAstExpressionMap EOF )
            // InternalCal.g:9480:2: iv_ruleAstExpressionMap= ruleAstExpressionMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionMap=ruleAstExpressionMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionMap"


    // $ANTLR start "ruleAstExpressionMap"
    // InternalCal.g:9486:1: ruleAstExpressionMap returns [EObject current=null] : ( () otherlv_1= 'map' otherlv_2= '{' ( ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )* )? (otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) ) )? otherlv_8= '}' ) ;
    public final EObject ruleAstExpressionMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_mappings_3_0 = null;

        EObject lv_mappings_5_0 = null;

        EObject lv_generator_7_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9492:2: ( ( () otherlv_1= 'map' otherlv_2= '{' ( ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )* )? (otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) ) )? otherlv_8= '}' ) )
            // InternalCal.g:9493:2: ( () otherlv_1= 'map' otherlv_2= '{' ( ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )* )? (otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) ) )? otherlv_8= '}' )
            {
            // InternalCal.g:9493:2: ( () otherlv_1= 'map' otherlv_2= '{' ( ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )* )? (otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) ) )? otherlv_8= '}' )
            // InternalCal.g:9494:3: () otherlv_1= 'map' otherlv_2= '{' ( ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )* )? (otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) ) )? otherlv_8= '}'
            {
            // InternalCal.g:9494:3: ()
            // InternalCal.g:9495:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstExpressionMapAccess().getAstExpressionMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,99,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstExpressionMapAccess().getMapKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,40,FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExpressionMapAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalCal.g:9509:3: ( ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )* )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( ((LA203_0>=RULE_ID && LA203_0<=RULE_STRING)||LA203_0==27||LA203_0==33||LA203_0==36||LA203_0==40||LA203_0==70||LA203_0==87||(LA203_0>=92 && LA203_0<=95)||LA203_0==99||LA203_0==101||LA203_0==103||LA203_0==105||LA203_0==108) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // InternalCal.g:9510:4: ( (lv_mappings_3_0= ruleMapping ) ) (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )*
                    {
                    // InternalCal.g:9510:4: ( (lv_mappings_3_0= ruleMapping ) )
                    // InternalCal.g:9511:5: (lv_mappings_3_0= ruleMapping )
                    {
                    // InternalCal.g:9511:5: (lv_mappings_3_0= ruleMapping )
                    // InternalCal.g:9512:6: lv_mappings_3_0= ruleMapping
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionMapAccess().getMappingsMappingParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_132);
                    lv_mappings_3_0=ruleMapping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionMapRule());
                      						}
                      						add(
                      							current,
                      							"mappings",
                      							lv_mappings_3_0,
                      							"streamblocks.eclipse.cal.Cal.Mapping");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:9529:4: (otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) ) )*
                    loop202:
                    do {
                        int alt202=2;
                        int LA202_0 = input.LA(1);

                        if ( (LA202_0==28) ) {
                            alt202=1;
                        }


                        switch (alt202) {
                    	case 1 :
                    	    // InternalCal.g:9530:5: otherlv_4= ',' ( (lv_mappings_5_0= ruleMapping ) )
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAstExpressionMapAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:9534:5: ( (lv_mappings_5_0= ruleMapping ) )
                    	    // InternalCal.g:9535:6: (lv_mappings_5_0= ruleMapping )
                    	    {
                    	    // InternalCal.g:9535:6: (lv_mappings_5_0= ruleMapping )
                    	    // InternalCal.g:9536:7: lv_mappings_5_0= ruleMapping
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionMapAccess().getMappingsMappingParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_132);
                    	    lv_mappings_5_0=ruleMapping();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"mappings",
                    	      								lv_mappings_5_0,
                    	      								"streamblocks.eclipse.cal.Cal.Mapping");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop202;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:9555:3: (otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) ) )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==18) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // InternalCal.g:9556:4: otherlv_6= ':' ( (lv_generator_7_0= ruleAstGenerator ) )
                    {
                    otherlv_6=(Token)match(input,18,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstExpressionMapAccess().getColonKeyword_4_0());
                      			
                    }
                    // InternalCal.g:9560:4: ( (lv_generator_7_0= ruleAstGenerator ) )
                    // InternalCal.g:9561:5: (lv_generator_7_0= ruleAstGenerator )
                    {
                    // InternalCal.g:9561:5: (lv_generator_7_0= ruleAstGenerator )
                    // InternalCal.g:9562:6: lv_generator_7_0= ruleAstGenerator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionMapAccess().getGeneratorAstGeneratorParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_130);
                    lv_generator_7_0=ruleAstGenerator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionMapRule());
                      						}
                      						set(
                      							current,
                      							"generator",
                      							lv_generator_7_0,
                      							"streamblocks.eclipse.cal.Cal.AstGenerator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAstExpressionMapAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionMap"


    // $ANTLR start "entryRuleMapping"
    // InternalCal.g:9588:1: entryRuleMapping returns [EObject current=null] : iv_ruleMapping= ruleMapping EOF ;
    public final EObject entryRuleMapping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapping = null;


        try {
            // InternalCal.g:9588:48: (iv_ruleMapping= ruleMapping EOF )
            // InternalCal.g:9589:2: iv_ruleMapping= ruleMapping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapping=ruleMapping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapping"


    // $ANTLR start "ruleMapping"
    // InternalCal.g:9595:1: ruleMapping returns [EObject current=null] : ( ( (lv_key_0_0= ruleAstExpression ) ) otherlv_1= '->' ( (lv_value_2_0= ruleAstExpression ) ) ) ;
    public final EObject ruleMapping() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_key_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9601:2: ( ( ( (lv_key_0_0= ruleAstExpression ) ) otherlv_1= '->' ( (lv_value_2_0= ruleAstExpression ) ) ) )
            // InternalCal.g:9602:2: ( ( (lv_key_0_0= ruleAstExpression ) ) otherlv_1= '->' ( (lv_value_2_0= ruleAstExpression ) ) )
            {
            // InternalCal.g:9602:2: ( ( (lv_key_0_0= ruleAstExpression ) ) otherlv_1= '->' ( (lv_value_2_0= ruleAstExpression ) ) )
            // InternalCal.g:9603:3: ( (lv_key_0_0= ruleAstExpression ) ) otherlv_1= '->' ( (lv_value_2_0= ruleAstExpression ) )
            {
            // InternalCal.g:9603:3: ( (lv_key_0_0= ruleAstExpression ) )
            // InternalCal.g:9604:4: (lv_key_0_0= ruleAstExpression )
            {
            // InternalCal.g:9604:4: (lv_key_0_0= ruleAstExpression )
            // InternalCal.g:9605:5: lv_key_0_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingAccess().getKeyAstExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_133);
            lv_key_0_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,100,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMappingAccess().getHyphenMinusGreaterThanSignKeyword_1());
              		
            }
            // InternalCal.g:9626:3: ( (lv_value_2_0= ruleAstExpression ) )
            // InternalCal.g:9627:4: (lv_value_2_0= ruleAstExpression )
            {
            // InternalCal.g:9627:4: (lv_value_2_0= ruleAstExpression )
            // InternalCal.g:9628:5: lv_value_2_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingAccess().getValueAstExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapping"


    // $ANTLR start "entryRuleAstExpressionLet"
    // InternalCal.g:9649:1: entryRuleAstExpressionLet returns [EObject current=null] : iv_ruleAstExpressionLet= ruleAstExpressionLet EOF ;
    public final EObject entryRuleAstExpressionLet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionLet = null;


        try {
            // InternalCal.g:9649:57: (iv_ruleAstExpressionLet= ruleAstExpressionLet EOF )
            // InternalCal.g:9650:2: iv_ruleAstExpressionLet= ruleAstExpressionLet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionLetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionLet=ruleAstExpressionLet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionLet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionLet"


    // $ANTLR start "ruleAstExpressionLet"
    // InternalCal.g:9656:1: ruleAstExpressionLet returns [EObject current=null] : (otherlv_0= 'let' ( ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_4= ':' ( (lv_expr_5_0= ruleAstExpression ) ) (otherlv_6= 'end' | otherlv_7= 'endlet' ) ) ;
    public final EObject ruleAstExpressionLet() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_variables_1_0 = null;

        EObject lv_variables_3_0 = null;

        EObject lv_expr_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9662:2: ( (otherlv_0= 'let' ( ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_4= ':' ( (lv_expr_5_0= ruleAstExpression ) ) (otherlv_6= 'end' | otherlv_7= 'endlet' ) ) )
            // InternalCal.g:9663:2: (otherlv_0= 'let' ( ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_4= ':' ( (lv_expr_5_0= ruleAstExpression ) ) (otherlv_6= 'end' | otherlv_7= 'endlet' ) )
            {
            // InternalCal.g:9663:2: (otherlv_0= 'let' ( ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_4= ':' ( (lv_expr_5_0= ruleAstExpression ) ) (otherlv_6= 'end' | otherlv_7= 'endlet' ) )
            // InternalCal.g:9664:3: otherlv_0= 'let' ( ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_4= ':' ( (lv_expr_5_0= ruleAstExpression ) ) (otherlv_6= 'end' | otherlv_7= 'endlet' )
            {
            otherlv_0=(Token)match(input,101,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionLetAccess().getLetKeyword_0());
              		
            }
            // InternalCal.g:9668:3: ( ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==RULE_ID||LA206_0==36||LA206_0==99||LA206_0==108||(LA206_0>=110 && LA206_0<=117)) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalCal.g:9669:4: ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) ) (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:9669:4: ( (lv_variables_1_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:9670:5: (lv_variables_1_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:9670:5: (lv_variables_1_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:9671:6: lv_variables_1_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionLetAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_variables_1_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionLetRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_1_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:9688:4: (otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop205:
                    do {
                        int alt205=2;
                        int LA205_0 = input.LA(1);

                        if ( (LA205_0==28) ) {
                            alt205=1;
                        }


                        switch (alt205) {
                    	case 1 :
                    	    // InternalCal.g:9689:5: otherlv_2= ',' ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_2=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getAstExpressionLetAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:9693:5: ( (lv_variables_3_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:9694:6: (lv_variables_3_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:9694:6: (lv_variables_3_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:9695:7: lv_variables_3_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionLetAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_variables_3_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionLetRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_3_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop205;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,18,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstExpressionLetAccess().getColonKeyword_2());
              		
            }
            // InternalCal.g:9718:3: ( (lv_expr_5_0= ruleAstExpression ) )
            // InternalCal.g:9719:4: (lv_expr_5_0= ruleAstExpression )
            {
            // InternalCal.g:9719:4: (lv_expr_5_0= ruleAstExpression )
            // InternalCal.g:9720:5: lv_expr_5_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionLetAccess().getExprAstExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_134);
            lv_expr_5_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionLetRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_5_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:9737:3: (otherlv_6= 'end' | otherlv_7= 'endlet' )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==19) ) {
                alt207=1;
            }
            else if ( (LA207_0==102) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }
            switch (alt207) {
                case 1 :
                    // InternalCal.g:9738:4: otherlv_6= 'end'
                    {
                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstExpressionLetAccess().getEndKeyword_4_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:9743:4: otherlv_7= 'endlet'
                    {
                    otherlv_7=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAstExpressionLetAccess().getEndletKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionLet"


    // $ANTLR start "entryRuleAstExpressionLambda"
    // InternalCal.g:9752:1: entryRuleAstExpressionLambda returns [EObject current=null] : iv_ruleAstExpressionLambda= ruleAstExpressionLambda EOF ;
    public final EObject entryRuleAstExpressionLambda() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionLambda = null;


        try {
            // InternalCal.g:9752:60: (iv_ruleAstExpressionLambda= ruleAstExpressionLambda EOF )
            // InternalCal.g:9753:2: iv_ruleAstExpressionLambda= ruleAstExpressionLambda EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionLambdaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionLambda=ruleAstExpressionLambda();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionLambda; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionLambda"


    // $ANTLR start "ruleAstExpressionLambda"
    // InternalCal.g:9759:1: ruleAstExpressionLambda returns [EObject current=null] : (otherlv_0= 'lambda' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' otherlv_7= '-->' ( (lv_type_8_0= ruleAstType ) ) (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_13= ':' ( (lv_expression_14_0= ruleAstExpression ) ) (otherlv_15= 'end' | otherlv_16= 'endlambda' ) ) ;
    public final EObject ruleAstExpressionLambda() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_variables_10_0 = null;

        EObject lv_variables_12_0 = null;

        EObject lv_expression_14_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9765:2: ( (otherlv_0= 'lambda' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' otherlv_7= '-->' ( (lv_type_8_0= ruleAstType ) ) (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_13= ':' ( (lv_expression_14_0= ruleAstExpression ) ) (otherlv_15= 'end' | otherlv_16= 'endlambda' ) ) )
            // InternalCal.g:9766:2: (otherlv_0= 'lambda' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' otherlv_7= '-->' ( (lv_type_8_0= ruleAstType ) ) (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_13= ':' ( (lv_expression_14_0= ruleAstExpression ) ) (otherlv_15= 'end' | otherlv_16= 'endlambda' ) )
            {
            // InternalCal.g:9766:2: (otherlv_0= 'lambda' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' otherlv_7= '-->' ( (lv_type_8_0= ruleAstType ) ) (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_13= ':' ( (lv_expression_14_0= ruleAstExpression ) ) (otherlv_15= 'end' | otherlv_16= 'endlambda' ) )
            // InternalCal.g:9767:3: otherlv_0= 'lambda' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' otherlv_7= '-->' ( (lv_type_8_0= ruleAstType ) ) (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )? otherlv_13= ':' ( (lv_expression_14_0= ruleAstExpression ) ) (otherlv_15= 'end' | otherlv_16= 'endlambda' )
            {
            otherlv_0=(Token)match(input,103,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionLambdaAccess().getLambdaKeyword_0());
              		
            }
            // InternalCal.g:9771:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalCal.g:9772:4: (lv_name_1_0= RULE_ID )
            {
            // InternalCal.g:9772:4: (lv_name_1_0= RULE_ID )
            // InternalCal.g:9773:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAstExpressionLambdaAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstExpressionLambdaRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExpressionLambdaAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCal.g:9793:3: ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==RULE_ID||LA209_0==36||LA209_0==99||LA209_0==108||(LA209_0>=110 && LA209_0<=117)) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalCal.g:9794:4: ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:9794:4: ( (lv_parameters_3_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:9795:5: (lv_parameters_3_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:9795:5: (lv_parameters_3_0= ruleAstVariableDeclaration )
                    // InternalCal.g:9796:6: lv_parameters_3_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionLambdaAccess().getParametersAstVariableDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_3_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionLambdaRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_3_0,
                      							"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:9813:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )*
                    loop208:
                    do {
                        int alt208=2;
                        int LA208_0 = input.LA(1);

                        if ( (LA208_0==28) ) {
                            alt208=1;
                        }


                        switch (alt208) {
                    	case 1 :
                    	    // InternalCal.g:9814:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAstExpressionLambdaAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:9818:5: ( (lv_parameters_5_0= ruleAstVariableDeclaration ) )
                    	    // InternalCal.g:9819:6: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    	    {
                    	    // InternalCal.g:9819:6: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    	    // InternalCal.g:9820:7: lv_parameters_5_0= ruleAstVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionLambdaAccess().getParametersAstVariableDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_5_0=ruleAstVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionLambdaRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_5_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop208;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,29,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstExpressionLambdaAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstExpressionLambdaAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_5());
              		
            }
            // InternalCal.g:9847:3: ( (lv_type_8_0= ruleAstType ) )
            // InternalCal.g:9848:4: (lv_type_8_0= ruleAstType )
            {
            // InternalCal.g:9848:4: (lv_type_8_0= ruleAstType )
            // InternalCal.g:9849:5: lv_type_8_0= ruleAstType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionLambdaAccess().getTypeAstTypeParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_135);
            lv_type_8_0=ruleAstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionLambdaRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_8_0,
              						"streamblocks.eclipse.cal.Cal.AstType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:9866:3: (otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==31) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalCal.g:9867:4: otherlv_9= 'var' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_9=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getAstExpressionLambdaAccess().getVarKeyword_7_0());
                      			
                    }
                    // InternalCal.g:9871:4: ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:9872:5: (lv_variables_10_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:9872:5: (lv_variables_10_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:9873:6: lv_variables_10_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionLambdaAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_variables_10_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionLambdaRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_10_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:9890:4: (otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop210:
                    do {
                        int alt210=2;
                        int LA210_0 = input.LA(1);

                        if ( (LA210_0==28) ) {
                            alt210=1;
                        }


                        switch (alt210) {
                    	case 1 :
                    	    // InternalCal.g:9891:5: otherlv_11= ',' ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_11=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_11, grammarAccess.getAstExpressionLambdaAccess().getCommaKeyword_7_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:9895:5: ( (lv_variables_12_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:9896:6: (lv_variables_12_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:9896:6: (lv_variables_12_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:9897:7: lv_variables_12_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionLambdaAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_variables_12_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionLambdaRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_12_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop210;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,18,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getAstExpressionLambdaAccess().getColonKeyword_8());
              		
            }
            // InternalCal.g:9920:3: ( (lv_expression_14_0= ruleAstExpression ) )
            // InternalCal.g:9921:4: (lv_expression_14_0= ruleAstExpression )
            {
            // InternalCal.g:9921:4: (lv_expression_14_0= ruleAstExpression )
            // InternalCal.g:9922:5: lv_expression_14_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionLambdaAccess().getExpressionAstExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_136);
            lv_expression_14_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionLambdaRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_14_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:9939:3: (otherlv_15= 'end' | otherlv_16= 'endlambda' )
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==19) ) {
                alt212=1;
            }
            else if ( (LA212_0==104) ) {
                alt212=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;
            }
            switch (alt212) {
                case 1 :
                    // InternalCal.g:9940:4: otherlv_15= 'end'
                    {
                    otherlv_15=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getAstExpressionLambdaAccess().getEndKeyword_10_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:9945:4: otherlv_16= 'endlambda'
                    {
                    otherlv_16=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getAstExpressionLambdaAccess().getEndlambdaKeyword_10_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionLambda"


    // $ANTLR start "entryRuleAstExpressionProc"
    // InternalCal.g:9954:1: entryRuleAstExpressionProc returns [EObject current=null] : iv_ruleAstExpressionProc= ruleAstExpressionProc EOF ;
    public final EObject entryRuleAstExpressionProc() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionProc = null;


        try {
            // InternalCal.g:9954:58: (iv_ruleAstExpressionProc= ruleAstExpressionProc EOF )
            // InternalCal.g:9955:2: iv_ruleAstExpressionProc= ruleAstExpressionProc EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionProcRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionProc=ruleAstExpressionProc();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionProc; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionProc"


    // $ANTLR start "ruleAstExpressionProc"
    // InternalCal.g:9961:1: ruleAstExpressionProc returns [EObject current=null] : (otherlv_0= 'proc' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' (otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_11= 'begin' | otherlv_12= 'do' ) ( (lv_statements_13_0= ruleAstStatement ) )* (otherlv_14= 'end' | otherlv_15= 'endproc' ) ) ;
    public final EObject ruleAstExpressionProc() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_variables_8_0 = null;

        EObject lv_variables_10_0 = null;

        EObject lv_statements_13_0 = null;



        	enterRule();

        try {
            // InternalCal.g:9967:2: ( (otherlv_0= 'proc' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' (otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_11= 'begin' | otherlv_12= 'do' ) ( (lv_statements_13_0= ruleAstStatement ) )* (otherlv_14= 'end' | otherlv_15= 'endproc' ) ) )
            // InternalCal.g:9968:2: (otherlv_0= 'proc' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' (otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_11= 'begin' | otherlv_12= 'do' ) ( (lv_statements_13_0= ruleAstStatement ) )* (otherlv_14= 'end' | otherlv_15= 'endproc' ) )
            {
            // InternalCal.g:9968:2: (otherlv_0= 'proc' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' (otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_11= 'begin' | otherlv_12= 'do' ) ( (lv_statements_13_0= ruleAstStatement ) )* (otherlv_14= 'end' | otherlv_15= 'endproc' ) )
            // InternalCal.g:9969:3: otherlv_0= 'proc' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )? otherlv_6= ')' (otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )* )? (otherlv_11= 'begin' | otherlv_12= 'do' ) ( (lv_statements_13_0= ruleAstStatement ) )* (otherlv_14= 'end' | otherlv_15= 'endproc' )
            {
            otherlv_0=(Token)match(input,105,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionProcAccess().getProcKeyword_0());
              		
            }
            // InternalCal.g:9973:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalCal.g:9974:4: (lv_name_1_0= RULE_ID )
            {
            // InternalCal.g:9974:4: (lv_name_1_0= RULE_ID )
            // InternalCal.g:9975:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAstExpressionProcAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstExpressionProcRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExpressionProcAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCal.g:9995:3: ( ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )* )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==RULE_ID||LA214_0==36||LA214_0==99||LA214_0==108||(LA214_0>=110 && LA214_0<=117)) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalCal.g:9996:4: ( (lv_parameters_3_0= ruleAstVariableDeclaration ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )*
                    {
                    // InternalCal.g:9996:4: ( (lv_parameters_3_0= ruleAstVariableDeclaration ) )
                    // InternalCal.g:9997:5: (lv_parameters_3_0= ruleAstVariableDeclaration )
                    {
                    // InternalCal.g:9997:5: (lv_parameters_3_0= ruleAstVariableDeclaration )
                    // InternalCal.g:9998:6: lv_parameters_3_0= ruleAstVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionProcAccess().getParametersAstVariableDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_parameters_3_0=ruleAstVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionProcRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_3_0,
                      							"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:10015:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) ) )*
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==28) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // InternalCal.g:10016:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleAstVariableDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAstExpressionProcAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCal.g:10020:5: ( (lv_parameters_5_0= ruleAstVariableDeclaration ) )
                    	    // InternalCal.g:10021:6: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    	    {
                    	    // InternalCal.g:10021:6: (lv_parameters_5_0= ruleAstVariableDeclaration )
                    	    // InternalCal.g:10022:7: lv_parameters_5_0= ruleAstVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionProcAccess().getParametersAstVariableDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_parameters_5_0=ruleAstVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionProcRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_5_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop213;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,29,FOLLOW_137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstExpressionProcAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalCal.g:10045:3: (otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )* )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==31) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalCal.g:10046:4: otherlv_7= 'var' ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) ) (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )*
                    {
                    otherlv_7=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAstExpressionProcAccess().getVarKeyword_5_0());
                      			
                    }
                    // InternalCal.g:10050:4: ( (lv_variables_8_0= ruleAstValuedVariableDeclaration ) )
                    // InternalCal.g:10051:5: (lv_variables_8_0= ruleAstValuedVariableDeclaration )
                    {
                    // InternalCal.g:10051:5: (lv_variables_8_0= ruleAstValuedVariableDeclaration )
                    // InternalCal.g:10052:6: lv_variables_8_0= ruleAstValuedVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionProcAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_138);
                    lv_variables_8_0=ruleAstValuedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionProcRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_8_0,
                      							"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:10069:4: (otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) ) )*
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==28) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // InternalCal.g:10070:5: otherlv_9= ',' ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) )
                    	    {
                    	    otherlv_9=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getAstExpressionProcAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:10074:5: ( (lv_variables_10_0= ruleAstValuedVariableDeclaration ) )
                    	    // InternalCal.g:10075:6: (lv_variables_10_0= ruleAstValuedVariableDeclaration )
                    	    {
                    	    // InternalCal.g:10075:6: (lv_variables_10_0= ruleAstValuedVariableDeclaration )
                    	    // InternalCal.g:10076:7: lv_variables_10_0= ruleAstValuedVariableDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionProcAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_138);
                    	    lv_variables_10_0=ruleAstValuedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionProcRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_10_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstValuedVariableDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop215;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCal.g:10095:3: (otherlv_11= 'begin' | otherlv_12= 'do' )
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==52) ) {
                alt217=1;
            }
            else if ( (LA217_0==43) ) {
                alt217=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }
            switch (alt217) {
                case 1 :
                    // InternalCal.g:10096:4: otherlv_11= 'begin'
                    {
                    otherlv_11=(Token)match(input,52,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getAstExpressionProcAccess().getBeginKeyword_6_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:10101:4: otherlv_12= 'do'
                    {
                    otherlv_12=(Token)match(input,43,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getAstExpressionProcAccess().getDoKeyword_6_1());
                      			
                    }

                    }
                    break;

            }

            // InternalCal.g:10106:3: ( (lv_statements_13_0= ruleAstStatement ) )*
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0==RULE_ID||LA218_0==33||LA218_0==42||LA218_0==52||LA218_0==68||LA218_0==70||LA218_0==108) ) {
                    alt218=1;
                }


                switch (alt218) {
            	case 1 :
            	    // InternalCal.g:10107:4: (lv_statements_13_0= ruleAstStatement )
            	    {
            	    // InternalCal.g:10107:4: (lv_statements_13_0= ruleAstStatement )
            	    // InternalCal.g:10108:5: lv_statements_13_0= ruleAstStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExpressionProcAccess().getStatementsAstStatementParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_139);
            	    lv_statements_13_0=ruleAstStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExpressionProcRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_13_0,
            	      						"streamblocks.eclipse.cal.Cal.AstStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);

            // InternalCal.g:10125:3: (otherlv_14= 'end' | otherlv_15= 'endproc' )
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==19) ) {
                alt219=1;
            }
            else if ( (LA219_0==106) ) {
                alt219=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;
            }
            switch (alt219) {
                case 1 :
                    // InternalCal.g:10126:4: otherlv_14= 'end'
                    {
                    otherlv_14=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getAstExpressionProcAccess().getEndKeyword_8_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:10131:4: otherlv_15= 'endproc'
                    {
                    otherlv_15=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getAstExpressionProcAccess().getEndprocKeyword_8_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionProc"


    // $ANTLR start "entryRuleAstExpressionCase"
    // InternalCal.g:10140:1: entryRuleAstExpressionCase returns [EObject current=null] : iv_ruleAstExpressionCase= ruleAstExpressionCase EOF ;
    public final EObject entryRuleAstExpressionCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionCase = null;


        try {
            // InternalCal.g:10140:58: (iv_ruleAstExpressionCase= ruleAstExpressionCase EOF )
            // InternalCal.g:10141:2: iv_ruleAstExpressionCase= ruleAstExpressionCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionCase=ruleAstExpressionCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionCase"


    // $ANTLR start "ruleAstExpressionCase"
    // InternalCal.g:10147:1: ruleAstExpressionCase returns [EObject current=null] : (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstExpressionAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) ) )? otherlv_6= 'end' ) ;
    public final EObject ruleAstExpressionCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_1_0 = null;

        EObject lv_cases_3_0 = null;

        EObject lv_default_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10153:2: ( (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstExpressionAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) ) )? otherlv_6= 'end' ) )
            // InternalCal.g:10154:2: (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstExpressionAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) ) )? otherlv_6= 'end' )
            {
            // InternalCal.g:10154:2: (otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstExpressionAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) ) )? otherlv_6= 'end' )
            // InternalCal.g:10155:3: otherlv_0= 'case' ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) ) otherlv_2= 'of' ( (lv_cases_3_0= ruleAstExpressionAlternative ) )+ (otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) ) )? otherlv_6= 'end'
            {
            otherlv_0=(Token)match(input,70,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstExpressionCaseAccess().getCaseKeyword_0());
              		
            }
            // InternalCal.g:10159:3: ( (lv_expression_1_0= ruleAstExpressionSymbolReference ) )
            // InternalCal.g:10160:4: (lv_expression_1_0= ruleAstExpressionSymbolReference )
            {
            // InternalCal.g:10160:4: (lv_expression_1_0= ruleAstExpressionSymbolReference )
            // InternalCal.g:10161:5: lv_expression_1_0= ruleAstExpressionSymbolReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionCaseAccess().getExpressionAstExpressionSymbolReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_108);
            lv_expression_1_0=ruleAstExpressionSymbolReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionCaseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"streamblocks.eclipse.cal.Cal.AstExpressionSymbolReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,71,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAstExpressionCaseAccess().getOfKeyword_2());
              		
            }
            // InternalCal.g:10182:3: ( (lv_cases_3_0= ruleAstExpressionAlternative ) )+
            int cnt220=0;
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( ((LA220_0>=RULE_ID && LA220_0<=RULE_STRING)||LA220_0==36||LA220_0==107||LA220_0==109) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // InternalCal.g:10183:4: (lv_cases_3_0= ruleAstExpressionAlternative )
            	    {
            	    // InternalCal.g:10183:4: (lv_cases_3_0= ruleAstExpressionAlternative )
            	    // InternalCal.g:10184:5: lv_cases_3_0= ruleAstExpressionAlternative
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstExpressionCaseAccess().getCasesAstExpressionAlternativeParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_cases_3_0=ruleAstExpressionAlternative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstExpressionCaseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_3_0,
            	      						"streamblocks.eclipse.cal.Cal.AstExpressionAlternative");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt220 >= 1 ) break loop220;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(220, input);
                        throw eee;
                }
                cnt220++;
            } while (true);

            // InternalCal.g:10201:3: (otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==35) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalCal.g:10202:4: otherlv_4= 'else' ( (lv_default_5_0= ruleAstExpression ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstExpressionCaseAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalCal.g:10206:4: ( (lv_default_5_0= ruleAstExpression ) )
                    // InternalCal.g:10207:5: (lv_default_5_0= ruleAstExpression )
                    {
                    // InternalCal.g:10207:5: (lv_default_5_0= ruleAstExpression )
                    // InternalCal.g:10208:6: lv_default_5_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionCaseAccess().getDefaultAstExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_default_5_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionCaseRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAstExpressionCaseAccess().getEndKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionCase"


    // $ANTLR start "entryRuleAstExpressionAlternative"
    // InternalCal.g:10234:1: entryRuleAstExpressionAlternative returns [EObject current=null] : iv_ruleAstExpressionAlternative= ruleAstExpressionAlternative EOF ;
    public final EObject entryRuleAstExpressionAlternative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionAlternative = null;


        try {
            // InternalCal.g:10234:65: (iv_ruleAstExpressionAlternative= ruleAstExpressionAlternative EOF )
            // InternalCal.g:10235:2: iv_ruleAstExpressionAlternative= ruleAstExpressionAlternative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionAlternativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionAlternative=ruleAstExpressionAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionAlternative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionAlternative"


    // $ANTLR start "ruleAstExpressionAlternative"
    // InternalCal.g:10241:1: ruleAstExpressionAlternative returns [EObject current=null] : ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= ':' ( (lv_expression_6_0= ruleAstExpression ) ) otherlv_7= 'end' ) ;
    public final EObject ruleAstExpressionAlternative() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_guards_2_0 = null;

        EObject lv_guards_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10247:2: ( ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= ':' ( (lv_expression_6_0= ruleAstExpression ) ) otherlv_7= 'end' ) )
            // InternalCal.g:10248:2: ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= ':' ( (lv_expression_6_0= ruleAstExpression ) ) otherlv_7= 'end' )
            {
            // InternalCal.g:10248:2: ( ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= ':' ( (lv_expression_6_0= ruleAstExpression ) ) otherlv_7= 'end' )
            // InternalCal.g:10249:3: ( (lv_pattern_0_0= ruleAstPattern ) ) (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )? otherlv_5= ':' ( (lv_expression_6_0= ruleAstExpression ) ) otherlv_7= 'end'
            {
            // InternalCal.g:10249:3: ( (lv_pattern_0_0= ruleAstPattern ) )
            // InternalCal.g:10250:4: (lv_pattern_0_0= ruleAstPattern )
            {
            // InternalCal.g:10250:4: (lv_pattern_0_0= ruleAstPattern )
            // InternalCal.g:10251:5: lv_pattern_0_0= ruleAstPattern
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionAlternativeAccess().getPatternAstPatternParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_pattern_0_0=ruleAstPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionAlternativeRule());
              					}
              					set(
              						current,
              						"pattern",
              						lv_pattern_0_0,
              						"streamblocks.eclipse.cal.Cal.AstPattern");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:10268:3: (otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )* )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==64) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalCal.g:10269:4: otherlv_1= 'guard' ( (lv_guards_2_0= ruleAstExpression ) ) (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )*
                    {
                    otherlv_1=(Token)match(input,64,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstExpressionAlternativeAccess().getGuardKeyword_1_0());
                      			
                    }
                    // InternalCal.g:10273:4: ( (lv_guards_2_0= ruleAstExpression ) )
                    // InternalCal.g:10274:5: (lv_guards_2_0= ruleAstExpression )
                    {
                    // InternalCal.g:10274:5: (lv_guards_2_0= ruleAstExpression )
                    // InternalCal.g:10275:6: lv_guards_2_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstExpressionAlternativeAccess().getGuardsAstExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_guards_2_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstExpressionAlternativeRule());
                      						}
                      						add(
                      							current,
                      							"guards",
                      							lv_guards_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:10292:4: (otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) ) )*
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==28) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // InternalCal.g:10293:5: otherlv_3= ',' ( (lv_guards_4_0= ruleAstExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getAstExpressionAlternativeAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:10297:5: ( (lv_guards_4_0= ruleAstExpression ) )
                    	    // InternalCal.g:10298:6: (lv_guards_4_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:10298:6: (lv_guards_4_0= ruleAstExpression )
                    	    // InternalCal.g:10299:7: lv_guards_4_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstExpressionAlternativeAccess().getGuardsAstExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_guards_4_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstExpressionAlternativeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"guards",
                    	      								lv_guards_4_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop222;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,18,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstExpressionAlternativeAccess().getColonKeyword_2());
              		
            }
            // InternalCal.g:10322:3: ( (lv_expression_6_0= ruleAstExpression ) )
            // InternalCal.g:10323:4: (lv_expression_6_0= ruleAstExpression )
            {
            // InternalCal.g:10323:4: (lv_expression_6_0= ruleAstExpression )
            // InternalCal.g:10324:5: lv_expression_6_0= ruleAstExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstExpressionAlternativeAccess().getExpressionAstExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_expression_6_0=ruleAstExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstExpressionAlternativeRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"streamblocks.eclipse.cal.Cal.AstExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAstExpressionAlternativeAccess().getEndKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionAlternative"


    // $ANTLR start "entryRuleAstExpressionLiteral"
    // InternalCal.g:10349:1: entryRuleAstExpressionLiteral returns [EObject current=null] : iv_ruleAstExpressionLiteral= ruleAstExpressionLiteral EOF ;
    public final EObject entryRuleAstExpressionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionLiteral = null;


        try {
            // InternalCal.g:10349:61: (iv_ruleAstExpressionLiteral= ruleAstExpressionLiteral EOF )
            // InternalCal.g:10350:2: iv_ruleAstExpressionLiteral= ruleAstExpressionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionLiteral=ruleAstExpressionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionLiteral"


    // $ANTLR start "ruleAstExpressionLiteral"
    // InternalCal.g:10356:1: ruleAstExpressionLiteral returns [EObject current=null] : (this_AstExpressionBoolean_0= ruleAstExpressionBoolean | this_AstExpressionFloat_1= ruleAstExpressionFloat | this_AstExpressionInteger_2= ruleAstExpressionInteger | this_AstExpressionString_3= ruleAstExpressionString ) ;
    public final EObject ruleAstExpressionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_AstExpressionBoolean_0 = null;

        EObject this_AstExpressionFloat_1 = null;

        EObject this_AstExpressionInteger_2 = null;

        EObject this_AstExpressionString_3 = null;



        	enterRule();

        try {
            // InternalCal.g:10362:2: ( (this_AstExpressionBoolean_0= ruleAstExpressionBoolean | this_AstExpressionFloat_1= ruleAstExpressionFloat | this_AstExpressionInteger_2= ruleAstExpressionInteger | this_AstExpressionString_3= ruleAstExpressionString ) )
            // InternalCal.g:10363:2: (this_AstExpressionBoolean_0= ruleAstExpressionBoolean | this_AstExpressionFloat_1= ruleAstExpressionFloat | this_AstExpressionInteger_2= ruleAstExpressionInteger | this_AstExpressionString_3= ruleAstExpressionString )
            {
            // InternalCal.g:10363:2: (this_AstExpressionBoolean_0= ruleAstExpressionBoolean | this_AstExpressionFloat_1= ruleAstExpressionFloat | this_AstExpressionInteger_2= ruleAstExpressionInteger | this_AstExpressionString_3= ruleAstExpressionString )
            int alt224=4;
            switch ( input.LA(1) ) {
            case RULE_BOOL:
                {
                alt224=1;
                }
                break;
            case RULE_REAL:
                {
                alt224=2;
                }
                break;
            case RULE_DECIMAL:
            case RULE_OCTAL:
            case RULE_HEX:
                {
                alt224=3;
                }
                break;
            case RULE_STRING:
                {
                alt224=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;
            }

            switch (alt224) {
                case 1 :
                    // InternalCal.g:10364:3: this_AstExpressionBoolean_0= ruleAstExpressionBoolean
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionBooleanParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionBoolean_0=ruleAstExpressionBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionBoolean_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:10373:3: this_AstExpressionFloat_1= ruleAstExpressionFloat
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionFloatParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionFloat_1=ruleAstExpressionFloat();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionFloat_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:10382:3: this_AstExpressionInteger_2= ruleAstExpressionInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionIntegerParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionInteger_2=ruleAstExpressionInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionInteger_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCal.g:10391:3: this_AstExpressionString_3= ruleAstExpressionString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionStringParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstExpressionString_3=ruleAstExpressionString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstExpressionString_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionLiteral"


    // $ANTLR start "entryRuleAstExpressionBoolean"
    // InternalCal.g:10403:1: entryRuleAstExpressionBoolean returns [EObject current=null] : iv_ruleAstExpressionBoolean= ruleAstExpressionBoolean EOF ;
    public final EObject entryRuleAstExpressionBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionBoolean = null;


        try {
            // InternalCal.g:10403:61: (iv_ruleAstExpressionBoolean= ruleAstExpressionBoolean EOF )
            // InternalCal.g:10404:2: iv_ruleAstExpressionBoolean= ruleAstExpressionBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionBoolean=ruleAstExpressionBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionBoolean; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionBoolean"


    // $ANTLR start "ruleAstExpressionBoolean"
    // InternalCal.g:10410:1: ruleAstExpressionBoolean returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOL ) ) ;
    public final EObject ruleAstExpressionBoolean() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalCal.g:10416:2: ( ( (lv_value_0_0= RULE_BOOL ) ) )
            // InternalCal.g:10417:2: ( (lv_value_0_0= RULE_BOOL ) )
            {
            // InternalCal.g:10417:2: ( (lv_value_0_0= RULE_BOOL ) )
            // InternalCal.g:10418:3: (lv_value_0_0= RULE_BOOL )
            {
            // InternalCal.g:10418:3: (lv_value_0_0= RULE_BOOL )
            // InternalCal.g:10419:4: lv_value_0_0= RULE_BOOL
            {
            lv_value_0_0=(Token)match(input,RULE_BOOL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getAstExpressionBooleanAccess().getValueBOOLTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAstExpressionBooleanRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"streamblocks.eclipse.cal.Cal.BOOL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionBoolean"


    // $ANTLR start "entryRuleAstExpressionFloat"
    // InternalCal.g:10438:1: entryRuleAstExpressionFloat returns [EObject current=null] : iv_ruleAstExpressionFloat= ruleAstExpressionFloat EOF ;
    public final EObject entryRuleAstExpressionFloat() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionFloat = null;


        try {
            // InternalCal.g:10438:59: (iv_ruleAstExpressionFloat= ruleAstExpressionFloat EOF )
            // InternalCal.g:10439:2: iv_ruleAstExpressionFloat= ruleAstExpressionFloat EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionFloatRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionFloat=ruleAstExpressionFloat();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionFloat; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionFloat"


    // $ANTLR start "ruleAstExpressionFloat"
    // InternalCal.g:10445:1: ruleAstExpressionFloat returns [EObject current=null] : ( (lv_value_0_0= RULE_REAL ) ) ;
    public final EObject ruleAstExpressionFloat() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalCal.g:10451:2: ( ( (lv_value_0_0= RULE_REAL ) ) )
            // InternalCal.g:10452:2: ( (lv_value_0_0= RULE_REAL ) )
            {
            // InternalCal.g:10452:2: ( (lv_value_0_0= RULE_REAL ) )
            // InternalCal.g:10453:3: (lv_value_0_0= RULE_REAL )
            {
            // InternalCal.g:10453:3: (lv_value_0_0= RULE_REAL )
            // InternalCal.g:10454:4: lv_value_0_0= RULE_REAL
            {
            lv_value_0_0=(Token)match(input,RULE_REAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getAstExpressionFloatAccess().getValueREALTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAstExpressionFloatRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"streamblocks.eclipse.cal.Cal.REAL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionFloat"


    // $ANTLR start "entryRuleAstExpressionInteger"
    // InternalCal.g:10473:1: entryRuleAstExpressionInteger returns [EObject current=null] : iv_ruleAstExpressionInteger= ruleAstExpressionInteger EOF ;
    public final EObject entryRuleAstExpressionInteger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionInteger = null;


        try {
            // InternalCal.g:10473:61: (iv_ruleAstExpressionInteger= ruleAstExpressionInteger EOF )
            // InternalCal.g:10474:2: iv_ruleAstExpressionInteger= ruleAstExpressionInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionInteger=ruleAstExpressionInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionInteger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionInteger"


    // $ANTLR start "ruleAstExpressionInteger"
    // InternalCal.g:10480:1: ruleAstExpressionInteger returns [EObject current=null] : ( ( (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX ) ) ) ;
    public final EObject ruleAstExpressionInteger() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_1=null;
        Token lv_value_0_2=null;
        Token lv_value_0_3=null;


        	enterRule();

        try {
            // InternalCal.g:10486:2: ( ( ( (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX ) ) ) )
            // InternalCal.g:10487:2: ( ( (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX ) ) )
            {
            // InternalCal.g:10487:2: ( ( (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX ) ) )
            // InternalCal.g:10488:3: ( (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX ) )
            {
            // InternalCal.g:10488:3: ( (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX ) )
            // InternalCal.g:10489:4: (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX )
            {
            // InternalCal.g:10489:4: (lv_value_0_1= RULE_DECIMAL | lv_value_0_2= RULE_OCTAL | lv_value_0_3= RULE_HEX )
            int alt225=3;
            switch ( input.LA(1) ) {
            case RULE_DECIMAL:
                {
                alt225=1;
                }
                break;
            case RULE_OCTAL:
                {
                alt225=2;
                }
                break;
            case RULE_HEX:
                {
                alt225=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }

            switch (alt225) {
                case 1 :
                    // InternalCal.g:10490:5: lv_value_0_1= RULE_DECIMAL
                    {
                    lv_value_0_1=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_1, grammarAccess.getAstExpressionIntegerAccess().getValueDECIMALTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAstExpressionIntegerRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"value",
                      						lv_value_0_1,
                      						"streamblocks.eclipse.cal.Cal.DECIMAL");
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:10505:5: lv_value_0_2= RULE_OCTAL
                    {
                    lv_value_0_2=(Token)match(input,RULE_OCTAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_2, grammarAccess.getAstExpressionIntegerAccess().getValueOCTALTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAstExpressionIntegerRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"value",
                      						lv_value_0_2,
                      						"streamblocks.eclipse.cal.Cal.OCTAL");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:10520:5: lv_value_0_3= RULE_HEX
                    {
                    lv_value_0_3=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_3, grammarAccess.getAstExpressionIntegerAccess().getValueHEXTerminalRuleCall_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAstExpressionIntegerRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"value",
                      						lv_value_0_3,
                      						"streamblocks.eclipse.cal.Cal.HEX");
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionInteger"


    // $ANTLR start "entryRuleAstExpressionString"
    // InternalCal.g:10540:1: entryRuleAstExpressionString returns [EObject current=null] : iv_ruleAstExpressionString= ruleAstExpressionString EOF ;
    public final EObject entryRuleAstExpressionString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstExpressionString = null;


        try {
            // InternalCal.g:10540:60: (iv_ruleAstExpressionString= ruleAstExpressionString EOF )
            // InternalCal.g:10541:2: iv_ruleAstExpressionString= ruleAstExpressionString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstExpressionStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstExpressionString=ruleAstExpressionString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstExpressionString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstExpressionString"


    // $ANTLR start "ruleAstExpressionString"
    // InternalCal.g:10547:1: ruleAstExpressionString returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleAstExpressionString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalCal.g:10553:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalCal.g:10554:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalCal.g:10554:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalCal.g:10555:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalCal.g:10555:3: (lv_value_0_0= RULE_STRING )
            // InternalCal.g:10556:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getAstExpressionStringAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAstExpressionStringRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"streamblocks.eclipse.cal.Cal.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstExpressionString"


    // $ANTLR start "entryRuleAstPattern"
    // InternalCal.g:10575:1: entryRuleAstPattern returns [EObject current=null] : iv_ruleAstPattern= ruleAstPattern EOF ;
    public final EObject entryRuleAstPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPattern = null;


        try {
            // InternalCal.g:10575:51: (iv_ruleAstPattern= ruleAstPattern EOF )
            // InternalCal.g:10576:2: iv_ruleAstPattern= ruleAstPattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPattern=ruleAstPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPattern"


    // $ANTLR start "ruleAstPattern"
    // InternalCal.g:10582:1: ruleAstPattern returns [EObject current=null] : (this_AstPatternAlternative_0= ruleAstPatternAlternative | this_AstPatternAlias_1= ruleAstPatternAlias | this_AstPatternDeconstruction_2= ruleAstPatternDeconstruction | this_AstPatternList_3= ruleAstPatternList | this_AstPatternDeclaration_4= ruleAstPatternDeclaration | this_AstPatternWildcard_5= ruleAstPatternWildcard ) ;
    public final EObject ruleAstPattern() throws RecognitionException {
        EObject current = null;

        EObject this_AstPatternAlternative_0 = null;

        EObject this_AstPatternAlias_1 = null;

        EObject this_AstPatternDeconstruction_2 = null;

        EObject this_AstPatternList_3 = null;

        EObject this_AstPatternDeclaration_4 = null;

        EObject this_AstPatternWildcard_5 = null;



        	enterRule();

        try {
            // InternalCal.g:10588:2: ( (this_AstPatternAlternative_0= ruleAstPatternAlternative | this_AstPatternAlias_1= ruleAstPatternAlias | this_AstPatternDeconstruction_2= ruleAstPatternDeconstruction | this_AstPatternList_3= ruleAstPatternList | this_AstPatternDeclaration_4= ruleAstPatternDeclaration | this_AstPatternWildcard_5= ruleAstPatternWildcard ) )
            // InternalCal.g:10589:2: (this_AstPatternAlternative_0= ruleAstPatternAlternative | this_AstPatternAlias_1= ruleAstPatternAlias | this_AstPatternDeconstruction_2= ruleAstPatternDeconstruction | this_AstPatternList_3= ruleAstPatternList | this_AstPatternDeclaration_4= ruleAstPatternDeclaration | this_AstPatternWildcard_5= ruleAstPatternWildcard )
            {
            // InternalCal.g:10589:2: (this_AstPatternAlternative_0= ruleAstPatternAlternative | this_AstPatternAlias_1= ruleAstPatternAlias | this_AstPatternDeconstruction_2= ruleAstPatternDeconstruction | this_AstPatternList_3= ruleAstPatternList | this_AstPatternDeclaration_4= ruleAstPatternDeclaration | this_AstPatternWildcard_5= ruleAstPatternWildcard )
            int alt226=6;
            switch ( input.LA(1) ) {
            case RULE_BOOL:
            case RULE_REAL:
            case RULE_DECIMAL:
            case RULE_OCTAL:
            case RULE_HEX:
            case RULE_STRING:
            case 109:
                {
                alt226=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case 27:
                    {
                    alt226=3;
                    }
                    break;
                case EOF:
                case 18:
                case 28:
                case 29:
                case 37:
                case 43:
                case 64:
                    {
                    alt226=5;
                    }
                    break;
                case 108:
                    {
                    alt226=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 226, 2, input);

                    throw nvae;
                }

                }
                break;
            case 107:
                {
                int LA226_3 = input.LA(2);

                if ( (LA226_3==108) ) {
                    alt226=2;
                }
                else if ( (LA226_3==EOF||LA226_3==18||(LA226_3>=28 && LA226_3<=29)||LA226_3==37||LA226_3==43||LA226_3==64) ) {
                    alt226=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 226, 3, input);

                    throw nvae;
                }
                }
                break;
            case 36:
                {
                alt226=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 226, 0, input);

                throw nvae;
            }

            switch (alt226) {
                case 1 :
                    // InternalCal.g:10590:3: this_AstPatternAlternative_0= ruleAstPatternAlternative
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstPatternAccess().getAstPatternAlternativeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPatternAlternative_0=ruleAstPatternAlternative();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPatternAlternative_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:10599:3: this_AstPatternAlias_1= ruleAstPatternAlias
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstPatternAccess().getAstPatternAliasParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPatternAlias_1=ruleAstPatternAlias();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPatternAlias_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:10608:3: this_AstPatternDeconstruction_2= ruleAstPatternDeconstruction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstPatternAccess().getAstPatternDeconstructionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPatternDeconstruction_2=ruleAstPatternDeconstruction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPatternDeconstruction_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCal.g:10617:3: this_AstPatternList_3= ruleAstPatternList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstPatternAccess().getAstPatternListParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPatternList_3=ruleAstPatternList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPatternList_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCal.g:10626:3: this_AstPatternDeclaration_4= ruleAstPatternDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstPatternAccess().getAstPatternDeclarationParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPatternDeclaration_4=ruleAstPatternDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPatternDeclaration_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCal.g:10635:3: this_AstPatternWildcard_5= ruleAstPatternWildcard
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAstPatternAccess().getAstPatternWildcardParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AstPatternWildcard_5=ruleAstPatternWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AstPatternWildcard_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPattern"


    // $ANTLR start "entryRuleAstPatternDeclaration"
    // InternalCal.g:10647:1: entryRuleAstPatternDeclaration returns [EObject current=null] : iv_ruleAstPatternDeclaration= ruleAstPatternDeclaration EOF ;
    public final EObject entryRuleAstPatternDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternDeclaration = null;


        try {
            // InternalCal.g:10647:62: (iv_ruleAstPatternDeclaration= ruleAstPatternDeclaration EOF )
            // InternalCal.g:10648:2: iv_ruleAstPatternDeclaration= ruleAstPatternDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternDeclaration=ruleAstPatternDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternDeclaration"


    // $ANTLR start "ruleAstPatternDeclaration"
    // InternalCal.g:10654:1: ruleAstPatternDeclaration returns [EObject current=null] : ( (lv_variable_0_0= ruleAstToken ) ) ;
    public final EObject ruleAstPatternDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_variable_0_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10660:2: ( ( (lv_variable_0_0= ruleAstToken ) ) )
            // InternalCal.g:10661:2: ( (lv_variable_0_0= ruleAstToken ) )
            {
            // InternalCal.g:10661:2: ( (lv_variable_0_0= ruleAstToken ) )
            // InternalCal.g:10662:3: (lv_variable_0_0= ruleAstToken )
            {
            // InternalCal.g:10662:3: (lv_variable_0_0= ruleAstToken )
            // InternalCal.g:10663:4: lv_variable_0_0= ruleAstToken
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAstPatternDeclarationAccess().getVariableAstTokenParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_variable_0_0=ruleAstToken();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getAstPatternDeclarationRule());
              				}
              				set(
              					current,
              					"variable",
              					lv_variable_0_0,
              					"streamblocks.eclipse.cal.Cal.AstToken");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternDeclaration"


    // $ANTLR start "entryRuleAstPatternWildcard"
    // InternalCal.g:10683:1: entryRuleAstPatternWildcard returns [EObject current=null] : iv_ruleAstPatternWildcard= ruleAstPatternWildcard EOF ;
    public final EObject entryRuleAstPatternWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternWildcard = null;


        try {
            // InternalCal.g:10683:59: (iv_ruleAstPatternWildcard= ruleAstPatternWildcard EOF )
            // InternalCal.g:10684:2: iv_ruleAstPatternWildcard= ruleAstPatternWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternWildcard=ruleAstPatternWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternWildcard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternWildcard"


    // $ANTLR start "ruleAstPatternWildcard"
    // InternalCal.g:10690:1: ruleAstPatternWildcard returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleAstPatternWildcard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalCal.g:10696:2: ( ( () otherlv_1= '_' ) )
            // InternalCal.g:10697:2: ( () otherlv_1= '_' )
            {
            // InternalCal.g:10697:2: ( () otherlv_1= '_' )
            // InternalCal.g:10698:3: () otherlv_1= '_'
            {
            // InternalCal.g:10698:3: ()
            // InternalCal.g:10699:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstPatternWildcardAccess().getAstPatternAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstPatternWildcardAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternWildcard"


    // $ANTLR start "entryRuleAstPatternAlternative"
    // InternalCal.g:10713:1: entryRuleAstPatternAlternative returns [EObject current=null] : iv_ruleAstPatternAlternative= ruleAstPatternAlternative EOF ;
    public final EObject entryRuleAstPatternAlternative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternAlternative = null;


        try {
            // InternalCal.g:10713:62: (iv_ruleAstPatternAlternative= ruleAstPatternAlternative EOF )
            // InternalCal.g:10714:2: iv_ruleAstPatternAlternative= ruleAstPatternAlternative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternAlternativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternAlternative=ruleAstPatternAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternAlternative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternAlternative"


    // $ANTLR start "ruleAstPatternAlternative"
    // InternalCal.g:10720:1: ruleAstPatternAlternative returns [EObject current=null] : ( ( ( (lv_patterns_0_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_1_0= ruleAstPatternExpression ) ) ) (otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) ) )* ) ;
    public final EObject ruleAstPatternAlternative() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_patterns_0_0 = null;

        EObject lv_patterns_1_0 = null;

        EObject lv_patterns_3_0 = null;

        EObject lv_patterns_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10726:2: ( ( ( ( (lv_patterns_0_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_1_0= ruleAstPatternExpression ) ) ) (otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) ) )* ) )
            // InternalCal.g:10727:2: ( ( ( (lv_patterns_0_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_1_0= ruleAstPatternExpression ) ) ) (otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) ) )* )
            {
            // InternalCal.g:10727:2: ( ( ( (lv_patterns_0_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_1_0= ruleAstPatternExpression ) ) ) (otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) ) )* )
            // InternalCal.g:10728:3: ( ( (lv_patterns_0_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_1_0= ruleAstPatternExpression ) ) ) (otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) ) )*
            {
            // InternalCal.g:10728:3: ( ( (lv_patterns_0_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_1_0= ruleAstPatternExpression ) ) )
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( ((LA227_0>=RULE_BOOL && LA227_0<=RULE_STRING)) ) {
                alt227=1;
            }
            else if ( (LA227_0==109) ) {
                alt227=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;
            }
            switch (alt227) {
                case 1 :
                    // InternalCal.g:10729:4: ( (lv_patterns_0_0= ruleAstPatternLiteral ) )
                    {
                    // InternalCal.g:10729:4: ( (lv_patterns_0_0= ruleAstPatternLiteral ) )
                    // InternalCal.g:10730:5: (lv_patterns_0_0= ruleAstPatternLiteral )
                    {
                    // InternalCal.g:10730:5: (lv_patterns_0_0= ruleAstPatternLiteral )
                    // InternalCal.g:10731:6: lv_patterns_0_0= ruleAstPatternLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstPatternAlternativeAccess().getPatternsAstPatternLiteralParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_patterns_0_0=ruleAstPatternLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstPatternAlternativeRule());
                      						}
                      						add(
                      							current,
                      							"patterns",
                      							lv_patterns_0_0,
                      							"streamblocks.eclipse.cal.Cal.AstPatternLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:10749:4: ( (lv_patterns_1_0= ruleAstPatternExpression ) )
                    {
                    // InternalCal.g:10749:4: ( (lv_patterns_1_0= ruleAstPatternExpression ) )
                    // InternalCal.g:10750:5: (lv_patterns_1_0= ruleAstPatternExpression )
                    {
                    // InternalCal.g:10750:5: (lv_patterns_1_0= ruleAstPatternExpression )
                    // InternalCal.g:10751:6: lv_patterns_1_0= ruleAstPatternExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstPatternAlternativeAccess().getPatternsAstPatternExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_patterns_1_0=ruleAstPatternExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstPatternAlternativeRule());
                      						}
                      						add(
                      							current,
                      							"patterns",
                      							lv_patterns_1_0,
                      							"streamblocks.eclipse.cal.Cal.AstPatternExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalCal.g:10769:3: (otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) ) )*
            loop229:
            do {
                int alt229=2;
                int LA229_0 = input.LA(1);

                if ( (LA229_0==47) ) {
                    alt229=1;
                }


                switch (alt229) {
            	case 1 :
            	    // InternalCal.g:10770:4: otherlv_2= '|' ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) )
            	    {
            	    otherlv_2=(Token)match(input,47,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstPatternAlternativeAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalCal.g:10774:4: ( ( (lv_patterns_3_0= ruleAstPatternLiteral ) ) | ( (lv_patterns_4_0= ruleAstPatternExpression ) ) )
            	    int alt228=2;
            	    int LA228_0 = input.LA(1);

            	    if ( ((LA228_0>=RULE_BOOL && LA228_0<=RULE_STRING)) ) {
            	        alt228=1;
            	    }
            	    else if ( (LA228_0==109) ) {
            	        alt228=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 228, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt228) {
            	        case 1 :
            	            // InternalCal.g:10775:5: ( (lv_patterns_3_0= ruleAstPatternLiteral ) )
            	            {
            	            // InternalCal.g:10775:5: ( (lv_patterns_3_0= ruleAstPatternLiteral ) )
            	            // InternalCal.g:10776:6: (lv_patterns_3_0= ruleAstPatternLiteral )
            	            {
            	            // InternalCal.g:10776:6: (lv_patterns_3_0= ruleAstPatternLiteral )
            	            // InternalCal.g:10777:7: lv_patterns_3_0= ruleAstPatternLiteral
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstPatternAlternativeAccess().getPatternsAstPatternLiteralParserRuleCall_1_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_77);
            	            lv_patterns_3_0=ruleAstPatternLiteral();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstPatternAlternativeRule());
            	              							}
            	              							add(
            	              								current,
            	              								"patterns",
            	              								lv_patterns_3_0,
            	              								"streamblocks.eclipse.cal.Cal.AstPatternLiteral");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalCal.g:10795:5: ( (lv_patterns_4_0= ruleAstPatternExpression ) )
            	            {
            	            // InternalCal.g:10795:5: ( (lv_patterns_4_0= ruleAstPatternExpression ) )
            	            // InternalCal.g:10796:6: (lv_patterns_4_0= ruleAstPatternExpression )
            	            {
            	            // InternalCal.g:10796:6: (lv_patterns_4_0= ruleAstPatternExpression )
            	            // InternalCal.g:10797:7: lv_patterns_4_0= ruleAstPatternExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getAstPatternAlternativeAccess().getPatternsAstPatternExpressionParserRuleCall_1_1_1_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_77);
            	            lv_patterns_4_0=ruleAstPatternExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getAstPatternAlternativeRule());
            	              							}
            	              							add(
            	              								current,
            	              								"patterns",
            	              								lv_patterns_4_0,
            	              								"streamblocks.eclipse.cal.Cal.AstPatternExpression");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop229;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternAlternative"


    // $ANTLR start "entryRuleAstPatternAlias"
    // InternalCal.g:10820:1: entryRuleAstPatternAlias returns [EObject current=null] : iv_ruleAstPatternAlias= ruleAstPatternAlias EOF ;
    public final EObject entryRuleAstPatternAlias() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternAlias = null;


        try {
            // InternalCal.g:10820:56: (iv_ruleAstPatternAlias= ruleAstPatternAlias EOF )
            // InternalCal.g:10821:2: iv_ruleAstPatternAlias= ruleAstPatternAlias EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternAlias=ruleAstPatternAlias();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternAlias; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternAlias"


    // $ANTLR start "ruleAstPatternAlias"
    // InternalCal.g:10827:1: ruleAstPatternAlias returns [EObject current=null] : ( ( ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) ) ) otherlv_1= '@' ( (lv_expression_2_0= ruleAstPatternExpression ) ) ) ;
    public final EObject ruleAstPatternAlias() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_alias_0_1 = null;

        EObject lv_alias_0_2 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10833:2: ( ( ( ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) ) ) otherlv_1= '@' ( (lv_expression_2_0= ruleAstPatternExpression ) ) ) )
            // InternalCal.g:10834:2: ( ( ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) ) ) otherlv_1= '@' ( (lv_expression_2_0= ruleAstPatternExpression ) ) )
            {
            // InternalCal.g:10834:2: ( ( ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) ) ) otherlv_1= '@' ( (lv_expression_2_0= ruleAstPatternExpression ) ) )
            // InternalCal.g:10835:3: ( ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) ) ) otherlv_1= '@' ( (lv_expression_2_0= ruleAstPatternExpression ) )
            {
            // InternalCal.g:10835:3: ( ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) ) )
            // InternalCal.g:10836:4: ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) )
            {
            // InternalCal.g:10836:4: ( (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard ) )
            // InternalCal.g:10837:5: (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard )
            {
            // InternalCal.g:10837:5: (lv_alias_0_1= ruleAstPatternDeclaration | lv_alias_0_2= ruleAstPatternWildcard )
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==RULE_ID) ) {
                alt230=1;
            }
            else if ( (LA230_0==107) ) {
                alt230=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;
            }
            switch (alt230) {
                case 1 :
                    // InternalCal.g:10838:6: lv_alias_0_1= ruleAstPatternDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstPatternAliasAccess().getAliasAstPatternDeclarationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_alias_0_1=ruleAstPatternDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstPatternAliasRule());
                      						}
                      						set(
                      							current,
                      							"alias",
                      							lv_alias_0_1,
                      							"streamblocks.eclipse.cal.Cal.AstPatternDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:10854:6: lv_alias_0_2= ruleAstPatternWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstPatternAliasAccess().getAliasAstPatternWildcardParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_alias_0_2=ruleAstPatternWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstPatternAliasRule());
                      						}
                      						set(
                      							current,
                      							"alias",
                      							lv_alias_0_2,
                      							"streamblocks.eclipse.cal.Cal.AstPatternWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,108,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstPatternAliasAccess().getCommercialAtKeyword_1());
              		
            }
            // InternalCal.g:10876:3: ( (lv_expression_2_0= ruleAstPatternExpression ) )
            // InternalCal.g:10877:4: (lv_expression_2_0= ruleAstPatternExpression )
            {
            // InternalCal.g:10877:4: (lv_expression_2_0= ruleAstPatternExpression )
            // InternalCal.g:10878:5: lv_expression_2_0= ruleAstPatternExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstPatternAliasAccess().getExpressionAstPatternExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAstPatternExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstPatternAliasRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"streamblocks.eclipse.cal.Cal.AstPatternExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternAlias"


    // $ANTLR start "entryRuleAstPatternList"
    // InternalCal.g:10899:1: entryRuleAstPatternList returns [EObject current=null] : iv_ruleAstPatternList= ruleAstPatternList EOF ;
    public final EObject entryRuleAstPatternList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternList = null;


        try {
            // InternalCal.g:10899:55: (iv_ruleAstPatternList= ruleAstPatternList EOF )
            // InternalCal.g:10900:2: iv_ruleAstPatternList= ruleAstPatternList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternList=ruleAstPatternList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternList"


    // $ANTLR start "ruleAstPatternList"
    // InternalCal.g:10906:1: ruleAstPatternList returns [EObject current=null] : (otherlv_0= '[' ( (lv_patterns_1_0= ruleAstPattern ) ) (otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleAstPatternList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_patterns_1_0 = null;

        EObject lv_patterns_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10912:2: ( (otherlv_0= '[' ( (lv_patterns_1_0= ruleAstPattern ) ) (otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) ) )* otherlv_4= ']' ) )
            // InternalCal.g:10913:2: (otherlv_0= '[' ( (lv_patterns_1_0= ruleAstPattern ) ) (otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) ) )* otherlv_4= ']' )
            {
            // InternalCal.g:10913:2: (otherlv_0= '[' ( (lv_patterns_1_0= ruleAstPattern ) ) (otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) ) )* otherlv_4= ']' )
            // InternalCal.g:10914:3: otherlv_0= '[' ( (lv_patterns_1_0= ruleAstPattern ) ) (otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,36,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstPatternListAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalCal.g:10918:3: ( (lv_patterns_1_0= ruleAstPattern ) )
            // InternalCal.g:10919:4: (lv_patterns_1_0= ruleAstPattern )
            {
            // InternalCal.g:10919:4: (lv_patterns_1_0= ruleAstPattern )
            // InternalCal.g:10920:5: lv_patterns_1_0= ruleAstPattern
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstPatternListAccess().getPatternsAstPatternParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_patterns_1_0=ruleAstPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstPatternListRule());
              					}
              					add(
              						current,
              						"patterns",
              						lv_patterns_1_0,
              						"streamblocks.eclipse.cal.Cal.AstPattern");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:10937:3: (otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) ) )*
            loop231:
            do {
                int alt231=2;
                int LA231_0 = input.LA(1);

                if ( (LA231_0==28) ) {
                    alt231=1;
                }


                switch (alt231) {
            	case 1 :
            	    // InternalCal.g:10938:4: otherlv_2= ',' ( (lv_patterns_3_0= ruleAstPattern ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstPatternListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:10942:4: ( (lv_patterns_3_0= ruleAstPattern ) )
            	    // InternalCal.g:10943:5: (lv_patterns_3_0= ruleAstPattern )
            	    {
            	    // InternalCal.g:10943:5: (lv_patterns_3_0= ruleAstPattern )
            	    // InternalCal.g:10944:6: lv_patterns_3_0= ruleAstPattern
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstPatternListAccess().getPatternsAstPatternParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_patterns_3_0=ruleAstPattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstPatternListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"patterns",
            	      							lv_patterns_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstPattern");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop231;
                }
            } while (true);

            otherlv_4=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstPatternListAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternList"


    // $ANTLR start "entryRuleAstPatternLiteral"
    // InternalCal.g:10970:1: entryRuleAstPatternLiteral returns [EObject current=null] : iv_ruleAstPatternLiteral= ruleAstPatternLiteral EOF ;
    public final EObject entryRuleAstPatternLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternLiteral = null;


        try {
            // InternalCal.g:10970:58: (iv_ruleAstPatternLiteral= ruleAstPatternLiteral EOF )
            // InternalCal.g:10971:2: iv_ruleAstPatternLiteral= ruleAstPatternLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternLiteral=ruleAstPatternLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternLiteral"


    // $ANTLR start "ruleAstPatternLiteral"
    // InternalCal.g:10977:1: ruleAstPatternLiteral returns [EObject current=null] : ( (lv_literal_0_0= ruleAstExpressionLiteral ) ) ;
    public final EObject ruleAstPatternLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_literal_0_0 = null;



        	enterRule();

        try {
            // InternalCal.g:10983:2: ( ( (lv_literal_0_0= ruleAstExpressionLiteral ) ) )
            // InternalCal.g:10984:2: ( (lv_literal_0_0= ruleAstExpressionLiteral ) )
            {
            // InternalCal.g:10984:2: ( (lv_literal_0_0= ruleAstExpressionLiteral ) )
            // InternalCal.g:10985:3: (lv_literal_0_0= ruleAstExpressionLiteral )
            {
            // InternalCal.g:10985:3: (lv_literal_0_0= ruleAstExpressionLiteral )
            // InternalCal.g:10986:4: lv_literal_0_0= ruleAstExpressionLiteral
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAstPatternLiteralAccess().getLiteralAstExpressionLiteralParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_literal_0_0=ruleAstExpressionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getAstPatternLiteralRule());
              				}
              				set(
              					current,
              					"literal",
              					lv_literal_0_0,
              					"streamblocks.eclipse.cal.Cal.AstExpressionLiteral");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternLiteral"


    // $ANTLR start "entryRuleAstPatternExpression"
    // InternalCal.g:11006:1: entryRuleAstPatternExpression returns [EObject current=null] : iv_ruleAstPatternExpression= ruleAstPatternExpression EOF ;
    public final EObject entryRuleAstPatternExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternExpression = null;


        try {
            // InternalCal.g:11006:61: (iv_ruleAstPatternExpression= ruleAstPatternExpression EOF )
            // InternalCal.g:11007:2: iv_ruleAstPatternExpression= ruleAstPatternExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternExpression=ruleAstPatternExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternExpression"


    // $ANTLR start "ruleAstPatternExpression"
    // InternalCal.g:11013:1: ruleAstPatternExpression returns [EObject current=null] : (otherlv_0= '`' ( (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' ) | ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) ) ) ) ;
    public final EObject ruleAstPatternExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11019:2: ( (otherlv_0= '`' ( (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' ) | ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) ) ) ) )
            // InternalCal.g:11020:2: (otherlv_0= '`' ( (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' ) | ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) ) ) )
            {
            // InternalCal.g:11020:2: (otherlv_0= '`' ( (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' ) | ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) ) ) )
            // InternalCal.g:11021:3: otherlv_0= '`' ( (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' ) | ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) ) )
            {
            otherlv_0=(Token)match(input,109,FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstPatternExpressionAccess().getGraveAccentKeyword_0());
              		
            }
            // InternalCal.g:11025:3: ( (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' ) | ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) ) )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==27) ) {
                alt232=1;
            }
            else if ( (LA232_0==RULE_ID||LA232_0==108) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }
            switch (alt232) {
                case 1 :
                    // InternalCal.g:11026:4: (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' )
                    {
                    // InternalCal.g:11026:4: (otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')' )
                    // InternalCal.g:11027:5: otherlv_1= '(' ( (lv_expression_2_0= ruleAstExpression ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getAstPatternExpressionAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalCal.g:11031:5: ( (lv_expression_2_0= ruleAstExpression ) )
                    // InternalCal.g:11032:6: (lv_expression_2_0= ruleAstExpression )
                    {
                    // InternalCal.g:11032:6: (lv_expression_2_0= ruleAstExpression )
                    // InternalCal.g:11033:7: lv_expression_2_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAstPatternExpressionAccess().getExpressionAstExpressionParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_80);
                    lv_expression_2_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAstPatternExpressionRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_2_0,
                      								"streamblocks.eclipse.cal.Cal.AstExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getAstPatternExpressionAccess().getRightParenthesisKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:11056:4: ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) )
                    {
                    // InternalCal.g:11056:4: ( (lv_expression_4_0= ruleAstExpressionSymbolReference ) )
                    // InternalCal.g:11057:5: (lv_expression_4_0= ruleAstExpressionSymbolReference )
                    {
                    // InternalCal.g:11057:5: (lv_expression_4_0= ruleAstExpressionSymbolReference )
                    // InternalCal.g:11058:6: lv_expression_4_0= ruleAstExpressionSymbolReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstPatternExpressionAccess().getExpressionAstExpressionSymbolReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=ruleAstExpressionSymbolReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstPatternExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpressionSymbolReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternExpression"


    // $ANTLR start "entryRuleAstPatternDeconstruction"
    // InternalCal.g:11080:1: entryRuleAstPatternDeconstruction returns [EObject current=null] : iv_ruleAstPatternDeconstruction= ruleAstPatternDeconstruction EOF ;
    public final EObject entryRuleAstPatternDeconstruction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstPatternDeconstruction = null;


        try {
            // InternalCal.g:11080:65: (iv_ruleAstPatternDeconstruction= ruleAstPatternDeconstruction EOF )
            // InternalCal.g:11081:2: iv_ruleAstPatternDeconstruction= ruleAstPatternDeconstruction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstPatternDeconstructionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstPatternDeconstruction=ruleAstPatternDeconstruction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstPatternDeconstruction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstPatternDeconstruction"


    // $ANTLR start "ruleAstPatternDeconstruction"
    // InternalCal.g:11087:1: ruleAstPatternDeconstruction returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '(' ( (lv_patterns_2_0= ruleAstPattern ) ) (otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) ) )* otherlv_5= ')' ) ;
    public final EObject ruleAstPatternDeconstruction() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_patterns_2_0 = null;

        EObject lv_patterns_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11093:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '(' ( (lv_patterns_2_0= ruleAstPattern ) ) (otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) ) )* otherlv_5= ')' ) )
            // InternalCal.g:11094:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '(' ( (lv_patterns_2_0= ruleAstPattern ) ) (otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) ) )* otherlv_5= ')' )
            {
            // InternalCal.g:11094:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '(' ( (lv_patterns_2_0= ruleAstPattern ) ) (otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) ) )* otherlv_5= ')' )
            // InternalCal.g:11095:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '(' ( (lv_patterns_2_0= ruleAstPattern ) ) (otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) ) )* otherlv_5= ')'
            {
            // InternalCal.g:11095:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:11096:4: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:11096:4: (lv_name_0_0= RULE_ID )
            // InternalCal.g:11097:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAstPatternDeconstructionAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstPatternDeconstructionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,27,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstPatternDeconstructionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCal.g:11117:3: ( (lv_patterns_2_0= ruleAstPattern ) )
            // InternalCal.g:11118:4: (lv_patterns_2_0= ruleAstPattern )
            {
            // InternalCal.g:11118:4: (lv_patterns_2_0= ruleAstPattern )
            // InternalCal.g:11119:5: lv_patterns_2_0= ruleAstPattern
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstPatternDeconstructionAccess().getPatternsAstPatternParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_patterns_2_0=ruleAstPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstPatternDeconstructionRule());
              					}
              					add(
              						current,
              						"patterns",
              						lv_patterns_2_0,
              						"streamblocks.eclipse.cal.Cal.AstPattern");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:11136:3: (otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) ) )*
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==28) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    // InternalCal.g:11137:4: otherlv_3= ',' ( (lv_patterns_4_0= ruleAstPattern ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getAstPatternDeconstructionAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:11141:4: ( (lv_patterns_4_0= ruleAstPattern ) )
            	    // InternalCal.g:11142:5: (lv_patterns_4_0= ruleAstPattern )
            	    {
            	    // InternalCal.g:11142:5: (lv_patterns_4_0= ruleAstPattern )
            	    // InternalCal.g:11143:6: lv_patterns_4_0= ruleAstPattern
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstPatternDeconstructionAccess().getPatternsAstPatternParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_patterns_4_0=ruleAstPattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstPatternDeconstructionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"patterns",
            	      							lv_patterns_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstPattern");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);

            otherlv_5=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAstPatternDeconstructionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstPatternDeconstruction"


    // $ANTLR start "entryRuleAstTypeBuiltIn"
    // InternalCal.g:11169:1: entryRuleAstTypeBuiltIn returns [String current=null] : iv_ruleAstTypeBuiltIn= ruleAstTypeBuiltIn EOF ;
    public final String entryRuleAstTypeBuiltIn() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAstTypeBuiltIn = null;


        try {
            // InternalCal.g:11169:54: (iv_ruleAstTypeBuiltIn= ruleAstTypeBuiltIn EOF )
            // InternalCal.g:11170:2: iv_ruleAstTypeBuiltIn= ruleAstTypeBuiltIn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeBuiltInRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTypeBuiltIn=ruleAstTypeBuiltIn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTypeBuiltIn.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTypeBuiltIn"


    // $ANTLR start "ruleAstTypeBuiltIn"
    // InternalCal.g:11176:1: ruleAstTypeBuiltIn returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'int' | kw= 'uint' | kw= 'float' | kw= 'double' | kw= 'bool' | kw= 'List' | kw= 'String' | kw= 'set' | kw= 'map' ) ;
    public final AntlrDatatypeRuleToken ruleAstTypeBuiltIn() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCal.g:11182:2: ( (kw= 'int' | kw= 'uint' | kw= 'float' | kw= 'double' | kw= 'bool' | kw= 'List' | kw= 'String' | kw= 'set' | kw= 'map' ) )
            // InternalCal.g:11183:2: (kw= 'int' | kw= 'uint' | kw= 'float' | kw= 'double' | kw= 'bool' | kw= 'List' | kw= 'String' | kw= 'set' | kw= 'map' )
            {
            // InternalCal.g:11183:2: (kw= 'int' | kw= 'uint' | kw= 'float' | kw= 'double' | kw= 'bool' | kw= 'List' | kw= 'String' | kw= 'set' | kw= 'map' )
            int alt234=9;
            switch ( input.LA(1) ) {
            case 110:
                {
                alt234=1;
                }
                break;
            case 111:
                {
                alt234=2;
                }
                break;
            case 112:
                {
                alt234=3;
                }
                break;
            case 113:
                {
                alt234=4;
                }
                break;
            case 114:
                {
                alt234=5;
                }
                break;
            case 115:
                {
                alt234=6;
                }
                break;
            case 116:
                {
                alt234=7;
                }
                break;
            case 117:
                {
                alt234=8;
                }
                break;
            case 99:
                {
                alt234=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }

            switch (alt234) {
                case 1 :
                    // InternalCal.g:11184:3: kw= 'int'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getIntKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCal.g:11190:3: kw= 'uint'
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getUintKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCal.g:11196:3: kw= 'float'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getFloatKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCal.g:11202:3: kw= 'double'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getDoubleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCal.g:11208:3: kw= 'bool'
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getBoolKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCal.g:11214:3: kw= 'List'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getListKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCal.g:11220:3: kw= 'String'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getStringKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalCal.g:11226:3: kw= 'set'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getSetKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalCal.g:11232:3: kw= 'map'
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAstTypeBuiltInAccess().getMapKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTypeBuiltIn"


    // $ANTLR start "entryRuleAstType"
    // InternalCal.g:11241:1: entryRuleAstType returns [EObject current=null] : iv_ruleAstType= ruleAstType EOF ;
    public final EObject entryRuleAstType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstType = null;


        try {
            // InternalCal.g:11241:48: (iv_ruleAstType= ruleAstType EOF )
            // InternalCal.g:11242:2: iv_ruleAstType= ruleAstType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstType=ruleAstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstType"


    // $ANTLR start "ruleAstType"
    // InternalCal.g:11248:1: ruleAstType returns [EObject current=null] : ( () ( ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) | ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* ) | (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' ) ) ) ;
    public final EObject ruleAstType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_builtin_1_0 = null;

        EObject lv_typeParams_2_0 = null;

        EObject lv_dimensions_4_0 = null;

        EObject lv_typeParams_7_0 = null;

        EObject lv_dimensions_9_0 = null;

        EObject lv_domain_12_0 = null;

        EObject lv_domain_14_0 = null;

        EObject lv_codomain_16_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11254:2: ( ( () ( ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) | ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* ) | (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' ) ) ) )
            // InternalCal.g:11255:2: ( () ( ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) | ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* ) | (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' ) ) )
            {
            // InternalCal.g:11255:2: ( () ( ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) | ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* ) | (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' ) ) )
            // InternalCal.g:11256:3: () ( ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) | ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* ) | (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' ) )
            {
            // InternalCal.g:11256:3: ()
            // InternalCal.g:11257:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAstTypeAccess().getAstTypeAction_0(),
              					current);
              			
            }

            }

            // InternalCal.g:11263:3: ( ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) | ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* ) | (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' ) )
            int alt242=3;
            switch ( input.LA(1) ) {
            case 99:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
                {
                alt242=1;
                }
                break;
            case RULE_ID:
                {
                alt242=2;
                }
                break;
            case 36:
                {
                alt242=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }

            switch (alt242) {
                case 1 :
                    // InternalCal.g:11264:4: ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* )
                    {
                    // InternalCal.g:11264:4: ( ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* )
                    // InternalCal.g:11265:5: ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) ) ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )? (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )*
                    {
                    // InternalCal.g:11265:5: ( (lv_builtin_1_0= ruleAstTypeBuiltIn ) )
                    // InternalCal.g:11266:6: (lv_builtin_1_0= ruleAstTypeBuiltIn )
                    {
                    // InternalCal.g:11266:6: (lv_builtin_1_0= ruleAstTypeBuiltIn )
                    // InternalCal.g:11267:7: lv_builtin_1_0= ruleAstTypeBuiltIn
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAstTypeAccess().getBuiltinAstTypeBuiltInParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_144);
                    lv_builtin_1_0=ruleAstTypeBuiltIn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAstTypeRule());
                      							}
                      							set(
                      								current,
                      								"builtin",
                      								lv_builtin_1_0,
                      								"streamblocks.eclipse.cal.Cal.AstTypeBuiltIn");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalCal.g:11284:5: ( (lv_typeParams_2_0= ruleAstTypeParameterList ) )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==27) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // InternalCal.g:11285:6: (lv_typeParams_2_0= ruleAstTypeParameterList )
                            {
                            // InternalCal.g:11285:6: (lv_typeParams_2_0= ruleAstTypeParameterList )
                            // InternalCal.g:11286:7: lv_typeParams_2_0= ruleAstTypeParameterList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAstTypeAccess().getTypeParamsAstTypeParameterListParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_145);
                            lv_typeParams_2_0=ruleAstTypeParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAstTypeRule());
                              							}
                              							set(
                              								current,
                              								"typeParams",
                              								lv_typeParams_2_0,
                              								"streamblocks.eclipse.cal.Cal.AstTypeParameterList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalCal.g:11303:5: (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )*
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==36) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // InternalCal.g:11304:6: otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']'
                    	    {
                    	    otherlv_3=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalCal.g:11308:6: ( (lv_dimensions_4_0= ruleAstExpression ) )
                    	    // InternalCal.g:11309:7: (lv_dimensions_4_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:11309:7: (lv_dimensions_4_0= ruleAstExpression )
                    	    // InternalCal.g:11310:8: lv_dimensions_4_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getAstTypeAccess().getDimensionsAstExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_36);
                    	    lv_dimensions_4_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getAstTypeRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"dimensions",
                    	      									lv_dimensions_4_0,
                    	      									"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,37,FOLLOW_145); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_1_0_2_2());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop236;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:11334:4: ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* )
                    {
                    // InternalCal.g:11334:4: ( ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )* )
                    // InternalCal.g:11335:5: ( (otherlv_6= RULE_ID ) ) ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )? (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )*
                    {
                    // InternalCal.g:11335:5: ( (otherlv_6= RULE_ID ) )
                    // InternalCal.g:11336:6: (otherlv_6= RULE_ID )
                    {
                    // InternalCal.g:11336:6: (otherlv_6= RULE_ID )
                    // InternalCal.g:11337:7: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAstTypeRule());
                      							}
                      						
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_6, grammarAccess.getAstTypeAccess().getNameAstTypeUserCrossReference_1_1_0_0());
                      						
                    }

                    }


                    }

                    // InternalCal.g:11348:5: ( (lv_typeParams_7_0= ruleAstTypeParameterList ) )?
                    int alt237=2;
                    int LA237_0 = input.LA(1);

                    if ( (LA237_0==27) ) {
                        alt237=1;
                    }
                    switch (alt237) {
                        case 1 :
                            // InternalCal.g:11349:6: (lv_typeParams_7_0= ruleAstTypeParameterList )
                            {
                            // InternalCal.g:11349:6: (lv_typeParams_7_0= ruleAstTypeParameterList )
                            // InternalCal.g:11350:7: lv_typeParams_7_0= ruleAstTypeParameterList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAstTypeAccess().getTypeParamsAstTypeParameterListParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_145);
                            lv_typeParams_7_0=ruleAstTypeParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAstTypeRule());
                              							}
                              							set(
                              								current,
                              								"typeParams",
                              								lv_typeParams_7_0,
                              								"streamblocks.eclipse.cal.Cal.AstTypeParameterList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalCal.g:11367:5: (otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']' )*
                    loop238:
                    do {
                        int alt238=2;
                        int LA238_0 = input.LA(1);

                        if ( (LA238_0==36) ) {
                            alt238=1;
                        }


                        switch (alt238) {
                    	case 1 :
                    	    // InternalCal.g:11368:6: otherlv_8= '[' ( (lv_dimensions_9_0= ruleAstExpression ) ) otherlv_10= ']'
                    	    {
                    	    otherlv_8=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalCal.g:11372:6: ( (lv_dimensions_9_0= ruleAstExpression ) )
                    	    // InternalCal.g:11373:7: (lv_dimensions_9_0= ruleAstExpression )
                    	    {
                    	    // InternalCal.g:11373:7: (lv_dimensions_9_0= ruleAstExpression )
                    	    // InternalCal.g:11374:8: lv_dimensions_9_0= ruleAstExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getAstTypeAccess().getDimensionsAstExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_36);
                    	    lv_dimensions_9_0=ruleAstExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getAstTypeRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"dimensions",
                    	      									lv_dimensions_9_0,
                    	      									"streamblocks.eclipse.cal.Cal.AstExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_10=(Token)match(input,37,FOLLOW_145); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_1_1_2_2());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop238;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalCal.g:11398:4: (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' )
                    {
                    // InternalCal.g:11398:4: (otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']' )
                    // InternalCal.g:11399:5: otherlv_11= '[' ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )? otherlv_15= '-->' ( (lv_codomain_16_0= ruleAstType ) )? otherlv_17= ']'
                    {
                    otherlv_11=(Token)match(input,36,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_1_2_0());
                      				
                    }
                    // InternalCal.g:11403:5: ( ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )* )?
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==RULE_ID||LA240_0==36||LA240_0==99||(LA240_0>=110 && LA240_0<=117)) ) {
                        alt240=1;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalCal.g:11404:6: ( (lv_domain_12_0= ruleAstType ) ) (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )*
                            {
                            // InternalCal.g:11404:6: ( (lv_domain_12_0= ruleAstType ) )
                            // InternalCal.g:11405:7: (lv_domain_12_0= ruleAstType )
                            {
                            // InternalCal.g:11405:7: (lv_domain_12_0= ruleAstType )
                            // InternalCal.g:11406:8: lv_domain_12_0= ruleAstType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_1_2_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_147);
                            lv_domain_12_0=ruleAstType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getAstTypeRule());
                              								}
                              								add(
                              									current,
                              									"domain",
                              									lv_domain_12_0,
                              									"streamblocks.eclipse.cal.Cal.AstType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalCal.g:11423:6: (otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) ) )*
                            loop239:
                            do {
                                int alt239=2;
                                int LA239_0 = input.LA(1);

                                if ( (LA239_0==28) ) {
                                    alt239=1;
                                }


                                switch (alt239) {
                            	case 1 :
                            	    // InternalCal.g:11424:7: otherlv_13= ',' ( (lv_domain_14_0= ruleAstType ) )
                            	    {
                            	    otherlv_13=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_13, grammarAccess.getAstTypeAccess().getCommaKeyword_1_2_1_1_0());
                            	      						
                            	    }
                            	    // InternalCal.g:11428:7: ( (lv_domain_14_0= ruleAstType ) )
                            	    // InternalCal.g:11429:8: (lv_domain_14_0= ruleAstType )
                            	    {
                            	    // InternalCal.g:11429:8: (lv_domain_14_0= ruleAstType )
                            	    // InternalCal.g:11430:9: lv_domain_14_0= ruleAstType
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_1_2_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_147);
                            	    lv_domain_14_0=ruleAstType();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getAstTypeRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"domain",
                            	      										lv_domain_14_0,
                            	      										"streamblocks.eclipse.cal.Cal.AstType");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop239;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,39,FOLLOW_148); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getAstTypeAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1_2_2());
                      				
                    }
                    // InternalCal.g:11453:5: ( (lv_codomain_16_0= ruleAstType ) )?
                    int alt241=2;
                    int LA241_0 = input.LA(1);

                    if ( (LA241_0==RULE_ID||LA241_0==36||LA241_0==99||(LA241_0>=110 && LA241_0<=117)) ) {
                        alt241=1;
                    }
                    switch (alt241) {
                        case 1 :
                            // InternalCal.g:11454:6: (lv_codomain_16_0= ruleAstType )
                            {
                            // InternalCal.g:11454:6: (lv_codomain_16_0= ruleAstType )
                            // InternalCal.g:11455:7: lv_codomain_16_0= ruleAstType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAstTypeAccess().getCodomainAstTypeParserRuleCall_1_2_3_0());
                              						
                            }
                            pushFollow(FOLLOW_36);
                            lv_codomain_16_0=ruleAstType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAstTypeRule());
                              							}
                              							set(
                              								current,
                              								"codomain",
                              								lv_codomain_16_0,
                              								"streamblocks.eclipse.cal.Cal.AstType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_1_2_4());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstType"


    // $ANTLR start "entryRuleAstTypeParameterList"
    // InternalCal.g:11482:1: entryRuleAstTypeParameterList returns [EObject current=null] : iv_ruleAstTypeParameterList= ruleAstTypeParameterList EOF ;
    public final EObject entryRuleAstTypeParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTypeParameterList = null;


        try {
            // InternalCal.g:11482:61: (iv_ruleAstTypeParameterList= ruleAstTypeParameterList EOF )
            // InternalCal.g:11483:2: iv_ruleAstTypeParameterList= ruleAstTypeParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTypeParameterList=ruleAstTypeParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTypeParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTypeParameterList"


    // $ANTLR start "ruleAstTypeParameterList"
    // InternalCal.g:11489:1: ruleAstTypeParameterList returns [EObject current=null] : (otherlv_0= '(' ( (lv_params_1_0= ruleAstTypeParam ) ) (otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleAstTypeParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_params_1_0 = null;

        EObject lv_params_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11495:2: ( (otherlv_0= '(' ( (lv_params_1_0= ruleAstTypeParam ) ) (otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) ) )* otherlv_4= ')' ) )
            // InternalCal.g:11496:2: (otherlv_0= '(' ( (lv_params_1_0= ruleAstTypeParam ) ) (otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) ) )* otherlv_4= ')' )
            {
            // InternalCal.g:11496:2: (otherlv_0= '(' ( (lv_params_1_0= ruleAstTypeParam ) ) (otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) ) )* otherlv_4= ')' )
            // InternalCal.g:11497:3: otherlv_0= '(' ( (lv_params_1_0= ruleAstTypeParam ) ) (otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,27,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstTypeParameterListAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalCal.g:11501:3: ( (lv_params_1_0= ruleAstTypeParam ) )
            // InternalCal.g:11502:4: (lv_params_1_0= ruleAstTypeParam )
            {
            // InternalCal.g:11502:4: (lv_params_1_0= ruleAstTypeParam )
            // InternalCal.g:11503:5: lv_params_1_0= ruleAstTypeParam
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstTypeParameterListAccess().getParamsAstTypeParamParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_params_1_0=ruleAstTypeParam();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstTypeParameterListRule());
              					}
              					add(
              						current,
              						"params",
              						lv_params_1_0,
              						"streamblocks.eclipse.cal.Cal.AstTypeParam");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:11520:3: (otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) ) )*
            loop243:
            do {
                int alt243=2;
                int LA243_0 = input.LA(1);

                if ( (LA243_0==28) ) {
                    alt243=1;
                }


                switch (alt243) {
            	case 1 :
            	    // InternalCal.g:11521:4: otherlv_2= ',' ( (lv_params_3_0= ruleAstTypeParam ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_149); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstTypeParameterListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:11525:4: ( (lv_params_3_0= ruleAstTypeParam ) )
            	    // InternalCal.g:11526:5: (lv_params_3_0= ruleAstTypeParam )
            	    {
            	    // InternalCal.g:11526:5: (lv_params_3_0= ruleAstTypeParam )
            	    // InternalCal.g:11527:6: lv_params_3_0= ruleAstTypeParam
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstTypeParameterListAccess().getParamsAstTypeParamParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_params_3_0=ruleAstTypeParam();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstTypeParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"params",
            	      							lv_params_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstTypeParam");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop243;
                }
            } while (true);

            otherlv_4=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAstTypeParameterListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTypeParameterList"


    // $ANTLR start "entryRuleAstTypeParam"
    // InternalCal.g:11553:1: entryRuleAstTypeParam returns [EObject current=null] : iv_ruleAstTypeParam= ruleAstTypeParam EOF ;
    public final EObject entryRuleAstTypeParam() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstTypeParam = null;


        try {
            // InternalCal.g:11553:53: (iv_ruleAstTypeParam= ruleAstTypeParam EOF )
            // InternalCal.g:11554:2: iv_ruleAstTypeParam= ruleAstTypeParam EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstTypeParamRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstTypeParam=ruleAstTypeParam();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstTypeParam; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstTypeParam"


    // $ANTLR start "ruleAstTypeParam"
    // InternalCal.g:11560:1: ruleAstTypeParam returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) ) | ( ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) ) ) ) ;
    public final EObject ruleAstTypeParam() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_name_3_1=null;
        Token lv_name_3_2=null;
        Token otherlv_4=null;
        EObject lv_value_2_0 = null;

        EObject lv_type_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11566:2: ( ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) ) | ( ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) ) ) ) )
            // InternalCal.g:11567:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) ) | ( ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) ) ) )
            {
            // InternalCal.g:11567:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) ) | ( ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) ) ) )
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==RULE_ID) ) {
                int LA245_1 = input.LA(2);

                if ( (LA245_1==18) ) {
                    alt245=2;
                }
                else if ( (LA245_1==23) ) {
                    alt245=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 245, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA245_0==46) ) {
                alt245=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;
            }
            switch (alt245) {
                case 1 :
                    // InternalCal.g:11568:3: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )
                    {
                    // InternalCal.g:11568:3: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) ) )
                    // InternalCal.g:11569:4: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAstExpression ) )
                    {
                    // InternalCal.g:11569:4: ( (lv_name_0_0= RULE_ID ) )
                    // InternalCal.g:11570:5: (lv_name_0_0= RULE_ID )
                    {
                    // InternalCal.g:11570:5: (lv_name_0_0= RULE_ID )
                    // InternalCal.g:11571:6: lv_name_0_0= RULE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getAstTypeParamAccess().getNameIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAstTypeParamRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"streamblocks.eclipse.cal.Cal.ID");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAstTypeParamAccess().getEqualsSignKeyword_0_1());
                      			
                    }
                    // InternalCal.g:11591:4: ( (lv_value_2_0= ruleAstExpression ) )
                    // InternalCal.g:11592:5: (lv_value_2_0= ruleAstExpression )
                    {
                    // InternalCal.g:11592:5: (lv_value_2_0= ruleAstExpression )
                    // InternalCal.g:11593:6: lv_value_2_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstTypeParamAccess().getValueAstExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstTypeParamRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_2_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:11612:3: ( ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) ) )
                    {
                    // InternalCal.g:11612:3: ( ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) ) )
                    // InternalCal.g:11613:4: ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) ) otherlv_4= ':' ( (lv_type_5_0= ruleAstType ) )
                    {
                    // InternalCal.g:11613:4: ( ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) ) )
                    // InternalCal.g:11614:5: ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) )
                    {
                    // InternalCal.g:11614:5: ( (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' ) )
                    // InternalCal.g:11615:6: (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' )
                    {
                    // InternalCal.g:11615:6: (lv_name_3_1= RULE_ID | lv_name_3_2= 'type' )
                    int alt244=2;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==RULE_ID) ) {
                        alt244=1;
                    }
                    else if ( (LA244_0==46) ) {
                        alt244=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 244, 0, input);

                        throw nvae;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalCal.g:11616:7: lv_name_3_1= RULE_ID
                            {
                            lv_name_3_1=(Token)match(input,RULE_ID,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_3_1, grammarAccess.getAstTypeParamAccess().getNameIDTerminalRuleCall_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstTypeParamRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_3_1,
                              								"streamblocks.eclipse.cal.Cal.ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalCal.g:11631:7: lv_name_3_2= 'type'
                            {
                            lv_name_3_2=(Token)match(input,46,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_3_2, grammarAccess.getAstTypeParamAccess().getNameTypeKeyword_1_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstTypeParamRule());
                              							}
                              							setWithLastConsumed(current, "name", lv_name_3_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_4=(Token)match(input,18,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAstTypeParamAccess().getColonKeyword_1_1());
                      			
                    }
                    // InternalCal.g:11648:4: ( (lv_type_5_0= ruleAstType ) )
                    // InternalCal.g:11649:5: (lv_type_5_0= ruleAstType )
                    {
                    // InternalCal.g:11649:5: (lv_type_5_0= ruleAstType )
                    // InternalCal.g:11650:6: lv_type_5_0= ruleAstType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstTypeParamAccess().getTypeAstTypeParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_5_0=ruleAstType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstTypeParamRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_5_0,
                      							"streamblocks.eclipse.cal.Cal.AstType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstTypeParam"


    // $ANTLR start "entryRuleAstVariableDeclaration"
    // InternalCal.g:11672:1: entryRuleAstVariableDeclaration returns [EObject current=null] : iv_ruleAstVariableDeclaration= ruleAstVariableDeclaration EOF ;
    public final EObject entryRuleAstVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstVariableDeclaration = null;


        try {
            // InternalCal.g:11672:63: (iv_ruleAstVariableDeclaration= ruleAstVariableDeclaration EOF )
            // InternalCal.g:11673:2: iv_ruleAstVariableDeclaration= ruleAstVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstVariableDeclaration=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstVariableDeclaration"


    // $ANTLR start "ruleAstVariableDeclaration"
    // InternalCal.g:11679:1: ruleAstVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) ;
    public final EObject ruleAstVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_dimensions_4_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11685:2: ( ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* ) )
            // InternalCal.g:11686:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* )
            {
            // InternalCal.g:11686:2: ( ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )* )
            // InternalCal.g:11687:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )* ( (lv_type_1_0= ruleAstType ) ) ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )*
            {
            // InternalCal.g:11687:3: ( (lv_annotations_0_0= ruleAstAnnotation ) )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==108) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // InternalCal.g:11688:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    {
            	    // InternalCal.g:11688:4: (lv_annotations_0_0= ruleAstAnnotation )
            	    // InternalCal.g:11689:5: lv_annotations_0_0= ruleAstAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAstVariableDeclarationAccess().getAnnotationsAstAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_annotations_0_0=ruleAstAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAstVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"streamblocks.eclipse.cal.Cal.AstAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);

            // InternalCal.g:11706:3: ( (lv_type_1_0= ruleAstType ) )
            // InternalCal.g:11707:4: (lv_type_1_0= ruleAstType )
            {
            // InternalCal.g:11707:4: (lv_type_1_0= ruleAstType )
            // InternalCal.g:11708:5: lv_type_1_0= ruleAstType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAstVariableDeclarationAccess().getTypeAstTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_1_0=ruleAstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAstVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"streamblocks.eclipse.cal.Cal.AstType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCal.g:11725:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalCal.g:11726:4: (lv_name_2_0= RULE_ID )
            {
            // InternalCal.g:11726:4: (lv_name_2_0= RULE_ID )
            // InternalCal.g:11727:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getAstVariableDeclarationAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstVariableDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:11743:3: (otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']' )*
            loop247:
            do {
                int alt247=2;
                int LA247_0 = input.LA(1);

                if ( (LA247_0==36) ) {
                    alt247=1;
                }


                switch (alt247) {
            	case 1 :
            	    // InternalCal.g:11744:4: otherlv_3= '[' ( (lv_dimensions_4_0= ruleAstExpression ) ) otherlv_5= ']'
            	    {
            	    otherlv_3=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getAstVariableDeclarationAccess().getLeftSquareBracketKeyword_3_0());
            	      			
            	    }
            	    // InternalCal.g:11748:4: ( (lv_dimensions_4_0= ruleAstExpression ) )
            	    // InternalCal.g:11749:5: (lv_dimensions_4_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:11749:5: (lv_dimensions_4_0= ruleAstExpression )
            	    // InternalCal.g:11750:6: lv_dimensions_4_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstVariableDeclarationAccess().getDimensionsAstExpressionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_dimensions_4_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"dimensions",
            	      							lv_dimensions_4_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,37,FOLLOW_145); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getAstVariableDeclarationAccess().getRightSquareBracketKeyword_3_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstVariableDeclaration"


    // $ANTLR start "entryRuleAstValuedVariableDeclaration"
    // InternalCal.g:11776:1: entryRuleAstValuedVariableDeclaration returns [EObject current=null] : iv_ruleAstValuedVariableDeclaration= ruleAstValuedVariableDeclaration EOF ;
    public final EObject entryRuleAstValuedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstValuedVariableDeclaration = null;


        try {
            // InternalCal.g:11776:69: (iv_ruleAstValuedVariableDeclaration= ruleAstValuedVariableDeclaration EOF )
            // InternalCal.g:11777:2: iv_ruleAstValuedVariableDeclaration= ruleAstValuedVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstValuedVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstValuedVariableDeclaration=ruleAstValuedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstValuedVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstValuedVariableDeclaration"


    // $ANTLR start "ruleAstValuedVariableDeclaration"
    // InternalCal.g:11783:1: ruleAstValuedVariableDeclaration returns [EObject current=null] : (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) ) )? ) ;
    public final EObject ruleAstValuedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_constant_1_0=null;
        Token otherlv_2=null;
        EObject this_AstVariableDeclaration_0 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11789:2: ( (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) ) )? ) )
            // InternalCal.g:11790:2: (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) ) )? )
            {
            // InternalCal.g:11790:2: (this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) ) )? )
            // InternalCal.g:11791:3: this_AstVariableDeclaration_0= ruleAstVariableDeclaration ( ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAstValuedVariableDeclarationAccess().getAstVariableDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_150);
            this_AstVariableDeclaration_0=ruleAstVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AstVariableDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCal.g:11799:3: ( ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) ) )?
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==23||LA249_0==66) ) {
                alt249=1;
            }
            switch (alt249) {
                case 1 :
                    // InternalCal.g:11800:4: ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' ) ( (lv_value_3_0= ruleAstExpression ) )
                    {
                    // InternalCal.g:11800:4: ( ( (lv_constant_1_0= '=' ) ) | otherlv_2= ':=' )
                    int alt248=2;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==23) ) {
                        alt248=1;
                    }
                    else if ( (LA248_0==66) ) {
                        alt248=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 248, 0, input);

                        throw nvae;
                    }
                    switch (alt248) {
                        case 1 :
                            // InternalCal.g:11801:5: ( (lv_constant_1_0= '=' ) )
                            {
                            // InternalCal.g:11801:5: ( (lv_constant_1_0= '=' ) )
                            // InternalCal.g:11802:6: (lv_constant_1_0= '=' )
                            {
                            // InternalCal.g:11802:6: (lv_constant_1_0= '=' )
                            // InternalCal.g:11803:7: lv_constant_1_0= '='
                            {
                            lv_constant_1_0=(Token)match(input,23,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_constant_1_0, grammarAccess.getAstValuedVariableDeclarationAccess().getConstantEqualsSignKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAstValuedVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "constant", true, "=");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalCal.g:11816:5: otherlv_2= ':='
                            {
                            otherlv_2=(Token)match(input,66,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getAstValuedVariableDeclarationAccess().getColonEqualsSignKeyword_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalCal.g:11821:4: ( (lv_value_3_0= ruleAstExpression ) )
                    // InternalCal.g:11822:5: (lv_value_3_0= ruleAstExpression )
                    {
                    // InternalCal.g:11822:5: (lv_value_3_0= ruleAstExpression )
                    // InternalCal.g:11823:6: lv_value_3_0= ruleAstExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstValuedVariableDeclarationAccess().getValueAstExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleAstExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstValuedVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"streamblocks.eclipse.cal.Cal.AstExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstValuedVariableDeclaration"


    // $ANTLR start "entryRuleAstMemberAccess"
    // InternalCal.g:11845:1: entryRuleAstMemberAccess returns [EObject current=null] : iv_ruleAstMemberAccess= ruleAstMemberAccess EOF ;
    public final EObject entryRuleAstMemberAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstMemberAccess = null;


        try {
            // InternalCal.g:11845:56: (iv_ruleAstMemberAccess= ruleAstMemberAccess EOF )
            // InternalCal.g:11846:2: iv_ruleAstMemberAccess= ruleAstMemberAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstMemberAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstMemberAccess=ruleAstMemberAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstMemberAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstMemberAccess"


    // $ANTLR start "ruleAstMemberAccess"
    // InternalCal.g:11852:1: ruleAstMemberAccess returns [EObject current=null] : (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ) ;
    public final EObject ruleAstMemberAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_memberIndex_3_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11858:2: ( (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']' )* ) )
            // InternalCal.g:11859:2: (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']' )* )
            {
            // InternalCal.g:11859:2: (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']' )* )
            // InternalCal.g:11860:3: otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']' )*
            {
            otherlv_0=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstMemberAccessAccess().getFullStopKeyword_0());
              		
            }
            // InternalCal.g:11864:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalCal.g:11865:4: (lv_name_1_0= RULE_ID )
            {
            // InternalCal.g:11865:4: (lv_name_1_0= RULE_ID )
            // InternalCal.g:11866:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAstMemberAccessAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstMemberAccessRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:11882:3: (otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']' )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==36) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // InternalCal.g:11883:4: otherlv_2= '[' ( (lv_memberIndex_3_0= ruleAstExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,36,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAstMemberAccessAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalCal.g:11887:4: ( (lv_memberIndex_3_0= ruleAstExpression ) )
            	    // InternalCal.g:11888:5: (lv_memberIndex_3_0= ruleAstExpression )
            	    {
            	    // InternalCal.g:11888:5: (lv_memberIndex_3_0= ruleAstExpression )
            	    // InternalCal.g:11889:6: lv_memberIndex_3_0= ruleAstExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAstMemberAccessAccess().getMemberIndexAstExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_memberIndex_3_0=ruleAstExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAstMemberAccessRule());
            	      						}
            	      						add(
            	      							current,
            	      							"memberIndex",
            	      							lv_memberIndex_3_0,
            	      							"streamblocks.eclipse.cal.Cal.AstExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,37,FOLLOW_145); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getAstMemberAccessAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstMemberAccess"


    // $ANTLR start "entryRuleAstAnnotation"
    // InternalCal.g:11915:1: entryRuleAstAnnotation returns [EObject current=null] : iv_ruleAstAnnotation= ruleAstAnnotation EOF ;
    public final EObject entryRuleAstAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstAnnotation = null;


        try {
            // InternalCal.g:11915:54: (iv_ruleAstAnnotation= ruleAstAnnotation EOF )
            // InternalCal.g:11916:2: iv_ruleAstAnnotation= ruleAstAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstAnnotation=ruleAstAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstAnnotation"


    // $ANTLR start "ruleAstAnnotation"
    // InternalCal.g:11922:1: ruleAstAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')' )? ) ;
    public final EObject ruleAstAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_arguments_3_0 = null;

        EObject lv_arguments_5_0 = null;



        	enterRule();

        try {
            // InternalCal.g:11928:2: ( (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')' )? ) )
            // InternalCal.g:11929:2: (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')' )? )
            {
            // InternalCal.g:11929:2: (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')' )? )
            // InternalCal.g:11930:3: otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')' )?
            {
            otherlv_0=(Token)match(input,108,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAstAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalCal.g:11934:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalCal.g:11935:4: (lv_name_1_0= RULE_ID )
            {
            // InternalCal.g:11935:4: (lv_name_1_0= RULE_ID )
            // InternalCal.g:11936:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAstAnnotationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            // InternalCal.g:11952:3: (otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')' )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==27) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalCal.g:11953:4: otherlv_2= '(' ( (lv_arguments_3_0= ruleAstAnnotationArgument ) ) (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAstAnnotationAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalCal.g:11957:4: ( (lv_arguments_3_0= ruleAstAnnotationArgument ) )
                    // InternalCal.g:11958:5: (lv_arguments_3_0= ruleAstAnnotationArgument )
                    {
                    // InternalCal.g:11958:5: (lv_arguments_3_0= ruleAstAnnotationArgument )
                    // InternalCal.g:11959:6: lv_arguments_3_0= ruleAstAnnotationArgument
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAstAnnotationAccess().getArgumentsAstAnnotationArgumentParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_arguments_3_0=ruleAstAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAstAnnotationRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_3_0,
                      							"streamblocks.eclipse.cal.Cal.AstAnnotationArgument");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCal.g:11976:4: (otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) ) )*
                    loop251:
                    do {
                        int alt251=2;
                        int LA251_0 = input.LA(1);

                        if ( (LA251_0==28) ) {
                            alt251=1;
                        }


                        switch (alt251) {
                    	case 1 :
                    	    // InternalCal.g:11977:5: otherlv_4= ',' ( (lv_arguments_5_0= ruleAstAnnotationArgument ) )
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAstAnnotationAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalCal.g:11981:5: ( (lv_arguments_5_0= ruleAstAnnotationArgument ) )
                    	    // InternalCal.g:11982:6: (lv_arguments_5_0= ruleAstAnnotationArgument )
                    	    {
                    	    // InternalCal.g:11982:6: (lv_arguments_5_0= ruleAstAnnotationArgument )
                    	    // InternalCal.g:11983:7: lv_arguments_5_0= ruleAstAnnotationArgument
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAstAnnotationAccess().getArgumentsAstAnnotationArgumentParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_arguments_5_0=ruleAstAnnotationArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAstAnnotationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_5_0,
                    	      								"streamblocks.eclipse.cal.Cal.AstAnnotationArgument");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop251;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAstAnnotationAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstAnnotation"


    // $ANTLR start "entryRuleAstAnnotationArgument"
    // InternalCal.g:12010:1: entryRuleAstAnnotationArgument returns [EObject current=null] : iv_ruleAstAnnotationArgument= ruleAstAnnotationArgument EOF ;
    public final EObject entryRuleAstAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAstAnnotationArgument = null;


        try {
            // InternalCal.g:12010:62: (iv_ruleAstAnnotationArgument= ruleAstAnnotationArgument EOF )
            // InternalCal.g:12011:2: iv_ruleAstAnnotationArgument= ruleAstAnnotationArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAstAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAstAnnotationArgument=ruleAstAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAstAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAstAnnotationArgument"


    // $ANTLR start "ruleAstAnnotationArgument"
    // InternalCal.g:12017:1: ruleAstAnnotationArgument returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= RULE_STRING ) ) ) ;
    public final EObject ruleAstAnnotationArgument() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_value_2_0=null;


        	enterRule();

        try {
            // InternalCal.g:12023:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= RULE_STRING ) ) ) )
            // InternalCal.g:12024:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= RULE_STRING ) ) )
            {
            // InternalCal.g:12024:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= RULE_STRING ) ) )
            // InternalCal.g:12025:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= RULE_STRING ) )
            {
            // InternalCal.g:12025:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalCal.g:12026:4: (lv_name_0_0= RULE_ID )
            {
            // InternalCal.g:12026:4: (lv_name_0_0= RULE_ID )
            // InternalCal.g:12027:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAstAnnotationArgumentAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstAnnotationArgumentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"streamblocks.eclipse.cal.Cal.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_151); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAstAnnotationArgumentAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalCal.g:12047:3: ( (lv_value_2_0= RULE_STRING ) )
            // InternalCal.g:12048:4: (lv_value_2_0= RULE_STRING )
            {
            // InternalCal.g:12048:4: (lv_value_2_0= RULE_STRING )
            // InternalCal.g:12049:5: lv_value_2_0= RULE_STRING
            {
            lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_2_0, grammarAccess.getAstAnnotationArgumentAccess().getValueSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAstAnnotationArgumentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_2_0,
              						"streamblocks.eclipse.cal.Cal.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAstAnnotationArgument"


    // $ANTLR start "ruleImportKind"
    // InternalCal.g:12069:1: ruleImportKind returns [Enumerator current=null] : ( (enumLiteral_0= 'var' ) | (enumLiteral_1= 'type' ) | (enumLiteral_2= 'entity' ) ) ;
    public final Enumerator ruleImportKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalCal.g:12075:2: ( ( (enumLiteral_0= 'var' ) | (enumLiteral_1= 'type' ) | (enumLiteral_2= 'entity' ) ) )
            // InternalCal.g:12076:2: ( (enumLiteral_0= 'var' ) | (enumLiteral_1= 'type' ) | (enumLiteral_2= 'entity' ) )
            {
            // InternalCal.g:12076:2: ( (enumLiteral_0= 'var' ) | (enumLiteral_1= 'type' ) | (enumLiteral_2= 'entity' ) )
            int alt253=3;
            switch ( input.LA(1) ) {
            case 31:
                {
                alt253=1;
                }
                break;
            case 46:
                {
                alt253=2;
                }
                break;
            case 118:
                {
                alt253=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }

            switch (alt253) {
                case 1 :
                    // InternalCal.g:12077:3: (enumLiteral_0= 'var' )
                    {
                    // InternalCal.g:12077:3: (enumLiteral_0= 'var' )
                    // InternalCal.g:12078:4: enumLiteral_0= 'var'
                    {
                    enumLiteral_0=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportKindAccess().getVAREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getImportKindAccess().getVAREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalCal.g:12085:3: (enumLiteral_1= 'type' )
                    {
                    // InternalCal.g:12085:3: (enumLiteral_1= 'type' )
                    // InternalCal.g:12086:4: enumLiteral_1= 'type'
                    {
                    enumLiteral_1=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportKindAccess().getTYPEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getImportKindAccess().getTYPEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalCal.g:12093:3: (enumLiteral_2= 'entity' )
                    {
                    // InternalCal.g:12093:3: (enumLiteral_2= 'entity' )
                    // InternalCal.g:12094:4: enumLiteral_2= 'entity'
                    {
                    enumLiteral_2=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportKindAccess().getENTITYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getImportKindAccess().getENTITYEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportKind"

    // $ANTLR start synpred2_InternalCal
    public final void synpred2_InternalCal_fragment() throws RecognitionException {   
        // InternalCal.g:8627:5: ( ( () 'as' ) )
        // InternalCal.g:8627:6: ( () 'as' )
        {
        // InternalCal.g:8627:6: ( () 'as' )
        // InternalCal.g:8628:6: () 'as'
        {
        // InternalCal.g:8628:6: ()
        // InternalCal.g:8629:6: 
        {
        }

        match(input,96,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalCal

    // Delegated rules

    public final boolean synpred2_InternalCal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalCal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA165 dfa165 = new DFA165(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\4\1\uffff\1\4\4\uffff\2\4\1\27\1\12\1\34\2\4\1\27\1\12\1\34";
    static final String dfa_3s = "\1\165\1\uffff\1\4\4\uffff\1\165\1\4\1\27\1\12\1\35\1\4\1\165\1\27\1\12\1\35";
    static final String dfa_4s = "\1\uffff\1\5\1\uffff\1\1\1\2\1\3\1\4\12\uffff";
    static final String dfa_5s = "\21\uffff}>";
    static final String[] dfa_6s = {
            "\1\5\16\uffff\1\1\20\uffff\1\5\10\uffff\1\6\4\uffff\1\3\1\4\57\uffff\1\5\10\uffff\1\2\1\uffff\10\5",
            "",
            "\1\7",
            "",
            "",
            "",
            "",
            "\1\5\26\uffff\1\10\10\uffff\1\5\10\uffff\1\6\4\uffff\1\3\1\4\57\uffff\1\5\10\uffff\1\2\1\uffff\10\5",
            "\1\11",
            "\1\12",
            "\1\13",
            "\1\14\1\15",
            "\1\16",
            "\1\5\37\uffff\1\5\10\uffff\1\6\4\uffff\1\3\1\4\57\uffff\1\5\10\uffff\1\2\1\uffff\10\5",
            "\1\17",
            "\1\20",
            "\1\14\1\15"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 284:3: ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) )*";
        }
    }
    static final String dfa_7s = "\1\55\2\4\3\uffff\1\33\1\4\1\62\1\27\1\12\1\34\1\4\1\55\1\27\1\12\1\34";
    static final String dfa_8s = "\1\154\1\165\1\4\3\uffff\1\154\1\4\1\63\1\27\1\12\1\35\1\4\1\154\1\27\1\12\1\35";
    static final String dfa_9s = "\3\uffff\1\1\1\3\1\2\13\uffff";
    static final String[] dfa_10s = {
            "\1\1\76\uffff\1\2",
            "\1\3\37\uffff\1\3\15\uffff\1\5\1\4\57\uffff\1\3\10\uffff\1\3\1\uffff\10\3",
            "\1\6",
            "",
            "",
            "",
            "\1\7\21\uffff\1\10\76\uffff\1\2",
            "\1\11",
            "\1\5\1\4",
            "\1\12",
            "\1\13",
            "\1\14\1\15",
            "\1\16",
            "\1\10\76\uffff\1\2",
            "\1\17",
            "\1\20",
            "\1\14\1\15"
    };
    static final char[] dfa_7 = DFA.unpackEncodedStringToUnsignedChars(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final short[][] dfa_10 = unpackEncodedStringArray(dfa_10s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_7;
            this.max = dfa_8;
            this.accept = dfa_9;
            this.special = dfa_5;
            this.transition = dfa_10;
        }
        public String getDescription() {
            return "347:6: (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure )";
        }
    }
    static final String dfa_11s = "\27\uffff";
    static final String dfa_12s = "\1\4\1\uffff\1\4\3\uffff\1\4\4\uffff\1\4\1\uffff\1\4\1\60\1\27\1\12\1\34\2\4\1\27\1\12\1\34";
    static final String dfa_13s = "\1\165\1\uffff\1\4\3\uffff\1\165\4\uffff\1\165\1\uffff\1\4\1\63\1\27\1\12\1\35\1\4\1\165\1\27\1\12\1\35";
    static final String dfa_14s = "\1\uffff\1\11\1\uffff\1\1\1\2\1\3\1\uffff\1\5\1\6\1\7\1\10\1\uffff\1\4\12\uffff";
    static final String dfa_15s = "\27\uffff}>";
    static final String[] dfa_16s = {
            "\1\5\16\uffff\1\1\1\12\1\10\4\uffff\1\11\11\uffff\1\5\10\uffff\1\6\1\7\1\uffff\1\11\1\uffff\1\3\1\4\57\uffff\1\5\10\uffff\1\2\1\uffff\10\5",
            "",
            "\1\13",
            "",
            "",
            "",
            "\1\14\37\uffff\1\14\13\uffff\1\11\1\uffff\2\14\57\uffff\1\14\10\uffff\1\14\1\uffff\10\14",
            "",
            "",
            "",
            "",
            "\1\5\17\uffff\1\12\5\uffff\1\11\1\15\10\uffff\1\5\10\uffff\1\16\2\uffff\1\11\1\uffff\1\3\1\4\57\uffff\1\5\10\uffff\1\2\1\uffff\10\5",
            "",
            "\1\17",
            "\1\11\1\uffff\2\14",
            "\1\20",
            "\1\21",
            "\1\22\1\23",
            "\1\24",
            "\1\5\17\uffff\1\12\5\uffff\1\11\11\uffff\1\5\10\uffff\1\16\2\uffff\1\11\1\uffff\1\3\1\4\57\uffff\1\5\10\uffff\1\2\1\uffff\10\5",
            "\1\25",
            "\1\26",
            "\1\22\1\23"
    };

    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final char[] dfa_12 = DFA.unpackEncodedStringToUnsignedChars(dfa_12s);
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[][] dfa_16 = unpackEncodedStringArray(dfa_16s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_11;
            this.eof = dfa_11;
            this.min = dfa_12;
            this.max = dfa_13;
            this.accept = dfa_14;
            this.special = dfa_15;
            this.transition = dfa_16;
        }
        public String getDescription() {
            return "()* loopback of 468:3: ( ( (lv_functions_4_0= ruleAstFunction ) ) | ( (lv_procedures_5_0= ruleAstProcedure ) ) | ( (lv_variables_6_0= ruleAstConstantVariable ) ) | ( ( (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure ) ) ) | ( (lv_typedefs_8_0= ruleAstTypeDefinition ) ) | ( (lv_imports_9_0= ruleImport ) ) | ( (lv_entities_10_0= ruleAstEntity ) ) | ( (lv_namespaces_11_0= ruleAstNamespace ) ) )*";
        }
    }
    static final String dfa_17s = "\3\uffff\1\3\1\2\1\1\13\uffff";
    static final String[] dfa_18s = {
            "\1\1\76\uffff\1\2",
            "\1\5\37\uffff\1\5\15\uffff\1\4\1\3\57\uffff\1\5\10\uffff\1\5\1\uffff\10\5",
            "\1\6",
            "",
            "",
            "",
            "\1\7\21\uffff\1\10\76\uffff\1\2",
            "\1\11",
            "\1\4\1\3",
            "\1\12",
            "\1\13",
            "\1\14\1\15",
            "\1\16",
            "\1\10\76\uffff\1\2",
            "\1\17",
            "\1\20",
            "\1\14\1\15"
    };
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_7;
            this.max = dfa_8;
            this.accept = dfa_17;
            this.special = dfa_5;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "531:6: (lv_externals_7_1= ruleAstExternalVariable | lv_externals_7_2= ruleAstExternalFunction | lv_externals_7_3= ruleAstExternalProcedure )";
        }
    }
    static final String dfa_19s = "\30\uffff";
    static final String dfa_20s = "\1\4\1\uffff\1\4\3\uffff\1\4\4\uffff\2\4\1\77\1\4\1\22\1\27\1\12\1\34\2\4\1\27\1\12\1\34";
    static final String dfa_21s = "\1\165\1\uffff\1\4\3\uffff\1\44\4\uffff\1\165\1\4\1\101\1\4\1\30\1\27\1\12\1\35\1\4\1\165\1\27\1\12\1\35";
    static final String dfa_22s = "\1\uffff\1\10\1\uffff\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\15\uffff";
    static final String dfa_23s = "\30\uffff}>";
    static final String[] dfa_24s = {
            "\1\6\16\uffff\1\1\20\uffff\1\12\6\uffff\1\10\5\uffff\1\10\1\3\1\4\1\uffff\1\5\2\uffff\2\1\5\uffff\1\7\1\uffff\1\11\41\uffff\1\12\10\uffff\1\2\1\uffff\10\12",
            "",
            "\1\13",
            "",
            "",
            "",
            "\1\12\15\uffff\1\15\5\uffff\1\14\2\uffff\1\12\10\uffff\1\12",
            "",
            "",
            "",
            "",
            "\1\6\26\uffff\1\16\10\uffff\1\12\15\uffff\1\3\1\4\13\uffff\1\7\1\uffff\1\11\41\uffff\1\12\10\uffff\1\2\1\uffff\10\12",
            "\1\17",
            "\1\7\1\uffff\1\11",
            "\1\20",
            "\1\15\5\uffff\1\14",
            "\1\21",
            "\1\22",
            "\1\23\1\24",
            "\1\25",
            "\1\6\37\uffff\1\12\15\uffff\1\3\1\4\13\uffff\1\7\1\uffff\1\11\41\uffff\1\12\10\uffff\1\2\1\uffff\10\12",
            "\1\26",
            "\1\27",
            "\1\23\1\24"
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "()* loopback of 3298:3: ( ( (lv_functions_16_0= ruleAstFunction ) ) | ( (lv_procedures_17_0= ruleAstProcedure ) ) | ( (lv_invariants_18_0= ruleAstInvariant ) ) | ( (lv_actions_19_0= ruleAstAction ) ) | ( (lv_processes_20_0= ruleAstProcessDescription ) ) | ( (lv_initializes_21_0= ruleAstInitialize ) ) | ( (lv_stateVariables_22_0= ruleAstStateVariable ) ) )*";
        }
    }
    static final String dfa_25s = "\13\uffff";
    static final String dfa_26s = "\1\4\1\30\11\uffff";
    static final String dfa_27s = "\1\154\1\105\11\uffff";
    static final String dfa_28s = "\2\uffff\1\2\1\3\1\4\1\7\1\10\1\11\1\6\1\5\1\1";
    static final String dfa_29s = "\13\uffff}>";
    static final String[] dfa_30s = {
            "\1\1\34\uffff\1\4\10\uffff\1\3\11\uffff\1\6\17\uffff\1\5\1\uffff\1\7\45\uffff\1\2",
            "\1\12\2\uffff\1\2\10\uffff\1\12\2\uffff\1\11\32\uffff\1\12\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "7485:2: (this_AstStatementAssign_0= ruleAstStatementAssign | this_AstStatementCall_1= ruleAstStatementCall | this_AstStatementForeach_2= ruleAstStatementForeach | this_AstStatementIf_3= ruleAstStatementIf | this_AstStatementRead_4= ruleAstStatementRead | this_AstStatementWrite_5= ruleAstStatementWrite | this_AstStatementWhile_6= ruleAstStatementWhile | this_AstStatementBlock_7= ruleAstStatementBlock | this_AstStatementCase_8= ruleAstStatementCase )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0001200004220002L,0x0000100000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x000C201000080010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000100000L,0x0000100000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x000D601004380010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001200004000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000400080400010L,0x0040000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000400080000010L,0x0040000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000001020000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000001000000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000001040000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000050000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000001000040010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010040000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000180000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000001100000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000004000080010L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000001200000010L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000020000010L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x00000112080007F0L,0x000012A8F0800040L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002010040000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000040200000010L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000040200000012L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000001001000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000010000010000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000020000000010L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000080010000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000040280080010L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000040210080010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000040200080010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000140A00080010L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000100800080000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000008040000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000401020000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000401000000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000008000010L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000800000080000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x832E081000080010L,0x003FD00800000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0100000000080000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0010040200080010L,0x0000100000000050L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0004000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x00000000800C0000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00000000100C0000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000200000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0008000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0010000080080000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0010000010080000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0040000010080000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000001000010010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000010010000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0080000000010000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0800000000080010L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000008000012L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x6000000000000002L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x8000000000000010L,0x0000100000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000001040000010L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000001000000010L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000081080080010L,0x0000000000000001L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000080090080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000080090080000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000080010080000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000010L,0x0000100000000002L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x00000010000007F0L,0x0000280000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000002010000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000010L,0x0000100000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x00000112280007F0L,0x000012A8F0800040L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000080090000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0010040280080010L,0x0000100000000050L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0010140A00080010L,0x0000100000000050L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0010040200000012L,0x0000100000000050L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0002000010010000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000001001000002L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x00000018000807F0L,0x0000280000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0010040200000010L,0x0000100000000050L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000700L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001800L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000800002L,0x0000000000008000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0080000000000002L,0x0000000000070000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000000000380000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000C00000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x2000000000000002L,0x0000000007000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000001009000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000009000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000100800000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x00000312080407F0L,0x000012A8F0800040L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000020000040000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000020010040000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000080000L,0x0000004000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000080040000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000080000L,0x0000010000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0010080080000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0010080010000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0010040200080010L,0x0000140000000050L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x00000000000007E0L,0x0000200000000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000008000010L,0x0000100000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000001008000002L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000009000000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000008010000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000003000000010L,0x003FD00800000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000800002L,0x0000000000000004L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000400L});

}